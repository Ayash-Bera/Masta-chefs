{"id":"8673111d6945f88180297efddd3f52dd","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable2Step.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.20;\n\nimport {Ownable} from \"./Ownable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This extension of the {Ownable} contract includes a two-step mechanism to transfer\n * ownership, where the new owner must call {acceptOwnership} in order to replace the\n * old one. This can help prevent common mistakes, such as transfers of ownership to\n * incorrect accounts, or to contracts that are unable to interact with the\n * permission system.\n *\n * The initial owner is specified at deployment time in the constructor for `Ownable`. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2Step is Ownable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     *\n     * Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        if (pendingOwner() != sender) {\n            revert OwnableUnauthorizedAccount(sender);\n        }\n        _transferOwnership(sender);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/core/AuditorManager.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\npragma solidity 0.8.27;\n\nimport {Point} from \"../types/Types.sol\";\nimport {ZeroAddress} from \"../errors/Errors.sol\";\n\n/**\n * @title AuditorManager\n * @notice Abstract contract that manages auditor-related functionality for encrypted ERC operations\n * @dev This contract is responsible for:\n *      1. Storing and managing the auditor's address and public key\n *      2. Providing access control for auditor-related operations\n *      3. Emitting events when auditor information changes\n *\n * The auditor is a crucial component in the encrypted ERC system that:\n * - Ensures compliance with regulatory requirements\n * - Provides oversight for private operations\n */\nabstract contract AuditorManager {\n    ///////////////////////////////////////////////////\n    ///                   State Variables           ///\n    ///////////////////////////////////////////////////\n\n    /// @notice The address of the current auditor\n    /// @dev This address is used to identify the auditor and for access control\n    address public auditor = address(0);\n\n    /// @notice The public key of the current auditor\n    /// @dev This is used in zero-knowledge proofs to validate auditor signatures\n    ///      The point (0,1) is considered invalid as it's the identity point in the elliptic curve\n    Point public auditorPublicKey = Point({x: 0, y: 0});\n\n    ///////////////////////////////////////////////////\n    ///                    Events                   ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Emitted when the auditor's information is updated\n     * @param oldAuditor The previous auditor's address\n     * @param newAuditor The new auditor's address\n     */\n    event AuditorChanged(\n        address indexed oldAuditor,\n        address indexed newAuditor\n    );\n\n    ///////////////////////////////////////////////////\n    ///                   Modifiers                 ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Ensures that an auditor is properly\n     * @dev This modifier checks two conditions:\n     *      1. The auditor's public key is valid (not the identity point)\n     *      2. The auditor's address is not the zero address\n     *\n     * Requirements:\n     * - Auditor public key must be set (not the identity point)\n     * - Auditor address must be set (not zero address)\n     */\n    modifier onlyIfAuditorSet() {\n        require(\n            auditorPublicKey.x != 0 && auditorPublicKey.y != 1,\n            \"Auditor public key not set\"\n        );\n        require(auditor != address(0), \"Auditor not set\");\n        _;\n    }\n\n    ///////////////////////////////////////////////////\n    ///                   External                  ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Checks if the auditor's public key is properly set\n     * @return bool True if the auditor's public key is set and valid\n     * @dev This function is used to verify if the contract is ready for\n     *      operations that require auditor validation\n     */\n    function isAuditorKeySet() external view returns (bool) {\n        return auditorPublicKey.x != 0 && auditorPublicKey.y != 1;\n    }\n\n    ///////////////////////////////////////////////////\n    ///                   Internal                  ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Updates the auditor's information\n     * @param newAuditor The address of the new auditor\n     * @param publicKey The public key of the new auditor\n     * @dev This function:\n     *      1. Validates the new auditor's address\n     *      2. Updates the auditor's information\n     *      3. Emits an event to track the change\n     *\n     * Requirements:\n     * - newAuditor must not be the zero address\n     * - publicKey must be a valid point on the elliptic curve\n     */\n    function _updateAuditor(\n        address newAuditor,\n        uint256[2] memory publicKey\n    ) internal {\n        address oldAuditor = auditor;\n        // check if the auditor is the zero address\n        if (newAuditor == address(0)) {\n            revert ZeroAddress();\n        }\n\n        auditor = newAuditor;\n        auditorPublicKey = Point({x: publicKey[0], y: publicKey[1]});\n\n        emit AuditorChanged(oldAuditor, newAuditor);\n    }\n}\n"},"contracts/core/EncryptedUserBalances.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\nimport {EncryptedBalance, EGCT, BalanceHistory, AmountPCT} from \"../types/Types.sol\";\nimport {InvalidProof} from \"../errors/Errors.sol\";\nimport {BabyJubJub} from \"../libraries/BabyJubJub.sol\";\n\n/**\n * @title EncryptedUserBalances\n * @notice Contract for managing encrypted user balances in the privacy-preserving ERC system\n * @dev This contract handles:\n *      1. Storage and retrieval of encrypted balances\n *      2. Balance history tracking for transaction validation\n *      3. Cryptographic operations on encrypted balances\n *\n * The contract uses ElGamal encryption (EGCT) to store balances privately,\n * allowing users to prove they have sufficient funds without revealing the actual amount.\n */\ncontract EncryptedUserBalances {\n    ///////////////////////////////////////////////////\n    ///                   State Variables           ///\n    ///////////////////////////////////////////////////\n\n    /// @notice Mapping of user addresses to their encrypted balances for each token\n    /// @dev Structure: user => tokenId => EncryptedBalance\n    mapping(address user => mapping(uint256 tokenId => EncryptedBalance balance))\n        public balances;\n\n    ///////////////////////////////////////////////////\n    ///                   External                  ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Returns the encrypted balance for a user's standalone token\n     * @param user The address of the user\n     * @return eGCT The ElGamal ciphertext representing the encrypted balance\n     * @return nonce The current nonce used for balance validation\n     * @return amountPCTs Array of amount PCT\n     * @return balancePCT The current balance PCT\n     * @return transactionIndex The current transaction index\n     * @dev Since in standalone mode, the tokenId is always 0\n     */\n    function balanceOfStandalone(\n        address user\n    )\n        external\n        view\n        returns (\n            EGCT memory eGCT,\n            uint256 nonce,\n            AmountPCT[] memory amountPCTs,\n            uint256[7] memory balancePCT,\n            uint256 transactionIndex\n        )\n    {\n        return balanceOf(user, 0);\n    }\n\n    /**\n     * @notice Returns the encrypted balance for a user's specified token\n     * @param user The address of the user\n     * @param tokenId The ID of the token\n     * @return eGCT The ElGamal ciphertext representing the encrypted balance\n     * @return nonce The current nonce used for balance validation\n     * @return amountPCTs Array of amount PCT\n     * @return balancePCT The current balance PCT\n     * @return transactionIndex The current transaction index\n     */\n    function balanceOf(\n        address user,\n        uint256 tokenId\n    )\n        public\n        view\n        returns (\n            EGCT memory eGCT,\n            uint256 nonce,\n            AmountPCT[] memory amountPCTs,\n            uint256[7] memory balancePCT,\n            uint256 transactionIndex\n        )\n    {\n        EncryptedBalance storage balance = balances[user][tokenId];\n        return (\n            balance.eGCT,\n            balance.nonce,\n            balance.amountPCTs,\n            balance.balancePCT,\n            balance.transactionIndex\n        );\n    }\n\n    ///////////////////////////////////////////////////\n    ///                   Internal                  ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Adds an encrypted amount to a user's balance\n     * @param user The address of the user\n     * @param tokenId The ID of the token\n     * @param eGCT The ElGamal ciphertext representing the amount to add\n     * @param amountPCT The amount PCT for transaction history\n     * @dev This function:\n     *      1. Initializes the balance if it's the first transaction\n     *      2. Adds the encrypted amount to the existing balance\n     *      3. Updates the user history (by adding new amount PCT)\n     */\n    function _addToUserBalance(\n        address user,\n        uint256 tokenId,\n        EGCT memory eGCT,\n        uint256[7] memory amountPCT\n    ) internal {\n        EncryptedBalance storage balance = balances[user][tokenId];\n\n        // if user balance is not initialized, initialize it\n        if (balance.eGCT.c1.x == 0 && balance.eGCT.c1.y == 0) {\n            balance.eGCT = eGCT;\n        } else {\n            // if user balance is already initialized, add the encrypted amount to the balance\n            balance.eGCT.c1 = BabyJubJub._add(balance.eGCT.c1, eGCT.c1);\n            balance.eGCT.c2 = BabyJubJub._add(balance.eGCT.c2, eGCT.c2);\n        }\n\n        // in all the case\n        _addToUserHistory(user, tokenId, amountPCT);\n    }\n\n    /**\n     * @notice Subtracts an encrypted amount from a user's balance\n     * @param user The address of the user\n     * @param tokenId The ID of the token\n     * @param eGCT The ElGamal ciphertext representing the amount to subtract\n     * @param balancePCT The new balance PCT after subtraction\n     * @param transactionIndex The transaction index to delete from history\n     * @dev This function:\n     *      1. Subtracts the encrypted amount from the balance\n     *      2. Updates the user history (by removing the specified transaction)\n     *      3. Updates the balance PCT for user\n     */\n    function _subtractFromUserBalance(\n        address user,\n        uint256 tokenId,\n        EGCT memory eGCT,\n        uint256[7] memory balancePCT,\n        uint256 transactionIndex\n    ) internal {\n        EncryptedBalance storage balance = balances[user][tokenId];\n\n        balance.eGCT.c1 = BabyJubJub._sub(balance.eGCT.c1, eGCT.c1);\n        balance.eGCT.c2 = BabyJubJub._sub(balance.eGCT.c2, eGCT.c2);\n\n        // delete the amount pct from the balance\n        _deleteUserHistory(user, tokenId, transactionIndex);\n\n        // update balance pct\n        balance.balancePCT = balancePCT;\n    }\n\n    /**\n     * @notice Adds a transaction to the user's balance history\n     * @param user The address of the user\n     * @param tokenId The ID of the token\n     * @param amountPCT The amount PCT for the transaction\n     * @dev This function:\n     *      1. Calculates a unique hash for the current balance state\n     *      2. Marks this hash as valid in the balance history\n     *      3. Adds the amount PCT to the transaction history\n     *      4. Increments the transaction index\n     *\n     * The balance hash is unique for each transaction because it includes the nonce,\n     * which is incremented after each transaction. This ensures that each transaction\n     * can be uniquely identified and validated.\n     */\n    function _addToUserHistory(\n        address user,\n        uint256 tokenId,\n        uint256[7] memory amountPCT\n    ) internal {\n        EncryptedBalance storage balance = balances[user][tokenId];\n\n        uint256 nonce = balance.nonce;\n        uint256 balanceHash = _hashEGCT(balance.eGCT);\n        balanceHash = uint256(keccak256(abi.encode(balanceHash, nonce)));\n\n        // mark the balance hash as valid\n        balance.balanceList[balanceHash] = BalanceHistory({\n            index: balance.transactionIndex,\n            isValid: true\n        });\n\n        // add the amount pct to the balance\n        balance.amountPCTs.push(\n            AmountPCT({pct: amountPCT, index: balance.transactionIndex})\n        );\n\n        balance.transactionIndex++;\n    }\n\n    /**\n     * @notice Commits the current balance state to the user's history\n     * @param user The address of the user\n     * @param tokenId The ID of the token\n     * @dev This function:\n     *      1. Calculates a unique hash for the current balance state\n     *      2. Marks this hash as valid in the balance history\n     *      3. Increments the transaction index\n     *\n     * This is used to create a checkpoint of the balance state after operations\n     * that don't change the balance amount but need to be recorded in history.\n     */\n    function _commitUserBalance(address user, uint256 tokenId) internal {\n        EncryptedBalance storage balance = balances[user][tokenId];\n\n        uint256 nonce = balance.nonce;\n        uint256 balanceHash = _hashEGCT(balance.eGCT);\n        balanceHash = uint256(keccak256(abi.encode(balanceHash, nonce)));\n\n        balance.balanceList[balanceHash] = BalanceHistory({\n            index: balance.transactionIndex,\n            isValid: true\n        });\n\n        balance.transactionIndex++;\n    }\n\n    /**\n     * @notice Deletes transaction history up to a specific transaction index\n     * @param user The address of the user\n     * @param tokenId The ID of the token\n     * @param transactionIndex The transaction index to delete up to\n     * @dev This function:\n     *      1. Removes amount PCTs from the history up to the specified index\n     *      2. Increments the nonce (invalidate all previous balance hashes)\n     *      3. Commits the new balance state to history\n     *\n     * Instead of deleting individual history entries, this function uses the nonce\n     * to invalidate all previous balance hashes at once, which is more gas efficient.\n     */\n    function _deleteUserHistory(\n        address user,\n        uint256 tokenId,\n        uint256 transactionIndex\n    ) internal {\n        EncryptedBalance storage balance = balances[user][tokenId];\n\n        for (uint256 i = balance.amountPCTs.length; i > 0; i--) {\n            uint256 index = i - 1;\n\n            if (balance.amountPCTs[index].index <= transactionIndex) {\n                balance.amountPCTs[index] = balance.amountPCTs[\n                    balance.amountPCTs.length - 1\n                ];\n                balance.amountPCTs.pop();\n            }\n        }\n\n        balance.nonce++;\n\n        _commitUserBalance(user, tokenId);\n    }\n\n    /**\n     * @notice Checks if a balance hash is valid for a user\n     * @param user The address of the user\n     * @param tokenId The ID of the token\n     * @param balanceHash The hash to validate\n     * @return isValid True if the hash is valid, false otherwise\n     * @return index The transaction index associated with the hash\n     * This is used to validate that a user is using a recent and valid balance\n     * in their transactions.\n     */\n    function _isBalanceValid(\n        address user,\n        uint256 tokenId,\n        uint256 balanceHash\n    ) internal view returns (bool, uint256) {\n        uint256 nonce = balances[user][tokenId].nonce;\n        uint256 hashWithNonce = uint256(\n            keccak256(abi.encode(balanceHash, nonce))\n        );\n        return (\n            balances[user][tokenId].balanceList[hashWithNonce].isValid,\n            balances[user][tokenId].balanceList[hashWithNonce].index\n        );\n    }\n\n    /**\n     * @notice Verifies a user's balance\n     * @param user The address of the user\n     * @param tokenId The ID of the token\n     * @param eGCT The ElGamal ciphertext representing the balance\n     * @return transactionIndex The transaction index associated with the balance\n     * @dev If balance is not valid, it reverts with InvalidProof error\n     */\n    function _verifyUserBalance(\n        address user,\n        uint256 tokenId,\n        EGCT memory eGCT\n    ) internal view returns (uint256) {\n        // hash the encrypted balance\n        uint256 balanceHash = _hashEGCT(eGCT);\n\n        (bool isValid, uint256 transactionIndex) = _isBalanceValid(\n            user,\n            tokenId,\n            balanceHash\n        );\n        if (!isValid) {\n            revert InvalidProof();\n        }\n\n        return transactionIndex;\n    }\n\n    /**\n     * @notice Calculates a hash of an ElGamal ciphertext\n     * @param eGCT The ElGamal ciphertext to hash\n     * @return The hash of the ciphertext\n     * @dev This function creates a unique identifier for an encrypted balance\n     *      by hashing all components of the ElGamal ciphertext.\n     */\n    function _hashEGCT(EGCT memory eGCT) internal pure returns (uint256) {\n        return\n            uint256(\n                keccak256(\n                    abi.encode(eGCT.c1.x, eGCT.c1.y, eGCT.c2.x, eGCT.c2.y)\n                )\n            );\n    }\n}\n"},"contracts/core/Registrar.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\nimport {Point, RegisterProof} from \"../types/Types.sol\";\nimport {IRegistrationVerifier} from \"../interfaces/verifiers/IRegistrationVerifier.sol\";\nimport {UserAlreadyRegistered, InvalidChainId, InvalidSender, InvalidRegistrationHash, InvalidProof} from \"../errors/Errors.sol\";\n\n// libraries\nimport {BabyJubJub} from \"../libraries/BabyJubJub.sol\";\n\n/**\n * @title Registrar\n * @notice Contract for managing user registration in the privacy-preserving ERC system\n * @dev This contract handles:\n *      1. User registration with public keys\n *      2. Verification of registration proofs\n *\n * The Registrar is a critical component that:\n * - Associates Ethereum addresses with public keys for encrypted operations\n */\ncontract Registrar {\n    ///////////////////////////////////////////////////\n    ///                   State Variables           ///\n    ///////////////////////////////////////////////////\n\n    /// @notice The verifier contract used to validate registration proofs\n    IRegistrationVerifier public registrationVerifier;\n\n    /// @notice Mapping of user addresses to their public keys\n    mapping(address userAddress => Point userPublicKey) public userPublicKeys;\n\n    /// @notice Mapping of registration hashes to registration status\n    /// @dev Used to prevent duplicate registrations\n    mapping(uint256 registrationHash => bool isRegistered) public isRegistered;\n\n    ///////////////////////////////////////////////////\n    ///                    Events                   ///\n    ///////////////////////////////////////////////////\n\n    /// @notice Emitted when a user is registered\n    /// @param user Address of the user\n    /// @param publicKey Public key of the user\n    event Register(address indexed user, Point publicKey);\n\n    ///////////////////////////////////////////////////\n    ///                   Constructor               ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Initializes the Registrar contract\n     * @param registrationVerifier_ Address of the registration verifier contract\n     */\n    constructor(address registrationVerifier_) {\n        registrationVerifier = IRegistrationVerifier(registrationVerifier_);\n    }\n\n    ///////////////////////////////////////////////////\n    ///                   External                  ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Registers a user with their public key\n     * @param proof The zero-knowledge proof proving the validity of the registration\n     * @dev This function:\n     *      1. Verifies the sender matches the account in the proof\n     *      2. Checks the chain ID matches\n     *      3. Validates the registration hash\n     *      4. Verifies the zero-knowledge proof\n     *      5. Registers the user with their public key\n     *\n     * Requirements:\n     * - Sender must match the account in the proof\n     * - Chain ID must match\n     * - Registration hash must be valid\n     * - User must not be already registered\n     * - Proof must be valid\n     */\n    function register(RegisterProof calldata proof) external {\n        // extract public inputs\n        uint256[5] memory input = proof.publicSignals;\n\n        address account = address(uint160(input[2]));\n\n        // check if the sender matches the account in the proof\n        if (msg.sender != account) {\n            revert InvalidSender();\n        }\n\n        // check if the chain ID matches\n        if (block.chainid != input[3]) {\n            revert InvalidChainId();\n        }\n\n        // check if the registration hash is valid\n        uint256 registrationHash = input[4];\n        if (registrationHash >= BabyJubJub.Q) {\n            revert InvalidRegistrationHash();\n        }\n\n        // check if the user is already registered\n        if (isRegistered[registrationHash] && isUserRegistered(account)) {\n            revert UserAlreadyRegistered();\n        }\n\n        // Verify the proof\n        _verifyProof(proof);\n\n        _register(account, Point({x: input[0], y: input[1]}), registrationHash);\n    }\n\n    /**\n     * @notice Checks if a user is registered\n     * @param user The address of the user to check\n     * @return bool True if the user is registered, false otherwise\n     * @dev A user is considered registered if their public key is not the zero point (0,0)\n     */\n    function isUserRegistered(address user) public view returns (bool) {\n        return userPublicKeys[user].x != 0 && userPublicKeys[user].y != 0;\n    }\n\n    /**\n     * @notice Gets the public key of a user\n     * @param user The address of the user\n     * @return publicKey The public key of the user as a uint256 array\n     * @dev Returns the x and y coordinates of the user's public key\n     */\n    function getUserPublicKey(\n        address user\n    ) public view returns (uint256[2] memory publicKey) {\n        return [userPublicKeys[user].x, userPublicKeys[user].y];\n    }\n\n    ///////////////////////////////////////////////////\n    ///                   Internal                  ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Registers a user with their public key\n     * @param user The address of the user\n     * @param publicKey The public key of the user\n     * @param registrationHash The registration hash\n     * @dev This function:\n     *      1. Sets the user's public key\n     *      2. Marks the registration hash as used\n     *      3. Emits a Register event\n     */\n    function _register(\n        address user,\n        Point memory publicKey,\n        uint256 registrationHash\n    ) internal {\n        userPublicKeys[user] = publicKey;\n        isRegistered[registrationHash] = true;\n        emit Register(user, publicKey);\n    }\n\n    /**\n     * @notice Verifies a registration proof\n     * @param proof_ The proof to verify\n     * @dev This function:\n     *      1. Extracts the proof points and public inputs\n     *      2. Calls the verifier contract to verify the proof\n     *      3. Reverts if the proof is invalid\n     */\n    function _verifyProof(RegisterProof calldata proof_) internal view {\n        uint256[2] memory pointA_ = proof_.proofPoints.a;\n        uint256[2][2] memory pointB_ = proof_.proofPoints.b;\n        uint256[2] memory pointC_ = proof_.proofPoints.c;\n        uint256[5] memory input = proof_.publicSignals;\n\n        // Verify the proof\n        bool verified_ = registrationVerifier.verifyProof(\n            pointA_,\n            pointB_,\n            pointC_,\n            input\n        );\n\n        if (!verified_) {\n            revert InvalidProof();\n        }\n    }\n}\n"},"contracts/core/TokenTracker.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\nimport {Ownable2Step, Ownable} from \"@openzeppelin/contracts/access/Ownable2Step.sol\";\nimport {TokenBlacklisted, InvalidOperation} from \"../errors/Errors.sol\";\n\n/**\n * @title TokenTracker\n * @notice Contract for tracking ERC20 tokens in the encrypted ERC system\n * @dev This contract manages:\n *      1. Token registration and identification\n *      2. Token blacklisting for security\n *      3. Contract Mode (converter vs standalone)\n *\n * The contract can operate in two modes:\n * - Converter Mode: Wraps existing ERC20 tokens into encrypted tokens\n * - Standalone Mode: Operates as a standalone encrypted token\n */\ncontract TokenTracker is Ownable2Step {\n    ///////////////////////////////////////////////////\n    ///                   State Variables           ///\n    ///////////////////////////////////////////////////\n\n    /// @notice The next available token ID\n    /// @dev Token IDs start from 1, with 0 reserved for the standalone version\n    uint256 public nextTokenId = 1;\n\n    /// @notice Indicates if the contract is operating in converter mode\n    bool public isConverter;\n\n    /// @notice Mapping from token address to token ID\n    mapping(address tokenAddress => uint256 tokenId) public tokenIds;\n\n    /// @notice Mapping from token ID to token address\n    mapping(uint256 tokenId => address tokenAddress) public tokenAddresses;\n\n    /// @notice Array of all registered token addresses\n    address[] public tokens;\n\n    /// @notice Mapping to track blacklisted tokens\n    mapping(address tokenAddress => bool isBlacklisted)\n        public blacklistedTokens;\n\n    ///////////////////////////////////////////////////\n    ///                   Modifiers                 ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Ensures the function is only called in converter mode\n     * @dev Reverts with InvalidOperation if called in standalone mode\n     */\n    modifier onlyForConverter() {\n        if (!isConverter) {\n            revert InvalidOperation();\n        }\n        _;\n    }\n\n    /**\n     * @notice Ensures the function is only called in standalone mode\n     * @dev Reverts with InvalidOperation if called in converter mode\n     */\n    modifier onlyForStandalone() {\n        if (isConverter) {\n            revert InvalidOperation();\n        }\n        _;\n    }\n\n    /**\n     * @notice Ensures the token is not blacklisted\n     * @param tokenAddress Address of the token to check\n     * @dev Reverts with TokenBlacklisted if the token is blacklisted\n     */\n    modifier revertIfBlacklisted(address tokenAddress) {\n        if (blacklistedTokens[tokenAddress]) {\n            revert TokenBlacklisted(tokenAddress);\n        }\n        _;\n    }\n\n    ///////////////////////////////////////////////////\n    ///                   Constructor               ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Initializes the TokenTracker contract\n     * @param isConverter_ Determines if the contract operates in converter mode\n     * @dev Sets the initial mode of operation and initializes the owner\n     */\n    constructor(bool isConverter_) Ownable(msg.sender) {\n        isConverter = isConverter_;\n    }\n\n    ///////////////////////////////////////////////////\n    ///                   External                  ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Sets the blacklist status of a token\n     * @param token Address of the token to blacklist/unblacklist\n     * @param blacklisted True to blacklist, false to unblacklist\n     * @dev Only the owner can call this function\n     */\n    function setTokenBlacklist(\n        address token,\n        bool blacklisted\n    ) external onlyOwner {\n        blacklistedTokens[token] = blacklisted;\n    }\n\n    /**\n     * @notice Returns an array of all registered token addresses\n     * @return Array of token addresses\n     * @dev Used for enumeration and listing all supported tokens\n     */\n    function getTokens() external view returns (address[] memory) {\n        return tokens;\n    }\n\n    ///////////////////////////////////////////////////\n    ///                   Internal                  ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Adds a new token to the tracker\n     * @param tokenAddress Address of the token to add\n     * @dev This function:\n     *      1. Assigns a new token ID\n     *      2. Updates the token mappings\n     *      3. Adds the token to the tokens array\n     *      4. Increments the next token ID\n     */\n    function _addToken(address tokenAddress) internal {\n        uint256 newTokenId = nextTokenId;\n        tokenIds[tokenAddress] = newTokenId;\n        tokenAddresses[newTokenId] = tokenAddress;\n        tokens.push(tokenAddress);\n        nextTokenId++;\n    }\n}\n"},"contracts/core/UniversalEncryptedERC.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.27;\n\n// contracts\nimport {TokenTracker} from \"./TokenTracker.sol\";\nimport {EncryptedUserBalances} from \"./EncryptedUserBalances.sol\";\nimport {AuditorManager} from \"./AuditorManager.sol\";\n\n// libraries\nimport {BabyJubJub} from \"../libraries/BabyJubJub.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n// types\nimport {CreateEncryptedERCParams, Point, EGCT, EncryptedBalance, AmountPCT, MintProof, TransferProof, WithdrawProof, BurnProof, TransferInputs} from \"../types/Types.sol\";\n\n// errors\nimport {UserNotRegistered, InvalidProof, TransferFailed, UnknownToken, InvalidChainId, InvalidNullifier, ZeroAddress} from \"../errors/Errors.sol\";\n\n// interfaces\nimport {IRegistrar} from \"../interfaces/IRegistrar.sol\";\nimport {IMintVerifier} from \"../interfaces/verifiers/IMintVerifier.sol\";\nimport {IWithdrawVerifier} from \"../interfaces/verifiers/IWithdrawVerifier.sol\";\nimport {ITransferVerifier} from \"../interfaces/verifiers/ITransferVerifier.sol\";\nimport {IBurnVerifier} from \"../interfaces/verifiers/IBurnVerifier.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\n//             /$$$$$$$$ /$$$$$$$   /$$$$$$\n//            | $$_____/| $$__  $$ /$$__  $$\n//    /$$$$$$ | $$      | $$  \\ $$| $$  \\__/\n//   /$$__  $$| $$$$$   | $$$$$$$/| $$  | $$\n//  | $$_____/| $$      | $$  \\ $$| $$  | $$\n//  |  $$$$$$$| $$$$$$$$| $$  | $$|  $$$$$$/\n//   \\_______/|________/|__/  |__/ \\______/\n//\n/**\n * @title UniversalEncryptedERC\n * @notice A universal privacy-preserving ERC20 token implementation that uses zero-knowledge proofs for managing balances in encrypted manner.\n * @dev This contract implements Encrypted ERC operations using zero-knowledge proofs with support for:\n *      - ERC20 tokens\n *      - Native tokens (ETH, AVAX, etc.)\n *      - Multi-chain deployment\n *      - Universal token standard\n *\n * Key features:\n * - Encrypted ERC has 2 modes:\n *   - Standalone Mode: Act like a standalone ERC20 token (mint, burn, transfer)\n *   - Converter Mode: Wraps existing ERC20 tokens and encrypted ERC20 tokens (deposit, withdraw, transfer)\n * - Universal Token Support: Handles both ERC20 and native tokens\n * - Multi-chain Support: Deployable on any EVM chain\n * - Auditor Manager: Manages auditor's public key\n * - Token Tracker: Manages ERC20 token registration for deposit and withdrawal\n * - Encrypted User Balances: Manages encrypted balances for users in encrypted manner\n *\n * The contract uses three main components:\n * 1. TokenTracker: Manages token registration and tracking\n * 2. EncryptedUserBalances: Handles encrypted balance storage and updates\n * 3. AuditorManager: Manages auditor-related functionality\n */\ncontract UniversalEncryptedERC is TokenTracker, EncryptedUserBalances, AuditorManager {\n    ///////////////////////////////////////////////////\n    ///                   State Variables           ///\n    ///////////////////////////////////////////////////\n\n    /// @notice Address of the registrar contract that manages user registration\n    IRegistrar public registrar;\n\n    /// @notice Verifier contracts for each operation\n    IMintVerifier public mintVerifier;\n    IWithdrawVerifier public withdrawVerifier;\n    ITransferVerifier public transferVerifier;\n    IBurnVerifier public burnVerifier;\n\n    /// @notice Token metadata\n    string public name;\n    string public symbol;\n    uint8 public immutable decimals;\n\n    /// @notice Mapping to track used mint nullifiers to prevent double-minting\n    mapping(uint256 mintNullifier => bool isUsed) public alreadyMinted;\n\n    /// @notice Mapping to track supported token types\n    mapping(address => TokenType) public tokenTypes;\n    \n    /// @notice Mapping to track native token balances\n    mapping(address => uint256) public nativeBalances;\n\n    /// @notice Enum for different token types\n    enum TokenType { ERC20, NATIVE, UNSUPPORTED }\n\n    ///////////////////////////////////////////////////\n    ///                    Events                   ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Emitted when a private mint operation occurs\n     * @param user Address of the user receiving the minted tokens\n     * @param auditorPCT Auditor PCT values for compliance tracking\n     * @param auditorAddress Address of the auditor\n     * @dev This event is emitted when tokens are privately minted to a user\n     */\n    event PrivateMint(\n        address indexed user,\n        uint256[7] auditorPCT,\n        address indexed auditorAddress\n    );\n\n    /**\n     * @notice Emitted when a private burn operation occurs\n     * @param user Address of the user burning the tokens\n     * @param auditorPCT Auditor PCT values for compliance tracking\n     * @param auditorAddress Address of the auditor\n     * @dev This event is emitted when tokens are privately burned by a user\n     */\n    event PrivateBurn(\n        address indexed user,\n        uint256[7] auditorPCT,\n        address indexed auditorAddress\n    );\n\n    /**\n     * @notice Emitted when a private transfer operation occurs\n     * @param from Address of the sender\n     * @param to Address of the receiver\n     * @param auditorPCT Auditor PCT values for compliance tracking\n     * @param auditorAddress Address of the auditor\n     * @dev This event is emitted when tokens are privately transferred between users\n     */\n    event PrivateTransfer(\n        address indexed from,\n        address indexed to,\n        uint256[7] auditorPCT,\n        address indexed auditorAddress\n    );\n\n    /**\n     * @notice Emitted when a deposit operation occurs\n     * @param user Address of the user making the deposit\n     * @param amount Amount of tokens deposited\n     * @param dust Amount of dust (remainder) from the deposit\n     * @param tokenId ID of the token being deposited\n     * @param tokenType Type of token being deposited\n     * @dev This event is emitted when a user deposits tokens into the contract\n     */\n    event Deposit(\n        address indexed user,\n        uint256 amount,\n        uint256 dust,\n        uint256 tokenId,\n        TokenType tokenType\n    );\n\n    /**\n     * @notice Emitted when a withdrawal operation occurs\n     * @param user Address of the user making the withdrawal\n     * @param amount Amount of tokens withdrawn\n     * @param tokenId ID of the token being withdrawn\n     * @param auditorPCT Auditor PCT values for compliance tracking\n     * @param auditorAddress Address of the auditor\n     * @dev This event is emitted when a user withdraws tokens from the contract\n     */\n    event Withdraw(\n        address indexed user,\n        uint256 amount,\n        uint256 tokenId,\n        uint256[7] auditorPCT,\n        address indexed auditorAddress\n    );\n\n    /**\n     * @notice Emitted when a native token deposit occurs\n     * @param user Address of the user making the deposit\n     * @param amount Amount of native tokens deposited\n     * @param tokenId ID of the token being deposited\n     * @dev This event is emitted when a user deposits native tokens into the contract\n     */\n    event NativeDeposit(\n        address indexed user,\n        uint256 amount,\n        uint256 tokenId\n    );\n\n    /**\n     * @notice Emitted when a native token withdrawal occurs\n     * @param user Address of the user making the withdrawal\n     * @param amount Amount of native tokens withdrawn\n     * @param tokenId ID of the token being withdrawn\n     * @dev This event is emitted when a user withdraws native tokens from the contract\n     */\n    event NativeWithdraw(\n        address indexed user,\n        uint256 amount,\n        uint256 tokenId\n    );\n\n    ///////////////////////////////////////////////////\n    ///                   Modifiers                 ///\n    ///////////////////////////////////////////////////\n    modifier onlyIfUserRegistered(address user) {\n        bool isRegistered = registrar.isUserRegistered(user);\n        if (!isRegistered) {\n            revert UserNotRegistered();\n        }\n        _;\n    }\n\n    ///////////////////////////////////////////////////\n    ///                   Constructor               ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Initializes the UniversalEncryptedERC contract with the given parameters\n     * @param params The initialization parameters containing contract addresses and token metadata\n     * @dev This constructor sets up the contract with necessary verifiers, registrar, and token metadata.\n     *      It also determines whether the contract will function as a converter or standalone token.\n     */\n    constructor(\n        CreateEncryptedERCParams memory params\n    ) TokenTracker(params.isConverter) {\n        // Validate contract addresses\n        if (\n            params.registrar == address(0) ||\n            params.mintVerifier == address(0) ||\n            params.withdrawVerifier == address(0) ||\n            params.transferVerifier == address(0) ||\n            params.burnVerifier == address(0)\n        ) {\n            revert ZeroAddress();\n        }\n\n        // Initialize contracts\n        registrar = IRegistrar(params.registrar);\n        mintVerifier = IMintVerifier(params.mintVerifier);\n        withdrawVerifier = IWithdrawVerifier(params.withdrawVerifier);\n        transferVerifier = ITransferVerifier(params.transferVerifier);\n        burnVerifier = IBurnVerifier(params.burnVerifier);\n\n        // if contract is not a converter, then set the name and symbol\n        if (!params.isConverter) {\n            name = params.name;\n            symbol = params.symbol;\n        }\n\n        decimals = params.decimals;\n\n        // Register native token (address(0) represents native tokens)\n        tokenTypes[address(0)] = TokenType.NATIVE;\n    }\n\n    ///////////////////////////////////////////////////\n    ///                   External                  ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Sets the auditor's public key for a registered user\n     * @param user Address of the user to set as auditor\n     * @dev This function:\n     *      1. Verifies the user is registered\n     *      2. Retrieves the user's public key\n     *      3. Updates the auditor's information\n     *\n     * Requirements:\n     * - Caller must be the contract owner\n     * - User must be registered\n     */\n    function setAuditorPublicKey(\n        address user\n    ) external onlyOwner onlyIfUserRegistered(user) {\n        uint256[2] memory publicKey_ = registrar.getUserPublicKey(user);\n        _updateAuditor(user, publicKey_);\n    }\n\n    /**\n     * @notice Registers a new token type\n     * @param tokenAddress Address of the token to register\n     * @param tokenType Type of the token (ERC20, NATIVE, etc.)\n     * @dev Only the owner can register new token types\n     */\n    function registerTokenType(address tokenAddress, TokenType tokenType) external onlyOwner {\n        tokenTypes[tokenAddress] = tokenType;\n    }\n\n    /**\n     * @notice Performs a private mint operation for a registered user\n     * @param user The address of the user to mint tokens to\n     * @param proof The zero-knowledge proof proving the validity of the mint operation\n     * @dev This function:\n     *      1. Validates the chain ID and user registration\n     *      2. Verifies the user's public key matches the proof\n     *      3. Verifies the auditor's public key matches the proof\n     *      4. Checks the mint nullifier hasn't been used\n     *      5. Verifies the zero-knowledge proof\n     *      6. Updates the user's encrypted balance\n     *\n     * Requirements:\n     * - Caller must be the contract owner\n     * - Auditor must be set\n     * - Contract must be in standalone mode\n     * - User must be registered\n     * - Proof must be valid\n     */\n    function privateMint(\n        address user,\n        MintProof calldata proof\n    )\n        external\n        onlyOwner\n        onlyIfAuditorSet\n        onlyForStandalone\n        onlyIfUserRegistered(user)\n    {\n        uint256[24] memory publicInputs = proof.publicSignals;\n\n        // Validate chain ID\n        if (block.chainid != publicInputs[0]) {\n            revert InvalidChainId();\n        }\n\n        // validate public keys\n        _validatePublicKey(user, [publicInputs[2], publicInputs[3]]);\n        _validateAuditorPublicKey([publicInputs[15], publicInputs[16]]);\n\n        // Validate and check mint nullifier\n        uint256 mintNullifier = publicInputs[1];\n        if (mintNullifier >= BabyJubJub.Q) {\n            revert InvalidNullifier();\n        }\n        if (alreadyMinted[mintNullifier]) {\n            revert InvalidProof();\n        }\n\n        // Verify the zero-knowledge proof\n        bool isVerified = mintVerifier.verifyProof(\n            proof.proofPoints.a,\n            proof.proofPoints.b,\n            proof.proofPoints.c,\n            proof.publicSignals\n        );\n        if (!isVerified) {\n            revert InvalidProof();\n        }\n\n        {\n            // Extract the encrypted amount from the proof\n            EGCT memory encryptedAmount = EGCT({\n                c1: Point({x: publicInputs[4], y: publicInputs[5]}),\n                c2: Point({x: publicInputs[6], y: publicInputs[7]})\n            });\n\n            // Extract amount PCT\n            uint256[7] memory amountPCT;\n            for (uint256 i = 0; i < 7; i++) {\n                amountPCT[i] = publicInputs[8 + i];\n            }\n\n            // Perform the private mint operation\n            _privateMint(user, encryptedAmount, amountPCT);\n        }\n\n        // mark the mint nullifier as used\n        alreadyMinted[mintNullifier] = true;\n\n        uint256[7] memory auditorPCT;\n        for (uint256 i = 0; i < auditorPCT.length; i++) {\n            auditorPCT[i] = publicInputs[17 + i];\n        }\n\n        emit PrivateMint(user, auditorPCT, auditor);\n    }\n\n    /**\n     * @notice Performs a private burn operation\n     * @param proof The transfer proof proving the validity of the burn operation\n     * @param balancePCT The balance PCT for the sender after the burn\n     * @dev This function:\n     *      1. Validates the sender is registered\n     *      2. Verifies the sender's public key matches the proof\n     *      3. Verifies the burn address's public key matches the proof\n     *      4. Verifies the auditor's public key matches the proof\n     *      5. Verifies the zero-knowledge proof\n     *      6. Transfers the encrypted amount to the burn address\n     *\n     * Requirements:\n     * - Auditor must be set\n     * - Contract must be in standalone mode\n     * - Sender must be registered\n     * - Proof must be valid\n     */\n    function privateBurn(\n        BurnProof calldata proof,\n        uint256[7] calldata balancePCT\n    )\n        external\n        onlyIfAuditorSet\n        onlyForStandalone\n        onlyIfUserRegistered(msg.sender)\n    {\n        uint256[19] calldata publicInputs = proof.publicSignals;\n        address from = msg.sender;\n\n        // validate public key\n        _validatePublicKey(from, [publicInputs[0], publicInputs[1]]);\n\n        // validate auditor public key\n        _validateAuditorPublicKey([publicInputs[10], publicInputs[11]]);\n\n        // Verify the zero-knowledge proof\n        bool isVerified = burnVerifier.verifyProof(\n            proof.proofPoints.a,\n            proof.proofPoints.b,\n            proof.proofPoints.c,\n            proof.publicSignals\n        );\n        if (!isVerified) {\n            revert InvalidProof();\n        }\n\n        // provided encrypted balance\n        EGCT memory providedBalance = EGCT({\n            c1: Point({x: publicInputs[2], y: publicInputs[3]}),\n            c2: Point({x: publicInputs[4], y: publicInputs[5]})\n        });\n\n        // extract encrypted burn amount\n        EGCT memory encryptedBurnAmount = EGCT({\n            c1: Point({x: publicInputs[6], y: publicInputs[7]}),\n            c2: Point({x: publicInputs[8], y: publicInputs[9]})\n        });\n\n        // perform the burn (since burn is only for Standalone, always passing tokenId as 0)\n        _privateBurn(\n            from,\n            0,\n            providedBalance,\n            encryptedBurnAmount,\n            balancePCT\n        );\n\n        // extract auditor PCT\n        uint256[7] memory auditorPCT;\n        for (uint256 i = 0; i < auditorPCT.length; i++) {\n            auditorPCT[i] = publicInputs[12 + i];\n        }\n\n        emit PrivateBurn(from, auditorPCT, auditor);\n    }\n\n    /**\n     * @notice Performs a private transfer between two users\n     * @param to Address of the receiver\n     * @param tokenId ID of the token to transfer\n     * @param proof The transfer proof proving the validity of the transfer\n     * @param balancePCT The balance PCT for the sender after the transfer\n     * @dev This function:\n     *      1. Validates both sender and receiver are registered\n     *      2. Verifies both public keys match the proof\n     *      3. Verifies the auditor's public key matches the proof\n     *      4. Verifies the zero-knowledge proof\n     *      5. Updates both users' encrypted balances\n     *\n     * Requirements:\n     * - Auditor must be set\n     * - Both sender and receiver must be registered\n     * - Proof must be valid\n     */\n    function transfer(\n        address to,\n        uint256 tokenId,\n        TransferProof memory proof,\n        uint256[7] calldata balancePCT\n    )\n        public\n        onlyIfAuditorSet\n        onlyIfUserRegistered(msg.sender)\n        onlyIfUserRegistered(to)\n    {\n        uint256[32] memory publicInputs = proof.publicSignals;\n\n        // validate user's public key\n        _validatePublicKey(msg.sender, [publicInputs[0], publicInputs[1]]);\n        _validatePublicKey(to, [publicInputs[10], publicInputs[11]]);\n\n        _validateAuditorPublicKey([publicInputs[23], publicInputs[24]]);\n\n        // Verify the zero-knowledge proof\n        bool isVerified = transferVerifier.verifyProof(\n            proof.proofPoints.a,\n            proof.proofPoints.b,\n            proof.proofPoints.c,\n            proof.publicSignals\n        );\n        if (!isVerified) {\n            revert InvalidProof();\n        }\n\n        // Extract the inputs for the transfer operation\n        TransferInputs memory transferInputs = _extractTransferInputs(\n            publicInputs\n        );\n\n        // Perform the transfer\n        _transfer({\n            from: msg.sender,\n            to: to,\n            tokenId: tokenId,\n            providedBalance: transferInputs.providedBalance,\n            senderEncryptedAmount: transferInputs.senderEncryptedAmount,\n            receiverEncryptedAmount: transferInputs.receiverEncryptedAmount,\n            balancePCT: balancePCT,\n            amountPCT: transferInputs.amountPCT\n        });\n\n        // Extract auditor PCT and emit event\n        {\n            uint256[7] memory auditorPCT;\n            for (uint256 i = 0; i < 7; i++) {\n                auditorPCT[i] = publicInputs[25 + i];\n            }\n\n            emit PrivateTransfer(msg.sender, to, auditorPCT, auditor);\n        }\n    }\n\n    /**\n     * @notice Deposits tokens into the contract (supports both ERC20 and native tokens)\n     * @param amount Amount of tokens to deposit\n     * @param tokenAddress Address of the token to deposit (address(0) for native tokens)\n     * @param amountPCT Amount PCT for the deposit\n     * @dev This function:\n     *      1. Validates the user is registered\n     *      2. Determines token type and handles accordingly\n     *      3. Converts the tokens to encrypted tokens\n     *      4. Adds the encrypted amount to the user's balance\n     *      5. Returns any dust (remainder) to the user\n     *\n     * Requirements:\n     * - Auditor must be set\n     * - Contract must be in converter mode\n     * - Token must not be blacklisted (for ERC20 tokens)\n     * - User must be registered\n     */\n    function deposit(\n        uint256 amount,\n        address tokenAddress,\n        uint256[7] memory amountPCT\n    )\n        public\n        payable\n        onlyIfAuditorSet\n        onlyForConverter\n        onlyIfUserRegistered(msg.sender)\n    {\n        // Check if it's a native token deposit\n        if (tokenAddress == address(0)) {\n            _handleNativeDeposit(amount, amountPCT);\n            return;\n        }\n\n        // Check if token is blacklisted (only for ERC20 tokens)\n        if (blacklistedTokens[tokenAddress]) {\n            revert(\"Token is blacklisted\");\n        }\n\n        // Handle ERC20 token deposit\n        _handleERC20Deposit(amount, tokenAddress, amountPCT);\n    }\n\n    /**\n     * @notice Withdraws encrypted tokens as regular tokens\n     * @param tokenId ID of the token to withdraw\n     * @param proof The withdraw proof proving the validity of the withdrawal\n     * @param balancePCT The balance PCT for the user after the withdrawal\n     * @dev This function:\n     *      1. Validates the user is registered\n     *      2. Verifies the user's public key matches the proof\n     *      3. Verifies the auditor's public key matches the proof\n     *      4. Verifies the zero-knowledge proof\n     *      5. Subtracts the encrypted amount from the user's balance\n     *      6. Converts the tokens to regular tokens\n     *\n     * Requirements:\n     * - Auditor must be set\n     * - Contract must be in converter mode\n     * - User must be registered\n     * - Proof must be valid\n     */\n    function withdraw(\n        uint256 tokenId,\n        WithdrawProof memory proof,\n        uint256[7] memory balancePCT\n    )\n        public\n        onlyIfAuditorSet\n        onlyForConverter\n        onlyIfUserRegistered(msg.sender)\n    {\n        address from = msg.sender;\n        uint256[16] memory publicInputs = proof.publicSignals;\n        uint256 amount = publicInputs[0];\n\n        // validate public keys\n        _validatePublicKey(from, [publicInputs[1], publicInputs[2]]);\n        _validateAuditorPublicKey([publicInputs[7], publicInputs[8]]);\n\n        // Verify the zero-knowledge proof\n        bool isVerified = withdrawVerifier.verifyProof(\n            proof.proofPoints.a,\n            proof.proofPoints.b,\n            proof.proofPoints.c,\n            proof.publicSignals\n        );\n        if (!isVerified) {\n            revert InvalidProof();\n        }\n\n        // Check if it's a native token withdrawal\n        address tokenAddress = tokenAddresses[tokenId];\n        if (tokenAddress == address(0)) {\n            _handleNativeWithdraw(from, amount, tokenId, publicInputs, balancePCT);\n            return;\n        }\n\n        // Handle ERC20 token withdrawal\n        _handleERC20Withdraw(from, amount, tokenId, publicInputs, balancePCT);\n    }\n\n    /**\n     * @notice Gets the encrypted balance for a token address\n     * @param user Address of the user\n     * @param tokenAddress Address of the token\n     * @return eGCT The ElGamal ciphertext representing the encrypted balance\n     * @return nonce The current nonce used for balance validation\n     * @return amountPCTs Array of amount PCTs for transaction history\n     * @return balancePCT The current balance PCT\n     * @return transactionIndex The current transaction index\n     * @dev This is a convenience function that looks up the token ID and calls balanceOf\n     */\n    function getBalanceFromTokenAddress(\n        address user,\n        address tokenAddress\n    )\n        public\n        view\n        returns (\n            EGCT memory eGCT,\n            uint256 nonce,\n            AmountPCT[] memory amountPCTs,\n            uint256[7] memory balancePCT,\n            uint256 transactionIndex\n        )\n    {\n        uint256 tokenId = tokenIds[tokenAddress];\n        return balanceOf(user, tokenId);\n    }\n\n    /**\n     * @notice Gets the native token balance for a user\n     * @param user Address of the user\n     * @return balance The native token balance\n     */\n    function getNativeBalance(address user) external view returns (uint256) {\n        return nativeBalances[user];\n    }\n\n    ///////////////////////////////////////////////////\n    ///                   Internal                  ///\n    ///////////////////////////////////////////////////\n\n    /**\n     * @notice Handles native token deposits\n     * @param amount Amount of native tokens to deposit\n     * @param amountPCT Amount PCT for the deposit\n     */\n    function _handleNativeDeposit(uint256 amount, uint256[7] memory amountPCT) internal {\n        require(msg.value >= amount, \"Insufficient native token sent\");\n        \n        // Update native balance\n        nativeBalances[msg.sender] += amount;\n        \n        // Convert native tokens to encrypted tokens\n        uint256 dust;\n        uint256 tokenId;\n        (dust, tokenId) = _convertFromNative(msg.sender, amount, amountPCT);\n        \n        // Return excess native tokens if any\n        if (msg.value > amount) {\n            payable(msg.sender).transfer(msg.value - amount);\n        }\n        \n        emit NativeDeposit(msg.sender, amount, tokenId);\n        emit Deposit(msg.sender, amount, dust, tokenId, TokenType.NATIVE);\n    }\n\n    /**\n     * @notice Handles ERC20 token deposits\n     * @param amount Amount of ERC20 tokens to deposit\n     * @param tokenAddress Address of the ERC20 token\n     * @param amountPCT Amount PCT for the deposit\n     */\n    function _handleERC20Deposit(uint256 amount, address tokenAddress, uint256[7] memory amountPCT) internal {\n        IERC20 token = IERC20(tokenAddress);\n        uint256 dust;\n        uint256 tokenId;\n        address to = msg.sender;\n\n        // Get the contract's balance before the transfer\n        uint256 balanceBefore = token.balanceOf(address(this));\n\n        // Transfer tokens from user to contract\n        SafeERC20.safeTransferFrom(token, to, address(this), amount);\n\n        // Get the contract's balance after the transfer\n        uint256 balanceAfter = token.balanceOf(address(this));\n\n        // Verify that the actual transferred amount matches the expected amount\n        uint256 actualTransferred = balanceAfter - balanceBefore;\n        if (actualTransferred != amount) {\n            revert TransferFailed();\n        }\n\n        // Convert tokens to encrypted tokens\n        (dust, tokenId) = _convertFromERC20(to, amount, tokenAddress, amountPCT);\n\n        // Return dust to user, if any\n        if (dust > 0) {\n            SafeERC20.safeTransfer(token, to, dust);\n        }\n\n        emit Deposit(to, amount, dust, tokenId, TokenType.ERC20);\n    }\n\n    /**\n     * @notice Handles native token withdrawals\n     * @param from Address of the user withdrawing tokens\n     * @param amount Amount of native tokens to withdraw\n     * @param tokenId ID of the token to withdraw\n     * @param publicInputs Public inputs from the proof\n     * @param balancePCT The balance PCT for the user after the withdrawal\n     */\n    function _handleNativeWithdraw(\n        address from,\n        uint256 amount,\n        uint256 tokenId,\n        uint256[16] memory publicInputs,\n        uint256[7] memory balancePCT\n    ) internal {\n        // Extract the provided balance from the proof\n        EGCT memory providedBalance = EGCT({\n            c1: Point({x: publicInputs[3], y: publicInputs[4]}),\n            c2: Point({x: publicInputs[5], y: publicInputs[6]})\n        });\n\n        // Encrypt the withdrawn amount\n        EGCT memory encryptedWithdrawnAmount = BabyJubJub.encrypt(\n            Point({x: publicInputs[1], y: publicInputs[2]}),\n            amount\n        );\n\n        _privateBurn(\n            from,\n            tokenId,\n            providedBalance,\n            encryptedWithdrawnAmount,\n            balancePCT\n        );\n\n        // Update native balance and transfer\n        nativeBalances[from] -= amount;\n        payable(from).transfer(amount);\n\n        // Extract auditor PCT and emit event\n        uint256[7] memory auditorPCT;\n        for (uint256 i = 0; i < auditorPCT.length; i++) {\n            auditorPCT[i] = publicInputs[9 + i];\n        }\n\n        emit NativeWithdraw(from, amount, tokenId);\n        emit Withdraw(from, amount, tokenId, auditorPCT, auditor);\n    }\n\n    /**\n     * @notice Handles ERC20 token withdrawals\n     * @param from Address of the user withdrawing tokens\n     * @param amount Amount of ERC20 tokens to withdraw\n     * @param tokenId ID of the token to withdraw\n     * @param publicInputs Public inputs from the proof\n     * @param balancePCT The balance PCT for the user after the withdrawal\n     */\n    function _handleERC20Withdraw(\n        address from,\n        uint256 amount,\n        uint256 tokenId,\n        uint256[16] memory publicInputs,\n        uint256[7] memory balancePCT\n    ) internal {\n        address tokenAddress = tokenAddresses[tokenId];\n        if (tokenAddress == address(0)) {\n            revert UnknownToken();\n        }\n\n        // Extract the provided balance from the proof\n        EGCT memory providedBalance = EGCT({\n            c1: Point({x: publicInputs[3], y: publicInputs[4]}),\n            c2: Point({x: publicInputs[5], y: publicInputs[6]})\n        });\n\n        // Encrypt the withdrawn amount\n        EGCT memory encryptedWithdrawnAmount = BabyJubJub.encrypt(\n            Point({x: publicInputs[1], y: publicInputs[2]}),\n            amount\n        );\n\n        _privateBurn(\n            from,\n            tokenId,\n            providedBalance,\n            encryptedWithdrawnAmount,\n            balancePCT\n        );\n\n        // Convert and transfer the tokens\n        _convertToERC20(from, amount, tokenAddress);\n\n        // Extract auditor PCT and emit event\n        uint256[7] memory auditorPCT;\n        for (uint256 i = 0; i < auditorPCT.length; i++) {\n            auditorPCT[i] = publicInputs[9 + i];\n        }\n\n        emit Withdraw(from, amount, tokenId, auditorPCT, auditor);\n    }\n\n    /**\n     * @notice Converts native tokens to encrypted tokens\n     * @param to Address of the receiver\n     * @param amount Amount of native tokens to convert\n     * @param amountPCT Amount PCT for the conversion\n     * @return dust The dust (remainder) from the conversion\n     * @return tokenId The ID of the token\n     */\n    function _convertFromNative(\n        address to,\n        uint256 amount,\n        uint256[7] memory amountPCT\n    ) internal returns (uint256 dust, uint256 tokenId) {\n        // Register the native token if it's new\n        if (tokenIds[address(0)] == 0) {\n            _addToken(address(0));\n        }\n        tokenId = tokenIds[address(0)];\n\n        // For native tokens, we use 18 decimals (standard for ETH, AVAX, etc.)\n        uint8 nativeDecimals = 18;\n        uint256 value = amount;\n        dust = 0;\n\n        // Scale down if native token has more decimals\n        if (nativeDecimals > decimals) {\n            uint256 scalingFactor = 10 ** (nativeDecimals - decimals);\n            value = amount / scalingFactor;\n            dust = amount % scalingFactor;\n        }\n        // Scale up if native token has fewer decimals\n        else if (nativeDecimals < decimals) {\n            uint256 scalingFactor = 10 ** (decimals - nativeDecimals);\n            value = amount * scalingFactor;\n            dust = 0;\n        }\n\n        // Return early if the scaled value is zero\n        if (value == 0) {\n            return (dust, tokenId);\n        }\n\n        // Encrypt and add to balance\n        {\n            // Get the receiver's public key\n            uint256[2] memory publicKey = registrar.getUserPublicKey(to);\n\n            // Encrypt the value with the receiver's public key\n            EGCT memory eGCT = BabyJubJub.encrypt(\n                Point({x: publicKey[0], y: publicKey[1]}),\n                value\n            );\n\n            // Add to the receiver's balance\n            EncryptedBalance storage balance = balances[to][tokenId];\n\n            if (balance.eGCT.c1.x == 0 && balance.eGCT.c1.y == 0) {\n                balance.eGCT = eGCT;\n            } else {\n                balance.eGCT.c1 = BabyJubJub._add(balance.eGCT.c1, eGCT.c1);\n                balance.eGCT.c2 = BabyJubJub._add(balance.eGCT.c2, eGCT.c2);\n            }\n\n            // Update transaction history\n            balance.amountPCTs.push(\n                AmountPCT({pct: amountPCT, index: balance.transactionIndex})\n            );\n            balance.transactionIndex++;\n\n            // Commit the new balance\n            _commitUserBalance(to, tokenId);\n        }\n\n        return (dust, tokenId);\n    }\n\n    /**\n     * @notice Performs the internal logic for a private mint\n     * @param user Address of the user to mint tokens to\n     * @param encryptedAmount The encrypted amount to mint\n     * @param amountPCT The amount PCT for the mint\n     * @dev This function:\n     *      1. Adds the encrypted amount to the user's balance\n     *      2. Emits a PrivateMint event\n     */\n    function _privateMint(\n        address user,\n        EGCT memory encryptedAmount,\n        uint256[7] memory amountPCT\n    ) internal {\n        // since private mint is only for the standalone ERC, tokenId is always 0\n        _addToUserBalance(user, 0, encryptedAmount, amountPCT);\n    }\n\n    /**\n     * @notice Performs the internal logic for a private transfer\n     * @param from address The address of the sender\n     * @param to address The address of the receiver\n     * @param tokenId uint256 The ID of the token to transfer\n     * @param providedBalance EGCT The provided balance from the proof\n     * @param senderEncryptedAmount EGCT The encrypted amount to subtract from the sender's balance\n     * @param receiverEncryptedAmount EGCT The encrypted amount to add to the receiver's balance\n     * @param balancePCT uint256[7] The balance PCT for the sender after the transfer\n     * @param amountPCT uint256[7] The amount PCT for the transfer\n     * @dev This function:\n     *      1. Verifies the sender's balance is valid\n     *      2. Subtracts the encrypted amount from the sender's balance\n     *      3. Adds the encrypted amount to the receiver's balance\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        EGCT memory providedBalance,\n        EGCT memory senderEncryptedAmount,\n        EGCT memory receiverEncryptedAmount,\n        uint256[7] memory balancePCT,\n        uint256[7] memory amountPCT\n    ) internal {\n        {\n            // 1. for sender operation is very similar to the private burn\n            _privateBurn(\n                from,\n                tokenId,\n                providedBalance,\n                senderEncryptedAmount,\n                balancePCT\n            );\n        }\n\n        {\n            // 2. for receiver operation is very similar to the private mint\n            _addToUserBalance(to, tokenId, receiverEncryptedAmount, amountPCT);\n        }\n    }\n\n    /**\n     * @notice Performs the internal logic for a private burn\n     * @param from Address of the user to burn tokens from\n     * @param tokenId ID of the token to burn\n     * @param providedBalance The provided balance from the proof\n     * @param encryptedAmount The encrypted amount to subtract\n     * @param balancePCT The balance PCT for the user after the burn\n     * @dev This function:\n     *      1. Verifies the user's balance is valid\n     *      2. Subtracts the encrypted amount from the user's balance\n     */\n    function _privateBurn(\n        address from,\n        uint256 tokenId,\n        EGCT memory providedBalance,\n        EGCT memory encryptedAmount,\n        uint256[7] memory balancePCT\n    ) internal {\n        // verify user encrypted balance\n        uint256 transactionIndex = _verifyUserBalance(\n            from,\n            tokenId,\n            providedBalance\n        );\n\n        // subtract from user's balance\n        _subtractFromUserBalance(\n            from,\n            tokenId,\n            encryptedAmount,\n            balancePCT,\n            transactionIndex\n        );\n    }\n\n    /**\n     * @notice Validates a user's public key\n     * @param user The address of the user\n     * @param providedPublicKey The public key to validate\n     * @dev Function fetches the user's public key from the registrar contract\n     * @dev If the public key is not valid, it reverts with InvalidProof error\n     */\n    function _validatePublicKey(\n        address user,\n        uint256[2] memory providedPublicKey\n    ) internal view {\n        uint256[2] memory userPublicKey = registrar.getUserPublicKey(user);\n\n        if (\n            userPublicKey[0] != providedPublicKey[0] ||\n            userPublicKey[1] != providedPublicKey[1]\n        ) {\n            revert InvalidProof();\n        }\n    }\n\n    /**\n     * @notice Validates the auditor's public key\n     * @param providedPublicKey The public key to validate\n     * @dev If the public key is not match with the auditor's public key, it reverts with InvalidProof error\n     */\n    function _validateAuditorPublicKey(\n        uint256[2] memory providedPublicKey\n    ) internal view {\n        if (\n            auditorPublicKey.x != providedPublicKey[0] ||\n            auditorPublicKey.y != providedPublicKey[1]\n        ) {\n            revert InvalidProof();\n        }\n    }\n\n    /**\n     * @notice Extracts the inputs for a transfer operation\n     * @param input The input array containing the transfer data\n     * @return transferInputs TransferInputs struct containing:\n     *         - providedBalance (EGCT): The provided balance from the proof\n     *         - senderEncryptedAmount (EGCT): The encrypted amount to subtract from sender\n     *         - receiverEncryptedAmount (EGCT): The encrypted amount to add to receiver\n     *         - amountPCT (uint256[7]): The amount PCT for the transfer\n     */\n    function _extractTransferInputs(\n        uint256[32] memory input\n    ) internal pure returns (TransferInputs memory transferInputs) {\n        transferInputs.providedBalance = EGCT({\n            c1: Point({x: input[2], y: input[3]}),\n            c2: Point({x: input[4], y: input[5]})\n        });\n\n        transferInputs.senderEncryptedAmount = EGCT({\n            c1: Point({x: input[6], y: input[7]}),\n            c2: Point({x: input[8], y: input[9]})\n        });\n\n        transferInputs.receiverEncryptedAmount = EGCT({\n            c1: Point({x: input[12], y: input[13]}),\n            c2: Point({x: input[14], y: input[15]})\n        });\n\n        for (uint256 i = 0; i < 7; i++) {\n            transferInputs.amountPCT[i] = input[16 + i];\n        }\n    }\n\n    /**\n     * @notice Converts regular ERC20 tokens to encrypted tokens\n     * @param to Address of the receiver\n     * @param amount Amount of tokens to convert\n     * @param tokenAddress Address of the token to convert\n     * @param amountPCT Amount PCT for the conversion\n     * @return dust The dust (remainder) from the conversion\n     * @return tokenId The ID of the token\n     */\n    function _convertFromERC20(\n        address to,\n        uint256 amount,\n        address tokenAddress,\n        uint256[7] memory amountPCT\n    ) internal returns (uint256 dust, uint256 tokenId) {\n        // Get token decimals and handle scaling\n        uint8 tokenDecimals = IERC20Metadata(tokenAddress).decimals();\n\n        uint256 value = amount;\n        dust = 0;\n\n        // Scale down if token has more decimals\n        if (tokenDecimals > decimals) {\n            uint256 scalingFactor = 10 ** (tokenDecimals - decimals);\n            value = amount / scalingFactor;\n            dust = amount % scalingFactor;\n        }\n        // Scale up if token has fewer decimals\n        else if (tokenDecimals < decimals) {\n            uint256 scalingFactor = 10 ** (decimals - tokenDecimals);\n            value = amount * scalingFactor;\n            dust = 0;\n        }\n\n        // Register the token if it's new\n        if (tokenIds[tokenAddress] == 0) {\n            _addToken(tokenAddress);\n        }\n        tokenId = tokenIds[tokenAddress];\n\n        // Return early if the scaled value is zero\n        if (value == 0) {\n            return (dust, tokenId);\n        }\n\n        // Encrypt and add to balance\n        {\n            // Get the receiver's public key\n            uint256[2] memory publicKey = registrar.getUserPublicKey(to);\n\n            // Encrypt the value with the receiver's public key\n            EGCT memory eGCT = BabyJubJub.encrypt(\n                Point({x: publicKey[0], y: publicKey[1]}),\n                value\n            );\n\n            // Add to the receiver's balance\n            EncryptedBalance storage balance = balances[to][tokenId];\n\n            if (balance.eGCT.c1.x == 0 && balance.eGCT.c1.y == 0) {\n                balance.eGCT = eGCT;\n            } else {\n                balance.eGCT.c1 = BabyJubJub._add(balance.eGCT.c1, eGCT.c1);\n                balance.eGCT.c2 = BabyJubJub._add(balance.eGCT.c2, eGCT.c2);\n            }\n\n            // Update transaction history\n            balance.amountPCTs.push(\n                AmountPCT({pct: amountPCT, index: balance.transactionIndex})\n            );\n            balance.transactionIndex++;\n\n            // Commit the new balance\n            _commitUserBalance(to, tokenId);\n        }\n\n        return (dust, tokenId);\n    }\n\n    /**\n     * @notice Converts encrypted tokens to regular ERC20 tokens\n     * @param to Address of the receiver\n     * @param amount Amount of tokens to convert\n     * @param tokenAddress Address of the token to convert to\n     */\n    function _convertToERC20(\n        address to,\n        uint256 amount,\n        address tokenAddress\n    ) internal {\n        // Get token decimals and handle scaling\n        uint256 tokenDecimals = IERC20Metadata(tokenAddress).decimals();\n\n        uint256 value = amount;\n        uint256 scalingFactor = 0;\n\n        // Scale up if token has more decimals\n        if (tokenDecimals > decimals) {\n            scalingFactor = 10 ** (tokenDecimals - decimals);\n            value = amount * scalingFactor;\n        }\n        // Scale down if token has fewer decimals\n        else if (tokenDecimals < decimals) {\n            scalingFactor = 10 ** (decimals - tokenDecimals);\n            value = amount / scalingFactor;\n        }\n\n        // Transfer the tokens to the receiver\n        IERC20 token = IERC20(tokenAddress);\n        SafeERC20.safeTransfer(token, to, value);\n    }\n}\n"},"contracts/errors/Errors.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\nerror UserAlreadyRegistered();\nerror UserNotRegistered();\nerror UnauthorizedAccess();\nerror AuditorKeyNotSet();\nerror InvalidProof();\nerror InvalidOperation();\nerror TransferFailed();\nerror UnknownToken();\nerror InvalidChainId();\nerror InvalidNullifier();\nerror InvalidSender();\nerror InvalidRegistrationHash();\nerror ZeroAddress();\nerror TokenBlacklisted(address token);\n"},"contracts/interfaces/IRegistrar.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\ninterface IRegistrar {\n    /**\n     * @dev Returns the public key of a user.\n     * @param user Address of the user.\n     * @return publicKey The public key of the user as an array of two uint256 values.\n     */\n    function getUserPublicKey(\n        address user\n    ) external view returns (uint256[2] memory publicKey);\n\n    /**\n     * @dev Returns true if the user is registered.\n     * @param user Address of the user.\n     * @return isRegistered True if the user is registered, false otherwise.\n     */\n    function isUserRegistered(address user) external view returns (bool);\n}\n"},"contracts/interfaces/verifiers/IBurnVerifier.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\ninterface IBurnVerifier {\n    function verifyProof(\n        uint256[2] memory pointA_,\n        uint256[2][2] memory pointB_,\n        uint256[2] memory pointC_,\n        uint256[19] memory publicSignals_\n    ) external view returns (bool verified_);\n}\n"},"contracts/interfaces/verifiers/IMintVerifier.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\ninterface IMintVerifier {\n    function verifyProof(\n        uint256[2] memory pointA_,\n        uint256[2][2] memory pointB_,\n        uint256[2] memory pointC_,\n        uint256[24] memory publicSignals_\n    ) external view returns (bool verified_);\n}\n"},"contracts/interfaces/verifiers/IRegistrationVerifier.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\ninterface IRegistrationVerifier {\n    function verifyProof(\n        uint256[2] memory pointA_,\n        uint256[2][2] memory pointB_,\n        uint256[2] memory pointC_,\n        uint256[5] memory publicSignals_\n    ) external view returns (bool verified_);\n}\n"},"contracts/interfaces/verifiers/ITransferVerifier.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\ninterface ITransferVerifier {\n    function verifyProof(\n        uint256[2] memory pointA_,\n        uint256[2][2] memory pointB_,\n        uint256[2] memory pointC_,\n        uint256[32] memory publicSignals_\n    ) external view returns (bool verified_);\n}\n"},"contracts/interfaces/verifiers/IWithdrawVerifier.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\ninterface IWithdrawVerifier {\n    function verifyProof(\n        uint256[2] memory pointA_,\n        uint256[2][2] memory pointB_,\n        uint256[2] memory pointC_,\n        uint256[16] memory publicSignals_\n    ) external view returns (bool verified_);\n}\n"},"contracts/libraries/BabyJubJub.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\n// Structs\nimport {Point, EGCT} from \"../types/Types.sol\";\n\n/**\n * @dev BabyJubJub curve operations\n */\nlibrary BabyJubJub {\n    // Curve parameters\n    // E: A^2 + y^2 = 1 + Dx^2y^2 (mod Q)\n    uint256 internal constant A = 168700;\n    uint256 internal constant D = 168696;\n    uint256 public constant Q =\n        21888242871839275222246405745257275088548364400416034343698204186575808495617;\n    uint256 internal constant H =\n        10944121435919637611123202872628637544274182200208017171849102093287904247808;\n    uint256 internal constant R =\n        2736030358979909402780800718157159386076813972158567259200215660948447373041;\n\n    /**\n     * @dev Subtract a BabyJubJub point from another BabyJubJub point\n     * @param _point1 the point which will be subtracted from\n     * @param _point2 point to subtract\n     * @return result\n     */\n    function _sub(\n        Point memory _point1,\n        Point memory _point2\n    ) public view returns (Point memory) {\n        return _add(_point1, negate(_point2));\n    }\n\n    /**\n     * @dev Add 2 points on BabyJubJub curve\n     * Formulae for adding 2 points on a twisted Edwards curve:\n     * x3 = (x1y2 + y1x2) / (1 + dx1x2y1y2)\n     * y3 = (y1y2 - ax1x2) / (1 - dx1x2y1y2)\n     * @param _point1 first point\n     * @param _point2 second point\n     * @return resulting point\n     */\n    function _add(\n        Point memory _point1,\n        Point memory _point2\n    ) public view returns (Point memory) {\n        uint256 x1x2 = mulmod(_point1.x, _point2.x, Q);\n        uint256 y1y2 = mulmod(_point1.y, _point2.y, Q);\n\n        uint256 dx1x2y1y2 = mulmod(D, mulmod(x1x2, y1y2, Q), Q);\n\n        uint256 x3Num = addmod(\n            mulmod(_point1.x, _point2.y, Q),\n            mulmod(_point1.y, _point2.x, Q),\n            Q\n        );\n        uint256 y3Num = submod(y1y2, mulmod(A, x1x2, Q));\n\n        return\n            Point({\n                x: mulmod(x3Num, invmod(addmod(1, dx1x2y1y2, Q)), Q),\n                y: mulmod(y3Num, invmod(submod(1, dx1x2y1y2)), Q)\n            });\n    }\n\n    /**\n     * @dev Multiply a BabyJubJub point by a scalar\n     * Use the double and add algorithm\n     * @param _point point be multiplied by a scalar\n     * @param _scalar scalar value\n     * @return resulting point\n     */\n    function scalarMultiply(\n        Point memory _point,\n        uint256 _scalar\n    ) public view returns (Point memory) {\n        // Initial scalar remainder\n        uint256 remaining = _scalar % R;\n\n        // Copy initial point so that we don't mutate it\n        Point memory initial = _point;\n\n        // Initialize result\n        Point memory result = Point({x: 0, y: 1});\n\n        // Loop while remainder is greater than 0\n        while (remaining != 0) {\n            // If the right-most binary digit is 1 (number is odd) add initial point to result\n            if ((remaining & 1) != 0) {\n                result = _add(result, initial);\n            }\n\n            // Double initial point\n            initial = double(initial);\n\n            // Shift bits to the right\n            remaining = remaining >> 1;\n        }\n\n        return result;\n    }\n\n    /**\n     *\n     * @param _publicKey Public Key that will be used in encryption\n     * @param _msg Message in scalar form to be encrypted\n     */\n    function elGamalEncryption(\n        Point memory _publicKey,\n        uint256 _msg\n    ) public view returns (EGCT memory) {\n        uint256 random = 1;\n        Point memory b8 = base8();\n\n        Point memory c1 = scalarMultiply(b8, random);\n        Point memory pkr = scalarMultiply(_publicKey, random);\n        Point memory pMsg = scalarMultiply(b8, _msg);\n\n        Point memory c2 = _add(pkr, pMsg);\n\n        return EGCT({c1: c1, c2: c2});\n    }\n\n    // elgamal encryption with a given message\n    function encrypt(\n        Point memory _publicKey,\n        uint256 _msg\n    ) public view returns (EGCT memory) {\n        return elGamalEncryption(_publicKey, _msg);\n    }\n\n    /**\n     * @dev Default generator\n     */\n    function base8() public pure returns (Point memory) {\n        return\n            Point({\n                x: 5299619240641551281634865583518297030282874472190772894086521144482721001553,\n                y: 16950150798460657717958625567821834550301663161624707787222815936182638968203\n            });\n    }\n\n    /**\n     * @dev Double a point on BabyJubJub curve\n     * @param _p point to double\n     * @return doubled point\n     */\n    function double(Point memory _p) internal view returns (Point memory) {\n        return _add(_p, _p);\n    }\n\n    /**\n     * @dev Compute modular inverse of a number\n     * @param _a the value to be inverted in mod Q\n     */\n    function invmod(uint256 _a) internal view returns (uint256) {\n        // We can use Euler's theorem instead of the extended Euclidean algorithm\n        // Since m = Q and Q is prime we have: a^-1 = a^(m - 2) (mod m)\n        return\n            expmod(\n                _a,\n                0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff\n            );\n    }\n\n    /**\n     * @dev Exponentiation modulo Q\n     * @param _base the base of the exponentiation\n     * @param _exponent the exponent\n     * @return result\n     */\n    function expmod(\n        uint256 _base,\n        uint256 _exponent\n    ) internal view returns (uint256) {\n        uint256 result;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let\n                localQ\n            := 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001\n            let memPtr := mload(0x40)\n            mstore(memPtr, 0x20) // Length of base _b\n            mstore(add(memPtr, 0x20), 0x20) // Length of exponent _e\n            mstore(add(memPtr, 0x40), 0x20) // Length of modulus Q\n            mstore(add(memPtr, 0x60), _base) // Base _b\n            mstore(add(memPtr, 0x80), _exponent) // Exponent _e\n            mstore(add(memPtr, 0xa0), localQ) // Modulus Q\n\n            // The bigModExp precompile is at 0x05\n            let success := staticcall(gas(), 0x05, memPtr, 0xc0, memPtr, 0x20)\n            switch success\n            case 0 {\n                revert(0x0, 0x0)\n            }\n            default {\n                result := mload(memPtr)\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @dev Negate a BabyJubJub point\n     * @param _point point to negate\n     * @return p = -(_p)\n     */\n    function negate(Point memory _point) internal pure returns (Point memory) {\n        return Point({x: Q - _point.x, y: _point.y});\n    }\n\n    /**\n     * @dev Modular subtract (mod n).\n     * @param _a The first number\n     * @param _b The number to be subtracted\n     * @return result\n     */\n    function submod(uint256 _a, uint256 _b) internal pure returns (uint256) {\n        return addmod(_a, Q - _b, Q);\n    }\n}\n"},"contracts/types/Types.sol":{"content":"// (c) 2025, Ava Labs, Inc. All rights reserved.\n// See the file LICENSE for licensing terms.\n\n// SPDX-License-Identifier: Ecosystem\n\npragma solidity 0.8.27;\n\nstruct Point {\n    uint256 x;\n    uint256 y;\n}\n\nstruct CreateEncryptedERCParams {\n    // registrar contract address for fetching users public key\n    address registrar;\n    // eERC is converter mode or not\n    bool isConverter;\n    // eERC Token\n    string name;\n    string symbol;\n    uint8 decimals;\n    // verifiers\n    address mintVerifier;\n    address withdrawVerifier;\n    address transferVerifier;\n    address burnVerifier;\n}\n\nstruct AmountPCT {\n    uint256[7] pct;\n    uint256 index;\n}\n\nstruct EncryptedBalance {\n    EGCT eGCT;\n    mapping(uint256 index => BalanceHistory history) balanceList;\n    uint256 nonce;\n    uint256 transactionIndex;\n    uint256[7] balancePCT; // user balance pcts\n    AmountPCT[] amountPCTs; // user amount pcts\n}\n\nstruct BalanceHistory {\n    uint256 index;\n    bool isValid;\n}\n\nstruct EGCT {\n    Point c1;\n    Point c2;\n}\n\n/// @dev The proof base is used to verify the proof\nstruct ProofPoints {\n    uint256[2] a;\n    uint256[2][2] b;\n    uint256[2] c;\n}\n\nstruct RegisterProof {\n    ProofPoints proofPoints;\n    uint256[5] publicSignals;\n}\n\nstruct MintProof {\n    ProofPoints proofPoints;\n    uint256[24] publicSignals;\n}\n\nstruct TransferProof {\n    ProofPoints proofPoints;\n    uint256[32] publicSignals;\n}\n\nstruct BurnProof {\n    ProofPoints proofPoints;\n    uint256[19] publicSignals;\n}\n\nstruct WithdrawProof {\n    ProofPoints proofPoints;\n    uint256[16] publicSignals;\n}\n\nstruct TransferInputs {\n    EGCT providedBalance;\n    EGCT senderEncryptedAmount;\n    EGCT receiverEncryptedAmount;\n    uint256[7] amountPCT;\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[921],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":922,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":921,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,921],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/access/Ownable2Step.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","exportedSymbols":{"Ownable":[147],"Ownable2Step":[233]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"./Ownable.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":148,"src":"133:38:1","symbolAliases":[{"foreign":{"id":150,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"141:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":153,"name":"Ownable","nameLocations":["1018:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1018:7:1"},"id":154,"nodeType":"InheritanceSpecifier","src":"1018:7:1"}],"canonicalName":"Ownable2Step","contractDependencies":[],"contractKind":"contract","documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"173:810:1","text":" @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This extension of the {Ownable} contract includes a two-step mechanism to transfer\n ownership, where the new owner must call {acceptOwnership} in order to replace the\n old one. This can help prevent common mistakes, such as transfers of ownership to\n incorrect accounts, or to contracts that are unable to interact with the\n permission system.\n The initial owner is specified at deployment time in the constructor for `Ownable`. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."},"fullyImplemented":true,"id":233,"linearizedBaseContracts":[233,147,921],"name":"Ownable2Step","nameLocation":"1002:12:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":156,"mutability":"mutable","name":"_pendingOwner","nameLocation":"1048:13:1","nodeType":"VariableDeclaration","scope":233,"src":"1032:29:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700","id":162,"name":"OwnershipTransferStarted","nameLocation":"1074:24:1","nodeType":"EventDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1115:13:1","nodeType":"VariableDeclaration","scope":162,"src":"1099:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"1099:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1146:8:1","nodeType":"VariableDeclaration","scope":162,"src":"1130:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1098:57:1"},"src":"1068:88:1"},{"body":{"id":170,"nodeType":"Block","src":"1294:37:1","statements":[{"expression":{"id":168,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1311:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":167,"id":169,"nodeType":"Return","src":"1304:20:1"}]},"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"1162:65:1","text":" @dev Returns the address of the pending owner."},"functionSelector":"e30c3978","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"1241:12:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"1253:2:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"1285:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1284:9:1"},"scope":233,"src":"1232:99:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[126],"body":{"id":190,"nodeType":"Block","src":"1728:99:1","statements":[{"expression":{"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":180,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1738:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":181,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1754:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1738:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":183,"nodeType":"ExpressionStatement","src":"1738:24:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":185,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1802:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":187,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1811:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1777:24:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1777:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"EmitStatement","src":"1772:48:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1337:307:1","text":" @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner.\n Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."},"functionSelector":"f2fde38b","id":191,"implemented":true,"kind":"function","modifiers":[{"id":178,"kind":"modifierInvocation","modifierName":{"id":177,"name":"onlyOwner","nameLocations":["1718:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1718:9:1"},"nodeType":"ModifierInvocation","src":"1718:9:1"}],"name":"transferOwnership","nameLocation":"1658:17:1","nodeType":"FunctionDefinition","overrides":{"id":176,"nodeType":"OverrideSpecifier","overrides":[],"src":"1709:8:1"},"parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"newOwner","nameLocation":"1684:8:1","nodeType":"VariableDeclaration","scope":191,"src":"1676:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1675:18:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"1728:0:1"},"scope":233,"src":"1649:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[146],"body":{"id":207,"nodeType":"Block","src":"2083:81:1","statements":[{"expression":{"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2093:20:1","subExpression":{"id":198,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2100:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":200,"nodeType":"ExpressionStatement","src":"2093:20:1"},{"expression":{"arguments":[{"id":204,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"2148:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":201,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2123:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Ownable2Step_$233_$","typeString":"type(contract super Ownable2Step)"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2129:18:1","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":146,"src":"2123:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2123:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"2123:34:1"}]},"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"1833:173:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."},"id":208,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2020:18:1","nodeType":"FunctionDefinition","overrides":{"id":196,"nodeType":"OverrideSpecifier","overrides":[],"src":"2074:8:1"},"parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"newOwner","nameLocation":"2047:8:1","nodeType":"VariableDeclaration","scope":208,"src":"2039:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2038:18:1"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"2083:0:1"},"scope":233,"src":"2011:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":231,"nodeType":"Block","src":"2286:187:1","statements":[{"assignments":[213],"declarations":[{"constant":false,"id":213,"mutability":"mutable","name":"sender","nameLocation":"2304:6:1","nodeType":"VariableDeclaration","scope":231,"src":"2296:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"2296:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":216,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":214,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"2313:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2313:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2296:29:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":217,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2339:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2339:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":219,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2357:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2339:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":226,"nodeType":"IfStatement","src":"2335:96:1","trueBody":{"id":225,"nodeType":"Block","src":"2365:66:1","statements":[{"errorCall":{"arguments":[{"id":222,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2413:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":221,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2386:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2386:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":224,"nodeType":"RevertStatement","src":"2379:41:1"}]}},{"expression":{"arguments":[{"id":228,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2459:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[208],"referencedDeclaration":208,"src":"2440:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2440:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":230,"nodeType":"ExpressionStatement","src":"2440:26:1"}]},"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"2170:69:1","text":" @dev The new owner accepts the ownership transfer."},"functionSelector":"79ba5097","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"2253:15:1","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"2268:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"2286:0:1"},"scope":233,"src":"2244:229:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":234,"src":"984:1491:1","usedErrors":[13,18],"usedEvents":[24,162]}],"src":"107:2369:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[315],"IERC165":[933],"IERC20":[401]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":324,"src":"133:36:2","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"141:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":320,"src":"170:38:2","symbolAliases":[{"foreign":{"id":238,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"178:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":241,"name":"IERC20","nameLocations":["590:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"590:6:2"},"id":242,"nodeType":"InheritanceSpecifier","src":"590:6:2"},{"baseName":{"id":243,"name":"IERC165","nameLocations":["598:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"598:7:2"},"id":244,"nodeType":"InheritanceSpecifier","src":"598:7:2"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"210:357:2","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":315,"linearizedBaseContracts":[315,933,401],"name":"IERC1363","nameLocation":"578:8:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"1148:370:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":254,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:2","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"to","nameLocation":"1556:2:2","nodeType":"VariableDeclaration","scope":254,"src":"1548:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"value","nameLocation":"1568:5:2","nodeType":"VariableDeclaration","scope":254,"src":"1560:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:2"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"1593:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":251,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:2"},"scope":315,"src":"1523:76:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"1605:453:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":266,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:2","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"to","nameLocation":"2096:2:2","nodeType":"VariableDeclaration","scope":266,"src":"2088:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"value","nameLocation":"2108:5:2","nodeType":"VariableDeclaration","scope":266,"src":"2100:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"data","nameLocation":"2130:4:2","nodeType":"VariableDeclaration","scope":266,"src":"2115:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":260,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:2"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":266,"src":"2154:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:2"},"scope":315,"src":"2063:97:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"2166:453:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":278,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:2","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"from","nameLocation":"2661:4:2","nodeType":"VariableDeclaration","scope":278,"src":"2653:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"to","nameLocation":"2675:2:2","nodeType":"VariableDeclaration","scope":278,"src":"2667:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"value","nameLocation":"2687:5:2","nodeType":"VariableDeclaration","scope":278,"src":"2679:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:2"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"2712:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:2"},"scope":315,"src":"2624:94:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"2724:536:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":292,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:2","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"from","nameLocation":"3302:4:2","nodeType":"VariableDeclaration","scope":292,"src":"3294:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"to","nameLocation":"3316:2:2","nodeType":"VariableDeclaration","scope":292,"src":"3308:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":285,"mutability":"mutable","name":"value","nameLocation":"3328:5:2","nodeType":"VariableDeclaration","scope":292,"src":"3320:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"data","nameLocation":"3350:4:2","nodeType":"VariableDeclaration","scope":292,"src":"3335:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":286,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:2"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":292,"src":"3374:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":289,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:2"},"scope":315,"src":"3265:115:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"3386:390:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":302,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:2","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"spender","nameLocation":"3813:7:2","nodeType":"VariableDeclaration","scope":302,"src":"3805:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"value","nameLocation":"3830:5:2","nodeType":"VariableDeclaration","scope":302,"src":"3822:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:2"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"3855:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":299,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:2"},"scope":315,"src":"3781:80:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"3867:478:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":314,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:2","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"spender","nameLocation":"4382:7:2","nodeType":"VariableDeclaration","scope":314,"src":"4374:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"value","nameLocation":"4399:5:2","nodeType":"VariableDeclaration","scope":314,"src":"4391:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"data","nameLocation":"4421:4:2","nodeType":"VariableDeclaration","scope":314,"src":"4406:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":308,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:2"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"4445:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:2"},"scope":315,"src":"4350:101:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":316,"src":"568:3885:2","usedErrors":[],"usedEvents":[335,344]}],"src":"107:4347:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[933]},"id":320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":934,"src":"133:59:3","symbolAliases":[{"foreign":{"id":318,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[401]},"id":324,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":321,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":323,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":324,"sourceUnit":402,"src":"132:49:4","symbolAliases":[{"foreign":{"id":322,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"140:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[401]},"id":402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":325,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"133:71:5","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":401,"linearizedBaseContracts":[401],"name":"IERC20","nameLocation":"215:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"228:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":335,"name":"Transfer","nameLocation":"397:8:5","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:5","nodeType":"VariableDeclaration","scope":335,"src":"406:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:5","nodeType":"VariableDeclaration","scope":335,"src":"428:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:5","nodeType":"VariableDeclaration","scope":335,"src":"448:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:5"},"src":"391:72:5"},{"anonymous":false,"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"469:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":344,"name":"Approval","nameLocation":"628:8:5","nodeType":"EventDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:5","nodeType":"VariableDeclaration","scope":344,"src":"637:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":340,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":344,"src":"660:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":342,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:5","nodeType":"VariableDeclaration","scope":344,"src":"685:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:5"},"src":"622:78:5"},{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"706:65:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":350,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:5","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[],"src":"796:2:5"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":350,"src":"822:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:5"},"scope":401,"src":"776:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":351,"nodeType":"StructuredDocumentation","src":"837:71:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":358,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:5","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"account","nameLocation":"940:7:5","nodeType":"VariableDeclaration","scope":358,"src":"932:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":352,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:5"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":358,"src":"972:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:5"},"scope":401,"src":"913:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"987:213:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":368,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:5","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"to","nameLocation":"1231:2:5","nodeType":"VariableDeclaration","scope":368,"src":"1223:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"value","nameLocation":"1243:5:5","nodeType":"VariableDeclaration","scope":368,"src":"1235:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:5"},"returnParameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":368,"src":"1268:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":365,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:5"},"scope":401,"src":"1205:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"1280:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:5","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"owner","nameLocation":"1576:5:5","nodeType":"VariableDeclaration","scope":378,"src":"1568:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"spender","nameLocation":"1591:7:5","nodeType":"VariableDeclaration","scope":378,"src":"1583:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:5"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":378,"src":"1623:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:5"},"scope":401,"src":"1549:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"1638:667:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":388,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:5","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"spender","nameLocation":"2335:7:5","nodeType":"VariableDeclaration","scope":388,"src":"2327:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"value","nameLocation":"2352:5:5","nodeType":"VariableDeclaration","scope":388,"src":"2344:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:5"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"2377:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":385,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:5"},"scope":401,"src":"2310:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"2389:297:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":400,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:5","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"from","nameLocation":"2721:4:5","nodeType":"VariableDeclaration","scope":400,"src":"2713:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"to","nameLocation":"2735:2:5","nodeType":"VariableDeclaration","scope":400,"src":"2727:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"value","nameLocation":"2747:5:5","nodeType":"VariableDeclaration","scope":400,"src":"2739:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:5"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":400,"src":"2772:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:5"},"scope":401,"src":"2691:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":402,"src":"205:2575:5","usedErrors":[],"usedEvents":[335,344]}],"src":"106:2675:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[401],"IERC20Metadata":[427]},"id":428,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":403,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":428,"sourceUnit":402,"src":"151:37:6","symbolAliases":[{"foreign":{"id":404,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"159:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":407,"name":"IERC20","nameLocations":["306:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"306:6:6"},"id":408,"nodeType":"InheritanceSpecifier","src":"306:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"190:87:6","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":427,"linearizedBaseContracts":[427,401],"name":"IERC20Metadata","nameLocation":"288:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"319:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":414,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:6","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"391:2:6"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":414,"src":"417:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":411,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:6"},"scope":427,"src":"378:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"438:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":420,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:6","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"514:2:6"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":420,"src":"540:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":417,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:6"},"scope":427,"src":"499:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"561:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":426,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:6","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"648:2:6"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"674:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":423,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:6"},"scope":427,"src":"631:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":428,"src":"278:405:6","usedErrors":[],"usedEvents":[335,344]}],"src":"125:559:6"},"id":6},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[315],"IERC20":[401],"SafeERC20":[891]},"id":892,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":429,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":431,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":892,"sourceUnit":402,"src":"141:37:7","symbolAliases":[{"foreign":{"id":430,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"149:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":892,"sourceUnit":316,"src":"179:58:7","symbolAliases":[{"foreign":{"id":432,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"187:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"239:458:7","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":891,"linearizedBaseContracts":[891],"name":"SafeERC20","nameLocation":"706:9:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"722:65:7","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":439,"name":"SafeERC20FailedOperation","nameLocation":"798:24:7","nodeType":"ErrorDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"token","nameLocation":"831:5:7","nodeType":"VariableDeclaration","scope":439,"src":"823:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:7"},"src":"792:46:7"},{"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"844:71:7","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":448,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:7","nodeType":"ErrorDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"spender","nameLocation":"967:7:7","nodeType":"VariableDeclaration","scope":448,"src":"959:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:7","nodeType":"VariableDeclaration","scope":448,"src":"976:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:7","nodeType":"VariableDeclaration","scope":448,"src":"1002:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:7"},"src":"920:109:7"},{"body":{"id":471,"nodeType":"Block","src":"1291:88:7","statements":[{"expression":{"arguments":[{"id":460,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1321:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":463,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1343:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":368,"src":"1343:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":465,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"1360:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"1364:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":461,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":459,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1301:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":470,"nodeType":"ExpressionStatement","src":"1301:71:7"}]},"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"1035:179:7","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":472,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:7","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"token","nameLocation":"1248:5:7","nodeType":"VariableDeclaration","scope":472,"src":"1241:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"IERC20","nameLocations":["1241:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"1241:6:7"},"referencedDeclaration":401,"src":"1241:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"to","nameLocation":"1263:2:7","nodeType":"VariableDeclaration","scope":472,"src":"1255:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"1275:5:7","nodeType":"VariableDeclaration","scope":472,"src":"1267:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:7"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[],"src":"1291:0:7"},"scope":891,"src":"1219:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":498,"nodeType":"Block","src":"1708:98:7","statements":[{"expression":{"arguments":[{"id":486,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"1738:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":489,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"1760:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":400,"src":"1760:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":491,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"1781:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"1787:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"1791:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":494,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":487,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":485,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1718:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"1718:81:7"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1385:228:7","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":499,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:7","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"token","nameLocation":"1651:5:7","nodeType":"VariableDeclaration","scope":499,"src":"1644:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},"typeName":{"id":475,"nodeType":"UserDefinedTypeName","pathNode":{"id":474,"name":"IERC20","nameLocations":["1644:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"1644:6:7"},"referencedDeclaration":401,"src":"1644:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"1666:4:7","nodeType":"VariableDeclaration","scope":499,"src":"1658:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"1680:2:7","nodeType":"VariableDeclaration","scope":499,"src":"1672:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"value","nameLocation":"1692:5:7","nodeType":"VariableDeclaration","scope":499,"src":"1684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:7"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"1708:0:7"},"scope":891,"src":"1618:188:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":524,"nodeType":"Block","src":"2033:99:7","statements":[{"expression":{"arguments":[{"id":513,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"2074:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":516,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"2096:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":368,"src":"2096:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2113:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2117:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":514,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":512,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"2050:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":511,"id":523,"nodeType":"Return","src":"2043:82:7"}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"1812:126:7","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:7","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"token","nameLocation":"1975:5:7","nodeType":"VariableDeclaration","scope":525,"src":"1968:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},"typeName":{"id":502,"nodeType":"UserDefinedTypeName","pathNode":{"id":501,"name":"IERC20","nameLocations":["1968:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"1968:6:7"},"referencedDeclaration":401,"src":"1968:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"to","nameLocation":"1990:2:7","nodeType":"VariableDeclaration","scope":525,"src":"1982:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"value","nameLocation":"2002:5:7","nodeType":"VariableDeclaration","scope":525,"src":"1994:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:7"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":525,"src":"2027:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":509,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:7"},"scope":891,"src":"1943:189:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":553,"nodeType":"Block","src":"2381:109:7","statements":[{"expression":{"arguments":[{"id":541,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2422:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":544,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2444:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":400,"src":"2444:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":546,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2465:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":547,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2471:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2475:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":542,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":540,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"2398:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":539,"id":552,"nodeType":"Return","src":"2391:92:7"}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"2138:130:7","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:7","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"token","nameLocation":"2309:5:7","nodeType":"VariableDeclaration","scope":554,"src":"2302:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},"typeName":{"id":528,"nodeType":"UserDefinedTypeName","pathNode":{"id":527,"name":"IERC20","nameLocations":["2302:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"2302:6:7"},"referencedDeclaration":401,"src":"2302:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"from","nameLocation":"2324:4:7","nodeType":"VariableDeclaration","scope":554,"src":"2316:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"to","nameLocation":"2338:2:7","nodeType":"VariableDeclaration","scope":554,"src":"2330:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"value","nameLocation":"2350:5:7","nodeType":"VariableDeclaration","scope":554,"src":"2342:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:7"},"returnParameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":554,"src":"2375:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":537,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:7"},"scope":891,"src":"2273:217:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"3232:139:7","statements":[{"assignments":[566],"declarations":[{"constant":false,"id":566,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:7","nodeType":"VariableDeclaration","scope":584,"src":"3242:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":575,"initialValue":{"arguments":[{"arguments":[{"id":571,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$891","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$891","typeString":"library SafeERC20"}],"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:7","typeDescriptions":{}}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":573,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3296:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":567,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"3265:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":378,"src":"3265:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:7"},{"expression":{"arguments":[{"id":577,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"3327:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"id":578,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3334:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"3343:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"3358:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":576,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"3314:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":583,"nodeType":"ExpressionStatement","src":"3314:50:7"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"2496:645:7","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:7","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"token","nameLocation":"3184:5:7","nodeType":"VariableDeclaration","scope":585,"src":"3177:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},"typeName":{"id":557,"nodeType":"UserDefinedTypeName","pathNode":{"id":556,"name":"IERC20","nameLocations":["3177:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"3177:6:7"},"referencedDeclaration":401,"src":"3177:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"spender","nameLocation":"3199:7:7","nodeType":"VariableDeclaration","scope":585,"src":"3191:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"value","nameLocation":"3216:5:7","nodeType":"VariableDeclaration","scope":585,"src":"3208:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:7"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"3232:0:7"},"scope":891,"src":"3146:225:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":627,"nodeType":"Block","src":"4137:370:7","statements":[{"id":626,"nodeType":"UncheckedBlock","src":"4147:354:7","statements":[{"assignments":[597],"declarations":[{"constant":false,"id":597,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:7","nodeType":"VariableDeclaration","scope":626,"src":"4171:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":606,"initialValue":{"arguments":[{"arguments":[{"id":602,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$891","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$891","typeString":"library SafeERC20"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:7","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":604,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"4229:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":598,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"4198:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":378,"src":"4198:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4255:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":608,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4274:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":617,"nodeType":"IfStatement","src":"4251:160:7","trueBody":{"id":616,"nodeType":"Block","src":"4293:118:7","statements":[{"errorCall":{"arguments":[{"id":611,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"4351:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":612,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4360:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":613,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4378:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":610,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"4318:32:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":615,"nodeType":"RevertStatement","src":"4311:85:7"}]}},{"expression":{"arguments":[{"id":619,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"4437:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"id":620,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"4444:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4453:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":622,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4472:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":618,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"4424:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":625,"nodeType":"ExpressionStatement","src":"4424:66:7"}]}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"3377:657:7","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":628,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:7","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"token","nameLocation":"4077:5:7","nodeType":"VariableDeclaration","scope":628,"src":"4070:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},"typeName":{"id":588,"nodeType":"UserDefinedTypeName","pathNode":{"id":587,"name":"IERC20","nameLocations":["4070:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"4070:6:7"},"referencedDeclaration":401,"src":"4070:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"spender","nameLocation":"4092:7:7","nodeType":"VariableDeclaration","scope":628,"src":"4084:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:7","nodeType":"VariableDeclaration","scope":628,"src":"4101:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:7"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"4137:0:7"},"scope":891,"src":"4039:468:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"5161:303:7","statements":[{"assignments":[640],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:7","nodeType":"VariableDeclaration","scope":674,"src":"5171:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":639,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[{"expression":{"id":643,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5214:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":388,"src":"5214:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":645,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"5230:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"5239:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":641,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:7"},{"condition":{"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:7","subExpression":{"arguments":[{"id":651,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5286:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"id":652,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"5293:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":650,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5262:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":673,"nodeType":"IfStatement","src":"5257:201:7","trueBody":{"id":672,"nodeType":"Block","src":"5308:150:7","statements":[{"expression":{"arguments":[{"id":656,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5342:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":659,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5364:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":388,"src":"5364:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":661,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"5380:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":657,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":655,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"5322:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":666,"nodeType":"ExpressionStatement","src":"5322:71:7"},{"expression":{"arguments":[{"id":668,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5427:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"id":669,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"5434:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":667,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"5407:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"5407:40:7"}]}}]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"4513:566:7","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:7","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"token","nameLocation":"5113:5:7","nodeType":"VariableDeclaration","scope":675,"src":"5106:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},"typeName":{"id":631,"nodeType":"UserDefinedTypeName","pathNode":{"id":630,"name":"IERC20","nameLocations":["5106:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"5106:6:7"},"referencedDeclaration":401,"src":"5106:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"spender","nameLocation":"5128:7:7","nodeType":"VariableDeclaration","scope":675,"src":"5120:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"5145:5:7","nodeType":"VariableDeclaration","scope":675,"src":"5137:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:7"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"5161:0:7"},"scope":891,"src":"5084:380:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":717,"nodeType":"Block","src":"5911:219:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":688,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5925:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:7","memberName":"code","nodeType":"MemberAccess","src":"5925:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:7","memberName":"length","nodeType":"MemberAccess","src":"5925:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:7","subExpression":{"arguments":[{"id":702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6034:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"6038:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":704,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"6045:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":700,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"6012:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:7","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":266,"src":"6012:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":715,"nodeType":"IfStatement","src":"6007:117:7","trueBody":{"id":714,"nodeType":"Block","src":"6052:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":710,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"6106:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}],"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:7","typeDescriptions":{}}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":707,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"6073:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":713,"nodeType":"RevertStatement","src":"6066:47:7"}]}},"id":716,"nodeType":"IfStatement","src":"5921:203:7","trueBody":{"id":699,"nodeType":"Block","src":"5946:55:7","statements":[{"expression":{"arguments":[{"id":694,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"5973:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}},{"id":695,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5980:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"5984:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":693,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"5960:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":698,"nodeType":"ExpressionStatement","src":"5960:30:7"}]}}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"5470:333:7","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":718,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:7","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"token","nameLocation":"5849:5:7","nodeType":"VariableDeclaration","scope":718,"src":"5840:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"},"typeName":{"id":678,"nodeType":"UserDefinedTypeName","pathNode":{"id":677,"name":"IERC1363","nameLocations":["5840:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"5840:8:7"},"referencedDeclaration":315,"src":"5840:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"to","nameLocation":"5864:2:7","nodeType":"VariableDeclaration","scope":718,"src":"5856:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"value","nameLocation":"5876:5:7","nodeType":"VariableDeclaration","scope":718,"src":"5868:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"data","nameLocation":"5896:4:7","nodeType":"VariableDeclaration","scope":718,"src":"5883:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":684,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:7"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"5911:0:7"},"scope":891,"src":"5808:322:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":764,"nodeType":"Block","src":"6649:239:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6663:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:7","memberName":"code","nodeType":"MemberAccess","src":"6663:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:7","memberName":"length","nodeType":"MemberAccess","src":"6663:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:7","subExpression":{"arguments":[{"id":748,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6786:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6792:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6796:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":751,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6803:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":746,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6760:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:7","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":292,"src":"6760:25:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":762,"nodeType":"IfStatement","src":"6755:127:7","trueBody":{"id":761,"nodeType":"Block","src":"6810:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":757,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6864:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}],"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:7","typeDescriptions":{}}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":754,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"6831:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":760,"nodeType":"RevertStatement","src":"6824:47:7"}]}},"id":763,"nodeType":"IfStatement","src":"6659:223:7","trueBody":{"id":745,"nodeType":"Block","src":"6684:65:7","statements":[{"expression":{"arguments":[{"id":739,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6715:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}},{"id":740,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6722:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6728:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6732:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":738,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"6698:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"ExpressionStatement","src":"6698:40:7"}]}}]},"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"6136:341:7","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":765,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:7","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"token","nameLocation":"6536:5:7","nodeType":"VariableDeclaration","scope":765,"src":"6527:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"},"typeName":{"id":721,"nodeType":"UserDefinedTypeName","pathNode":{"id":720,"name":"IERC1363","nameLocations":["6527:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"6527:8:7"},"referencedDeclaration":315,"src":"6527:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"from","nameLocation":"6559:4:7","nodeType":"VariableDeclaration","scope":765,"src":"6551:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"to","nameLocation":"6581:2:7","nodeType":"VariableDeclaration","scope":765,"src":"6573:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"value","nameLocation":"6601:5:7","nodeType":"VariableDeclaration","scope":765,"src":"6593:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"data","nameLocation":"6629:4:7","nodeType":"VariableDeclaration","scope":765,"src":"6616:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":729,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:7"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"6649:0:7"},"scope":891,"src":"6482:406:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"7655:218:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":778,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7669:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:7","memberName":"code","nodeType":"MemberAccess","src":"7669:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:7","memberName":"length","nodeType":"MemberAccess","src":"7669:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:7","subExpression":{"arguments":[{"id":792,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7777:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7781:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":794,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7788:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":790,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7756:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:7","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":314,"src":"7756:20:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":805,"nodeType":"IfStatement","src":"7751:116:7","trueBody":{"id":804,"nodeType":"Block","src":"7795:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":800,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7849:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}],"id":799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:7","typeDescriptions":{}}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":797,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"7816:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":803,"nodeType":"RevertStatement","src":"7809:47:7"}]}},"id":806,"nodeType":"IfStatement","src":"7665:202:7","trueBody":{"id":789,"nodeType":"Block","src":"7690:55:7","statements":[{"expression":{"arguments":[{"id":784,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7717:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}},{"id":785,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7724:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7728:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":783,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"7704:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"7704:30:7"}]}}]},"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"6894:654:7","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:7","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"token","nameLocation":"7593:5:7","nodeType":"VariableDeclaration","scope":808,"src":"7584:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"},"typeName":{"id":768,"nodeType":"UserDefinedTypeName","pathNode":{"id":767,"name":"IERC1363","nameLocations":["7584:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"7584:8:7"},"referencedDeclaration":315,"src":"7584:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$315","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"to","nameLocation":"7608:2:7","nodeType":"VariableDeclaration","scope":808,"src":"7600:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"value","nameLocation":"7620:5:7","nodeType":"VariableDeclaration","scope":808,"src":"7612:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":775,"mutability":"mutable","name":"data","nameLocation":"7640:4:7","nodeType":"VariableDeclaration","scope":808,"src":"7627:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":774,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:7"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"7655:0:7"},"scope":891,"src":"7553:320:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":848,"nodeType":"Block","src":"8440:650:7","statements":[{"assignments":[818],"declarations":[{"constant":false,"id":818,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:7","nodeType":"VariableDeclaration","scope":848,"src":"8450:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":819,"nodeType":"VariableDeclarationStatement","src":"8450:18:7"},{"assignments":[821],"declarations":[{"constant":false,"id":821,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:7","nodeType":"VariableDeclaration","scope":848,"src":"8478:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":822,"nodeType":"VariableDeclarationStatement","src":"8478:19:7"},{"AST":{"nativeSrc":"8532:396:7","nodeType":"YulBlock","src":"8532:396:7","statements":[{"nativeSrc":"8546:75:7","nodeType":"YulVariableDeclaration","src":"8546:75:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:7","nodeType":"YulIdentifier","src":"8566:3:7"},"nativeSrc":"8566:5:7","nodeType":"YulFunctionCall","src":"8566:5:7"},{"name":"token","nativeSrc":"8573:5:7","nodeType":"YulIdentifier","src":"8573:5:7"},{"kind":"number","nativeSrc":"8580:1:7","nodeType":"YulLiteral","src":"8580:1:7","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:7","nodeType":"YulIdentifier","src":"8587:4:7"},{"kind":"number","nativeSrc":"8593:4:7","nodeType":"YulLiteral","src":"8593:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:7","nodeType":"YulIdentifier","src":"8583:3:7"},"nativeSrc":"8583:15:7","nodeType":"YulFunctionCall","src":"8583:15:7"},{"arguments":[{"name":"data","nativeSrc":"8606:4:7","nodeType":"YulIdentifier","src":"8606:4:7"}],"functionName":{"name":"mload","nativeSrc":"8600:5:7","nodeType":"YulIdentifier","src":"8600:5:7"},"nativeSrc":"8600:11:7","nodeType":"YulFunctionCall","src":"8600:11:7"},{"kind":"number","nativeSrc":"8613:1:7","nodeType":"YulLiteral","src":"8613:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:7","nodeType":"YulLiteral","src":"8616:4:7","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:7","nodeType":"YulIdentifier","src":"8561:4:7"},"nativeSrc":"8561:60:7","nodeType":"YulFunctionCall","src":"8561:60:7"},"variables":[{"name":"success","nativeSrc":"8550:7:7","nodeType":"YulTypedName","src":"8550:7:7","type":""}]},{"body":{"nativeSrc":"8682:157:7","nodeType":"YulBlock","src":"8682:157:7","statements":[{"nativeSrc":"8700:22:7","nodeType":"YulVariableDeclaration","src":"8700:22:7","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:7","nodeType":"YulLiteral","src":"8717:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:7","nodeType":"YulIdentifier","src":"8711:5:7"},"nativeSrc":"8711:11:7","nodeType":"YulFunctionCall","src":"8711:11:7"},"variables":[{"name":"ptr","nativeSrc":"8704:3:7","nodeType":"YulTypedName","src":"8704:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:7","nodeType":"YulIdentifier","src":"8754:3:7"},{"kind":"number","nativeSrc":"8759:1:7","nodeType":"YulLiteral","src":"8759:1:7","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:7","nodeType":"YulIdentifier","src":"8762:14:7"},"nativeSrc":"8762:16:7","nodeType":"YulFunctionCall","src":"8762:16:7"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:7","nodeType":"YulIdentifier","src":"8739:14:7"},"nativeSrc":"8739:40:7","nodeType":"YulFunctionCall","src":"8739:40:7"},"nativeSrc":"8739:40:7","nodeType":"YulExpressionStatement","src":"8739:40:7"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:7","nodeType":"YulIdentifier","src":"8803:3:7"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:7","nodeType":"YulIdentifier","src":"8808:14:7"},"nativeSrc":"8808:16:7","nodeType":"YulFunctionCall","src":"8808:16:7"}],"functionName":{"name":"revert","nativeSrc":"8796:6:7","nodeType":"YulIdentifier","src":"8796:6:7"},"nativeSrc":"8796:29:7","nodeType":"YulFunctionCall","src":"8796:29:7"},"nativeSrc":"8796:29:7","nodeType":"YulExpressionStatement","src":"8796:29:7"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:7","nodeType":"YulIdentifier","src":"8673:7:7"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:7","nodeType":"YulIdentifier","src":"8666:6:7"},"nativeSrc":"8666:15:7","nodeType":"YulFunctionCall","src":"8666:15:7"},"nativeSrc":"8663:176:7","nodeType":"YulIf","src":"8663:176:7"},{"nativeSrc":"8852:30:7","nodeType":"YulAssignment","src":"8852:30:7","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:7","nodeType":"YulIdentifier","src":"8866:14:7"},"nativeSrc":"8866:16:7","nodeType":"YulFunctionCall","src":"8866:16:7"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:7","nodeType":"YulIdentifier","src":"8852:10:7"}]},{"nativeSrc":"8895:23:7","nodeType":"YulAssignment","src":"8895:23:7","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:7","nodeType":"YulLiteral","src":"8916:1:7","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:7","nodeType":"YulIdentifier","src":"8910:5:7"},"nativeSrc":"8910:8:7","nodeType":"YulFunctionCall","src":"8910:8:7"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:7","nodeType":"YulIdentifier","src":"8895:11:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":814,"isOffset":false,"isSlot":false,"src":"8587:4:7","valueSize":1},{"declaration":814,"isOffset":false,"isSlot":false,"src":"8606:4:7","valueSize":1},{"declaration":818,"isOffset":false,"isSlot":false,"src":"8852:10:7","valueSize":1},{"declaration":821,"isOffset":false,"isSlot":false,"src":"8895:11:7","valueSize":1},{"declaration":812,"isOffset":false,"isSlot":false,"src":"8573:5:7","valueSize":1}],"flags":["memory-safe"],"id":823,"nodeType":"InlineAssembly","src":"8507:421:7"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8942:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":835,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"8994:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:7","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":829,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"8968:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}],"id":828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:7","typeDescriptions":{}}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:7","memberName":"code","nodeType":"MemberAccess","src":"8960:19:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:7","memberName":"length","nodeType":"MemberAccess","src":"8960:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":847,"nodeType":"IfStatement","src":"8938:146:7","trueBody":{"id":846,"nodeType":"Block","src":"9012:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":842,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"9066:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:7","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":839,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"9033:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":845,"nodeType":"RevertStatement","src":"9026:47:7"}]}}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"7879:486:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:7","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"token","nameLocation":"8406:5:7","nodeType":"VariableDeclaration","scope":849,"src":"8399:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},"typeName":{"id":811,"nodeType":"UserDefinedTypeName","pathNode":{"id":810,"name":"IERC20","nameLocations":["8399:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"8399:6:7"},"referencedDeclaration":401,"src":"8399:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"data","nameLocation":"8426:4:7","nodeType":"VariableDeclaration","scope":849,"src":"8413:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":813,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:7"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"8440:0:7"},"scope":891,"src":"8370:720:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":889,"nodeType":"Block","src":"9681:391:7","statements":[{"assignments":[861],"declarations":[{"constant":false,"id":861,"mutability":"mutable","name":"success","nameLocation":"9696:7:7","nodeType":"VariableDeclaration","scope":889,"src":"9691:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":860,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":862,"nodeType":"VariableDeclarationStatement","src":"9691:12:7"},{"assignments":[864],"declarations":[{"constant":false,"id":864,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:7","nodeType":"VariableDeclaration","scope":889,"src":"9713:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":865,"nodeType":"VariableDeclarationStatement","src":"9713:18:7"},{"assignments":[867],"declarations":[{"constant":false,"id":867,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:7","nodeType":"VariableDeclaration","scope":889,"src":"9741:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":868,"nodeType":"VariableDeclarationStatement","src":"9741:19:7"},{"AST":{"nativeSrc":"9795:174:7","nodeType":"YulBlock","src":"9795:174:7","statements":[{"nativeSrc":"9809:71:7","nodeType":"YulAssignment","src":"9809:71:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:7","nodeType":"YulIdentifier","src":"9825:3:7"},"nativeSrc":"9825:5:7","nodeType":"YulFunctionCall","src":"9825:5:7"},{"name":"token","nativeSrc":"9832:5:7","nodeType":"YulIdentifier","src":"9832:5:7"},{"kind":"number","nativeSrc":"9839:1:7","nodeType":"YulLiteral","src":"9839:1:7","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:7","nodeType":"YulIdentifier","src":"9846:4:7"},{"kind":"number","nativeSrc":"9852:4:7","nodeType":"YulLiteral","src":"9852:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:7","nodeType":"YulIdentifier","src":"9842:3:7"},"nativeSrc":"9842:15:7","nodeType":"YulFunctionCall","src":"9842:15:7"},{"arguments":[{"name":"data","nativeSrc":"9865:4:7","nodeType":"YulIdentifier","src":"9865:4:7"}],"functionName":{"name":"mload","nativeSrc":"9859:5:7","nodeType":"YulIdentifier","src":"9859:5:7"},"nativeSrc":"9859:11:7","nodeType":"YulFunctionCall","src":"9859:11:7"},{"kind":"number","nativeSrc":"9872:1:7","nodeType":"YulLiteral","src":"9872:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:7","nodeType":"YulLiteral","src":"9875:4:7","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:7","nodeType":"YulIdentifier","src":"9820:4:7"},"nativeSrc":"9820:60:7","nodeType":"YulFunctionCall","src":"9820:60:7"},"variableNames":[{"name":"success","nativeSrc":"9809:7:7","nodeType":"YulIdentifier","src":"9809:7:7"}]},{"nativeSrc":"9893:30:7","nodeType":"YulAssignment","src":"9893:30:7","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:7","nodeType":"YulIdentifier","src":"9907:14:7"},"nativeSrc":"9907:16:7","nodeType":"YulFunctionCall","src":"9907:16:7"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:7","nodeType":"YulIdentifier","src":"9893:10:7"}]},{"nativeSrc":"9936:23:7","nodeType":"YulAssignment","src":"9936:23:7","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:7","nodeType":"YulLiteral","src":"9957:1:7","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:7","nodeType":"YulIdentifier","src":"9951:5:7"},"nativeSrc":"9951:8:7","nodeType":"YulFunctionCall","src":"9951:8:7"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:7","nodeType":"YulIdentifier","src":"9936:11:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":855,"isOffset":false,"isSlot":false,"src":"9846:4:7","valueSize":1},{"declaration":855,"isOffset":false,"isSlot":false,"src":"9865:4:7","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"9893:10:7","valueSize":1},{"declaration":867,"isOffset":false,"isSlot":false,"src":"9936:11:7","valueSize":1},{"declaration":861,"isOffset":false,"isSlot":false,"src":"9809:7:7","valueSize":1},{"declaration":853,"isOffset":false,"isSlot":false,"src":"9832:5:7","valueSize":1}],"flags":["memory-safe"],"id":869,"nodeType":"InlineAssembly","src":"9770:199:7"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"9985:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":871,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"9997:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"10048:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:7","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":876,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10023:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}],"id":875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:7","typeDescriptions":{}}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:7","memberName":"code","nodeType":"MemberAccess","src":"10015:19:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:7","memberName":"length","nodeType":"MemberAccess","src":"10015:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":859,"id":888,"nodeType":"Return","src":"9978:87:7"}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"9096:491:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":890,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:7","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"token","nameLocation":"9632:5:7","nodeType":"VariableDeclaration","scope":890,"src":"9625:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},"typeName":{"id":852,"nodeType":"UserDefinedTypeName","pathNode":{"id":851,"name":"IERC20","nameLocations":["9625:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"9625:6:7"},"referencedDeclaration":401,"src":"9625:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"data","nameLocation":"9652:4:7","nodeType":"VariableDeclaration","scope":890,"src":"9639:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":854,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:7"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"9675:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:7"},"scope":891,"src":"9592:480:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":892,"src":"698:9376:7","usedErrors":[439,448],"usedEvents":[]}],"src":"115:9960:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[921]},"id":922,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":893,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":921,"linearizedBaseContracts":[921],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":902,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":898,"id":901,"nodeType":"Return","src":"728:17:8"}]},"id":903,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":903,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":921,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":908,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":907,"id":910,"nodeType":"Return","src":"835:15:8"}]},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":905,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":921,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":919,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":916,"id":918,"nodeType":"Return","src":"945:8:8"}]},"id":920,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":921,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":922,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[933]},"id":934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":923,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"142:280:9","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":933,"linearizedBaseContracts":[933],"name":"IERC165","nameLocation":"433:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"447:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":932,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:9","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:9","nodeType":"VariableDeclaration","scope":932,"src":"819:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":926,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:9"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"862:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":929,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:9"},"scope":933,"src":"792:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":934,"src":"423:447:9","usedErrors":[],"usedEvents":[]}],"src":"115:756:9"},"id":9},"contracts/core/AuditorManager.sol":{"ast":{"absolutePath":"contracts/core/AuditorManager.sol","exportedSymbols":{"AuditorManager":[1054],"Point":[5014],"ZeroAddress":[4466]},"id":1055,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":935,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"133:23:10"},{"absolutePath":"contracts/types/Types.sol","file":"../types/Types.sol","id":937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1055,"sourceUnit":5144,"src":"158:41:10","symbolAliases":[{"foreign":{"id":936,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"166:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/errors/Errors.sol","file":"../errors/Errors.sol","id":939,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1055,"sourceUnit":4471,"src":"200:49:10","symbolAliases":[{"foreign":{"id":938,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"208:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"AuditorManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"251:546:10","text":" @title AuditorManager\n @notice Abstract contract that manages auditor-related functionality for encrypted ERC operations\n @dev This contract is responsible for:\n      1. Storing and managing the auditor's address and public key\n      2. Providing access control for auditor-related operations\n      3. Emitting events when auditor information changes\n The auditor is a crucial component in the encrypted ERC system that:\n - Ensures compliance with regulatory requirements\n - Provides oversight for private operations"},"fullyImplemented":true,"id":1054,"linearizedBaseContracts":[1054],"name":"AuditorManager","nameLocation":"816:14:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"1006:127:10","text":"@notice The address of the current auditor\n @dev This address is used to identify the auditor and for access control"},"functionSelector":"3ec045a6","id":947,"mutability":"mutable","name":"auditor","nameLocation":"1153:7:10","nodeType":"VariableDeclaration","scope":1054,"src":"1138:35:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1171:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:10","typeDescriptions":{}}},"id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"1180:231:10","text":"@notice The public key of the current auditor\n @dev This is used in zero-knowledge proofs to validate auditor signatures\n      The point (0,1) is considered invalid as it's the identity point in the elliptic curve"},"functionSelector":"91584d49","id":955,"mutability":"mutable","name":"auditorPublicKey","nameLocation":"1429:16:10","nodeType":"VariableDeclaration","scope":1054,"src":"1416:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point"},"typeName":{"id":950,"nodeType":"UserDefinedTypeName","pathNode":{"id":949,"name":"Point","nameLocations":["1416:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"1416:5:10"},"referencedDeclaration":5014,"src":"1416:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"value":{"arguments":[{"hexValue":"30","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1458:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1464:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":951,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"1448:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1455:1:10","1461:1:10"],"names":["x","y"],"nodeType":"FunctionCall","src":"1448:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"visibility":"public"},{"anonymous":false,"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"1643:183:10","text":" @notice Emitted when the auditor's information is updated\n @param oldAuditor The previous auditor's address\n @param newAuditor The new auditor's address"},"eventSelector":"dbeeb2970745c839058876b084c0d772566ff6b5aaa47938c394cd171a38c24c","id":962,"name":"AuditorChanged","nameLocation":"1837:14:10","nodeType":"EventDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"indexed":true,"mutability":"mutable","name":"oldAuditor","nameLocation":"1877:10:10","nodeType":"VariableDeclaration","scope":962,"src":"1861:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"indexed":true,"mutability":"mutable","name":"newAuditor","nameLocation":"1913:10:10","nodeType":"VariableDeclaration","scope":962,"src":"1897:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1851:78:10"},"src":"1831:99:10"},{"body":{"id":989,"nodeType":"Block","src":"2533:210:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":966,"name":"auditorPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2564:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2581:1:10","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"2564:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2586:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2564:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":970,"name":"auditorPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2591:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2608:1:10","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"2591:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2613:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2591:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2564:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756469746f72207075626c6963206b6579206e6f7420736574","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2628:28:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_be3129bf4092c85b30596ba20f809328244460f52cc690d5a973a612de6a6d65","typeString":"literal_string \"Auditor public key not set\""},"value":"Auditor public key not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be3129bf4092c85b30596ba20f809328244460f52cc690d5a973a612de6a6d65","typeString":"literal_string \"Auditor public key not set\""}],"id":965,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2543:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2543:123:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"ExpressionStatement","src":"2543:123:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":979,"name":"auditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2684:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2703:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2695:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"2695:7:10","typeDescriptions":{}}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2695:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2684:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756469746f72206e6f7420736574","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2707:17:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_60a3cd77f988db06c2f7c27b5a969fd7936df17332b3f55ca55a006b660fed35","typeString":"literal_string \"Auditor not set\""},"value":"Auditor not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60a3cd77f988db06c2f7c27b5a969fd7936df17332b3f55ca55a006b660fed35","typeString":"literal_string \"Auditor not set\""}],"id":978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2676:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2676:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"2676:49:10"},{"id":988,"nodeType":"PlaceholderStatement","src":"2735:1:10"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"2105:395:10","text":" @notice Ensures that an auditor is properly\n @dev This modifier checks two conditions:\n      1. The auditor's public key is valid (not the identity point)\n      2. The auditor's address is not the zero address\n Requirements:\n - Auditor public key must be set (not the identity point)\n - Auditor address must be set (not zero address)"},"id":990,"name":"onlyIfAuditorSet","nameLocation":"2514:16:10","nodeType":"ModifierDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[],"src":"2530:2:10"},"src":"2505:238:10","virtual":false,"visibility":"internal"},{"body":{"id":1006,"nodeType":"Block","src":"3254:74:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":996,"name":"auditorPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"3271:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3288:1:10","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"3271:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3293:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3271:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1000,"name":"auditorPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"3298:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3315:1:10","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"3298:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3320:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3298:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3271:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":995,"id":1005,"nodeType":"Return","src":"3264:57:10"}]},"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"2918:275:10","text":" @notice Checks if the auditor's public key is properly set\n @return bool True if the auditor's public key is set and valid\n @dev This function is used to verify if the contract is ready for\n      operations that require auditor validation"},"functionSelector":"034a1c18","id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"isAuditorKeySet","nameLocation":"3207:15:10","nodeType":"FunctionDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[],"src":"3222:2:10"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1007,"src":"3248:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":993,"name":"bool","nodeType":"ElementaryTypeName","src":"3248:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3247:6:10"},"scope":1054,"src":"3198:130:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1052,"nodeType":"Block","src":"4103:336:10","statements":[{"assignments":[1018],"declarations":[{"constant":false,"id":1018,"mutability":"mutable","name":"oldAuditor","nameLocation":"4121:10:10","nodeType":"VariableDeclaration","scope":1052,"src":"4113:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4113:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1020,"initialValue":{"id":1019,"name":"auditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4134:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4113:28:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1021,"name":"newAuditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"4207:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4229:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4221:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"4221:7:10","typeDescriptions":{}}},"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4221:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4207:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1031,"nodeType":"IfStatement","src":"4203:75:10","trueBody":{"id":1030,"nodeType":"Block","src":"4233:45:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1027,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"4254:11:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4254:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1029,"nodeType":"RevertStatement","src":"4247:20:10"}]}},{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1032,"name":"auditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4288:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1033,"name":"newAuditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"4298:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4288:20:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1035,"nodeType":"ExpressionStatement","src":"4288:20:10"},{"expression":{"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1036,"name":"auditorPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"4318:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":1038,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4347:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1040,"indexExpression":{"hexValue":"30","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4357:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4347:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1041,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4364:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1043,"indexExpression":{"hexValue":"31","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4364:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1037,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"4337:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4344:1:10","4361:1:10"],"names":["x","y"],"nodeType":"FunctionCall","src":"4337:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"4318:60:10","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1046,"nodeType":"ExpressionStatement","src":"4318:60:10"},{"eventCall":{"arguments":[{"id":1048,"name":"oldAuditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"4409:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"newAuditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"4421:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1047,"name":"AuditorChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"4394:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"EmitStatement","src":"4389:43:10"}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"3503:491:10","text":" @notice Updates the auditor's information\n @param newAuditor The address of the new auditor\n @param publicKey The public key of the new auditor\n @dev This function:\n      1. Validates the new auditor's address\n      2. Updates the auditor's information\n      3. Emits an event to track the change\n Requirements:\n - newAuditor must not be the zero address\n - publicKey must be a valid point on the elliptic curve"},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"_updateAuditor","nameLocation":"4008:14:10","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"newAuditor","nameLocation":"4040:10:10","nodeType":"VariableDeclaration","scope":1053,"src":"4032:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"4032:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"publicKey","nameLocation":"4078:9:10","nodeType":"VariableDeclaration","scope":1053,"src":"4060:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"4060:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1013,"length":{"hexValue":"32","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4068:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"4060:10:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"4022:71:10"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"4103:0:10"},"scope":1054,"src":"3999:440:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1055,"src":"798:3643:10","usedErrors":[],"usedEvents":[962]}],"src":"133:4309:10"},"id":10},"contracts/core/EncryptedUserBalances.sol":{"ast":{"absolutePath":"contracts/core/EncryptedUserBalances.sol","exportedSymbols":{"AmountPCT":[5040],"BabyJubJub":[5007],"BalanceHistory":[5066],"EGCT":[5073],"EncryptedBalance":[5061],"EncryptedUserBalances":[1643],"InvalidProof":[4450]},"id":1644,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":1056,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:11"},{"absolutePath":"contracts/types/Types.sol","file":"../types/Types.sol","id":1061,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1644,"sourceUnit":5144,"src":"159:85:11","symbolAliases":[{"foreign":{"id":1057,"name":"EncryptedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"167:16:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1058,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"185:4:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1059,"name":"BalanceHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"191:14:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1060,"name":"AmountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"207:9:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/errors/Errors.sol","file":"../errors/Errors.sol","id":1063,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1644,"sourceUnit":4471,"src":"245:50:11","symbolAliases":[{"foreign":{"id":1062,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"253:12:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/BabyJubJub.sol","file":"../libraries/BabyJubJub.sol","id":1065,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1644,"sourceUnit":5008,"src":"296:55:11","symbolAliases":[{"foreign":{"id":1064,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"304:10:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EncryptedUserBalances","contractDependencies":[],"contractKind":"contract","documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"353:510:11","text":" @title EncryptedUserBalances\n @notice Contract for managing encrypted user balances in the privacy-preserving ERC system\n @dev This contract handles:\n      1. Storage and retrieval of encrypted balances\n      2. Balance history tracking for transaction validation\n      3. Cryptographic operations on encrypted balances\n The contract uses ElGamal encryption (EGCT) to store balances privately,\n allowing users to prove they have sufficient funds without revealing the actual amount."},"fullyImplemented":true,"id":1643,"linearizedBaseContracts":[1643],"name":"EncryptedUserBalances","nameLocation":"873:21:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"1070:140:11","text":"@notice Mapping of user addresses to their encrypted balances for each token\n @dev Structure: user => tokenId => EncryptedBalance"},"functionSelector":"cbf1304d","id":1074,"mutability":"mutable","name":"balances","nameLocation":"1308:8:11","nodeType":"VariableDeclaration","scope":1643,"src":"1215:101:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance))"},"typeName":{"id":1073,"keyName":"user","keyNameLocation":"1231:4:11","keyType":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1215:77:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1072,"keyName":"tokenId","keyNameLocation":"1255:7:11","keyType":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1247:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1239:52:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance)"},"valueName":"balance","valueNameLocation":"1283:7:11","valueType":{"id":1071,"nodeType":"UserDefinedTypeName","pathNode":{"id":1070,"name":"EncryptedBalance","nameLocations":["1266:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":5061,"src":"1266:16:11"},"referencedDeclaration":5061,"src":"1266:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"}}}},"visibility":"public"},{"body":{"id":1100,"nodeType":"Block","src":"2289:42:11","statements":[{"expression":{"arguments":[{"id":1096,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2316:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2322:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1095,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"2306:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_EGCT_$5073_memory_ptr_$_t_uint256_$_t_array$_t_struct$_AmountPCT_$5040_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$_t_uint256_$","typeString":"function (address,uint256) view returns (struct EGCT memory,uint256,struct AmountPCT memory[] memory,uint256[7] memory,uint256)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2306:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_EGCT_$5073_memory_ptr_$_t_uint256_$_t_array$_t_struct$_AmountPCT_$5040_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$_t_uint256_$","typeString":"tuple(struct EGCT memory,uint256,struct AmountPCT memory[] memory,uint256[7] memory,uint256)"}},"functionReturnParameters":1094,"id":1099,"nodeType":"Return","src":"2299:25:11"}]},"documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"1492:494:11","text":" @notice Returns the encrypted balance for a user's standalone token\n @param user The address of the user\n @return eGCT The ElGamal ciphertext representing the encrypted balance\n @return nonce The current nonce used for balance validation\n @return amountPCTs Array of amount PCT\n @return balancePCT The current balance PCT\n @return transactionIndex The current transaction index\n @dev Since in standalone mode, the tokenId is always 0"},"functionSelector":"a865d5b2","id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfStandalone","nameLocation":"2000:19:11","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"user","nameLocation":"2037:4:11","nodeType":"VariableDeclaration","scope":1101,"src":"2029:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"2029:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2019:28:11"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"eGCT","nameLocation":"2120:4:11","nodeType":"VariableDeclaration","scope":1101,"src":"2108:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":1080,"nodeType":"UserDefinedTypeName","pathNode":{"id":1079,"name":"EGCT","nameLocations":["2108:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"2108:4:11"},"referencedDeclaration":5073,"src":"2108:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"nonce","nameLocation":"2146:5:11","nodeType":"VariableDeclaration","scope":1101,"src":"2138:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"amountPCTs","nameLocation":"2184:10:11","nodeType":"VariableDeclaration","scope":1101,"src":"2165:29:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_memory_ptr_$dyn_memory_ptr","typeString":"struct AmountPCT[]"},"typeName":{"baseType":{"id":1085,"nodeType":"UserDefinedTypeName","pathNode":{"id":1084,"name":"AmountPCT","nameLocations":["2165:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":5040,"src":"2165:9:11"},"referencedDeclaration":5040,"src":"2165:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_AmountPCT_$5040_storage_ptr","typeString":"struct AmountPCT"}},"id":1086,"nodeType":"ArrayTypeName","src":"2165:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr","typeString":"struct AmountPCT[]"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"balancePCT","nameLocation":"2226:10:11","nodeType":"VariableDeclaration","scope":1101,"src":"2208:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"2208:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1090,"length":{"hexValue":"37","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2216:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"2208:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"transactionIndex","nameLocation":"2258:16:11","nodeType":"VariableDeclaration","scope":1101,"src":"2250:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"2250:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:190:11"},"scope":1643,"src":"1991:340:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1145,"nodeType":"Block","src":"3126:257:11","statements":[{"assignments":[1126],"declarations":[{"constant":false,"id":1126,"mutability":"mutable","name":"balance","nameLocation":"3161:7:11","nodeType":"VariableDeclaration","scope":1145,"src":"3136:32:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"},"typeName":{"id":1125,"nodeType":"UserDefinedTypeName","pathNode":{"id":1124,"name":"EncryptedBalance","nameLocations":["3136:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":5061,"src":"3136:16:11"},"referencedDeclaration":5061,"src":"3136:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"}},"visibility":"internal"}],"id":1132,"initialValue":{"baseExpression":{"baseExpression":{"id":1127,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"3171:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance storage ref))"}},"id":1129,"indexExpression":{"id":1128,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3180:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3171:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance storage ref)"}},"id":1131,"indexExpression":{"id":1130,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"3186:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3171:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage","typeString":"struct EncryptedBalance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3136:58:11"},{"expression":{"components":[{"expression":{"id":1133,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3225:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3233:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"3225:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},{"expression":{"id":1135,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3251:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3259:5:11","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":5050,"src":"3251:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1137,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3278:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3286:10:11","memberName":"amountPCTs","nodeType":"MemberAccess","referencedDeclaration":5060,"src":"3278:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage","typeString":"struct AmountPCT storage ref[] storage ref"}},{"expression":{"id":1139,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3310:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3318:10:11","memberName":"balancePCT","nodeType":"MemberAccess","referencedDeclaration":5056,"src":"3310:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage","typeString":"uint256[7] storage ref"}},{"expression":{"id":1141,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3342:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3350:16:11","memberName":"transactionIndex","nodeType":"MemberAccess","referencedDeclaration":5052,"src":"3342:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3211:165:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_EGCT_$5073_storage_$_t_uint256_$_t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_$_t_array$_t_uint256_$7_storage_$_t_uint256_$","typeString":"tuple(struct EGCT storage ref,uint256,struct AmountPCT storage ref[] storage ref,uint256[7] storage ref,uint256)"}},"functionReturnParameters":1123,"id":1144,"nodeType":"Return","src":"3204:172:11"}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"2337:473:11","text":" @notice Returns the encrypted balance for a user's specified token\n @param user The address of the user\n @param tokenId The ID of the token\n @return eGCT The ElGamal ciphertext representing the encrypted balance\n @return nonce The current nonce used for balance validation\n @return amountPCTs Array of amount PCT\n @return balancePCT The current balance PCT\n @return transactionIndex The current transaction index"},"functionSelector":"00fdd58e","id":1146,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2824:9:11","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"user","nameLocation":"2851:4:11","nodeType":"VariableDeclaration","scope":1146,"src":"2843:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"2843:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"tokenId","nameLocation":"2873:7:11","nodeType":"VariableDeclaration","scope":1146,"src":"2865:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"2865:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2833:53:11"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"eGCT","nameLocation":"2957:4:11","nodeType":"VariableDeclaration","scope":1146,"src":"2945:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":1109,"nodeType":"UserDefinedTypeName","pathNode":{"id":1108,"name":"EGCT","nameLocations":["2945:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"2945:4:11"},"referencedDeclaration":5073,"src":"2945:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"nonce","nameLocation":"2983:5:11","nodeType":"VariableDeclaration","scope":1146,"src":"2975:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"2975:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"amountPCTs","nameLocation":"3021:10:11","nodeType":"VariableDeclaration","scope":1146,"src":"3002:29:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_memory_ptr_$dyn_memory_ptr","typeString":"struct AmountPCT[]"},"typeName":{"baseType":{"id":1114,"nodeType":"UserDefinedTypeName","pathNode":{"id":1113,"name":"AmountPCT","nameLocations":["3002:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":5040,"src":"3002:9:11"},"referencedDeclaration":5040,"src":"3002:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_AmountPCT_$5040_storage_ptr","typeString":"struct AmountPCT"}},"id":1115,"nodeType":"ArrayTypeName","src":"3002:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr","typeString":"struct AmountPCT[]"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"balancePCT","nameLocation":"3063:10:11","nodeType":"VariableDeclaration","scope":1146,"src":"3045:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"3045:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1119,"length":{"hexValue":"37","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3053:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"3045:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"transactionIndex","nameLocation":"3095:16:11","nodeType":"VariableDeclaration","scope":1146,"src":"3087:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"3087:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2931:190:11"},"scope":1643,"src":"2815:568:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1228,"nodeType":"Block","src":"4235:583:11","statements":[{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"balance","nameLocation":"4270:7:11","nodeType":"VariableDeclaration","scope":1228,"src":"4245:32:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"},"typeName":{"id":1162,"nodeType":"UserDefinedTypeName","pathNode":{"id":1161,"name":"EncryptedBalance","nameLocations":["4245:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":5061,"src":"4245:16:11"},"referencedDeclaration":5061,"src":"4245:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"}},"visibility":"internal"}],"id":1169,"initialValue":{"baseExpression":{"baseExpression":{"id":1164,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"4280:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance storage ref))"}},"id":1166,"indexExpression":{"id":1165,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4289:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4280:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance storage ref)"}},"id":1168,"indexExpression":{"id":1167,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4295:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4280:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage","typeString":"struct EncryptedBalance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4245:58:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":1170,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4379:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4387:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"4379:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":1172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4392:2:11","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"4379:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4395:1:11","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"4379:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4400:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4379:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":1176,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4405:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4413:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"4405:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":1178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4418:2:11","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"4405:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4421:1:11","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"4405:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4405:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4379:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1220,"nodeType":"Block","src":"4479:252:11","statements":[{"expression":{"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":1190,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4588:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4596:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"4588:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":1194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4601:2:11","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"4588:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":1197,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4622:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4630:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"4622:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":1199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4635:2:11","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"4622:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},{"expression":{"id":1200,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"4639:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":1201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4644:2:11","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"4639:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"expression":{"id":1195,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"4606:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4617:4:11","memberName":"_add","nodeType":"MemberAccess","referencedDeclaration":4764,"src":"4606:15:11","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4606:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"4588:59:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1204,"nodeType":"ExpressionStatement","src":"4588:59:11"},{"expression":{"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":1205,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4661:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4669:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"4661:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":1209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4674:2:11","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"4661:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":1212,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4695:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4703:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"4695:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":1214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4708:2:11","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"4695:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},{"expression":{"id":1215,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"4712:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":1216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4717:2:11","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"4712:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"expression":{"id":1210,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"4679:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4690:4:11","memberName":"_add","nodeType":"MemberAccess","referencedDeclaration":4764,"src":"4679:15:11","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4679:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"4661:59:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1219,"nodeType":"ExpressionStatement","src":"4661:59:11"}]},"id":1221,"nodeType":"IfStatement","src":"4375:356:11","trueBody":{"id":1189,"nodeType":"Block","src":"4429:44:11","statements":[{"expression":{"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1183,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4443:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4451:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"4443:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1186,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"4458:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"src":"4443:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":1188,"nodeType":"ExpressionStatement","src":"4443:19:11"}]}},{"expression":{"arguments":[{"id":1223,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4786:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1224,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4792:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1225,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"4801:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":1222,"name":"_addToUserHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"4768:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256[7] memory)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4768:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1227,"nodeType":"ExpressionStatement","src":"4768:43:11"}]},"documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"3558:520:11","text":" @notice Adds an encrypted amount to a user's balance\n @param user The address of the user\n @param tokenId The ID of the token\n @param eGCT The ElGamal ciphertext representing the amount to add\n @param amountPCT The amount PCT for transaction history\n @dev This function:\n      1. Initializes the balance if it's the first transaction\n      2. Adds the encrypted amount to the existing balance\n      3. Updates the user history (by adding new amount PCT)"},"id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"_addToUserBalance","nameLocation":"4092:17:11","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"user","nameLocation":"4127:4:11","nodeType":"VariableDeclaration","scope":1229,"src":"4119:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"4119:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"tokenId","nameLocation":"4149:7:11","nodeType":"VariableDeclaration","scope":1229,"src":"4141:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"4141:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"eGCT","nameLocation":"4178:4:11","nodeType":"VariableDeclaration","scope":1229,"src":"4166:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":1153,"nodeType":"UserDefinedTypeName","pathNode":{"id":1152,"name":"EGCT","nameLocations":["4166:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"4166:4:11"},"referencedDeclaration":5073,"src":"4166:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"amountPCT","nameLocation":"4210:9:11","nodeType":"VariableDeclaration","scope":1229,"src":"4192:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"4192:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1157,"length":{"hexValue":"37","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4200:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"4192:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"4109:116:11"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[],"src":"4235:0:11"},"scope":1643,"src":"4083:735:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1297,"nodeType":"Block","src":"5621:398:11","statements":[{"assignments":[1248],"declarations":[{"constant":false,"id":1248,"mutability":"mutable","name":"balance","nameLocation":"5656:7:11","nodeType":"VariableDeclaration","scope":1297,"src":"5631:32:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"},"typeName":{"id":1247,"nodeType":"UserDefinedTypeName","pathNode":{"id":1246,"name":"EncryptedBalance","nameLocations":["5631:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":5061,"src":"5631:16:11"},"referencedDeclaration":5061,"src":"5631:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"}},"visibility":"internal"}],"id":1254,"initialValue":{"baseExpression":{"baseExpression":{"id":1249,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"5666:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance storage ref))"}},"id":1251,"indexExpression":{"id":1250,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"5675:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5666:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance storage ref)"}},"id":1253,"indexExpression":{"id":1252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5681:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5666:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage","typeString":"struct EncryptedBalance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5631:58:11"},{"expression":{"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":1255,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"5700:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5708:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"5700:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":1259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5713:2:11","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"5700:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":1262,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"5734:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5742:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"5734:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":1264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5747:2:11","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"5734:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},{"expression":{"id":1265,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"5751:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":1266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5756:2:11","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"5751:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"expression":{"id":1260,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"5718:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5729:4:11","memberName":"_sub","nodeType":"MemberAccess","referencedDeclaration":4663,"src":"5718:15:11","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5718:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"5700:59:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1269,"nodeType":"ExpressionStatement","src":"5700:59:11"},{"expression":{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":1270,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"5769:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5777:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"5769:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":1274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5782:2:11","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"5769:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":1277,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"5803:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5811:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"5803:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":1279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5816:2:11","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"5803:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},{"expression":{"id":1280,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"5820:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":1281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5825:2:11","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"5820:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"expression":{"id":1275,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"5787:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5798:4:11","memberName":"_sub","nodeType":"MemberAccess","referencedDeclaration":4663,"src":"5787:15:11","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"5769:59:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1284,"nodeType":"ExpressionStatement","src":"5769:59:11"},{"expression":{"arguments":[{"id":1286,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"5908:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1287,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5914:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1288,"name":"transactionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"5923:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1285,"name":"_deleteUserHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"5889:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"ExpressionStatement","src":"5889:51:11"},{"expression":{"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1291,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"5981:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5989:10:11","memberName":"balancePCT","nodeType":"MemberAccess","referencedDeclaration":5056,"src":"5981:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage","typeString":"uint256[7] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1294,"name":"balancePCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"6002:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"src":"5981:31:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage","typeString":"uint256[7] storage ref"}},"id":1296,"nodeType":"ExpressionStatement","src":"5981:31:11"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"4824:598:11","text":" @notice Subtracts an encrypted amount from a user's balance\n @param user The address of the user\n @param tokenId The ID of the token\n @param eGCT The ElGamal ciphertext representing the amount to subtract\n @param balancePCT The new balance PCT after subtraction\n @param transactionIndex The transaction index to delete from history\n @dev This function:\n      1. Subtracts the encrypted amount from the balance\n      2. Updates the user history (by removing the specified transaction)\n      3. Updates the balance PCT for user"},"id":1298,"implemented":true,"kind":"function","modifiers":[],"name":"_subtractFromUserBalance","nameLocation":"5436:24:11","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"user","nameLocation":"5478:4:11","nodeType":"VariableDeclaration","scope":1298,"src":"5470:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"5470:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"tokenId","nameLocation":"5500:7:11","nodeType":"VariableDeclaration","scope":1298,"src":"5492:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"5492:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"eGCT","nameLocation":"5529:4:11","nodeType":"VariableDeclaration","scope":1298,"src":"5517:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":1236,"nodeType":"UserDefinedTypeName","pathNode":{"id":1235,"name":"EGCT","nameLocations":["5517:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"5517:4:11"},"referencedDeclaration":5073,"src":"5517:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"balancePCT","nameLocation":"5561:10:11","nodeType":"VariableDeclaration","scope":1298,"src":"5543:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"5543:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1240,"length":{"hexValue":"37","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5551:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"5543:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"transactionIndex","nameLocation":"5589:16:11","nodeType":"VariableDeclaration","scope":1298,"src":"5581:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"5581:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5460:151:11"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[],"src":"5621:0:11"},"scope":1643,"src":"5427:592:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1373,"nodeType":"Block","src":"6874:630:11","statements":[{"assignments":[1312],"declarations":[{"constant":false,"id":1312,"mutability":"mutable","name":"balance","nameLocation":"6909:7:11","nodeType":"VariableDeclaration","scope":1373,"src":"6884:32:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"},"typeName":{"id":1311,"nodeType":"UserDefinedTypeName","pathNode":{"id":1310,"name":"EncryptedBalance","nameLocations":["6884:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":5061,"src":"6884:16:11"},"referencedDeclaration":5061,"src":"6884:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"}},"visibility":"internal"}],"id":1318,"initialValue":{"baseExpression":{"baseExpression":{"id":1313,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"6919:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance storage ref))"}},"id":1315,"indexExpression":{"id":1314,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"6928:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6919:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance storage ref)"}},"id":1317,"indexExpression":{"id":1316,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"6934:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6919:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage","typeString":"struct EncryptedBalance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6884:58:11"},{"assignments":[1320],"declarations":[{"constant":false,"id":1320,"mutability":"mutable","name":"nonce","nameLocation":"6961:5:11","nodeType":"VariableDeclaration","scope":1373,"src":"6953:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"6953:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1323,"initialValue":{"expression":{"id":1321,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"6969:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6977:5:11","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":5050,"src":"6969:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6953:29:11"},{"assignments":[1325],"declarations":[{"constant":false,"id":1325,"mutability":"mutable","name":"balanceHash","nameLocation":"7000:11:11","nodeType":"VariableDeclaration","scope":1373,"src":"6992:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"6992:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1330,"initialValue":{"arguments":[{"expression":{"id":1327,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"7024:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7032:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"7024:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}],"id":1326,"name":"_hashEGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"7014:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_EGCT_$5073_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EGCT memory) pure returns (uint256)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7014:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6992:45:11"},{"expression":{"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1331,"name":"balanceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"7047:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":1337,"name":"balanceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"7090:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1338,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"7103:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1335,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7079:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7083:6:11","memberName":"encode","nodeType":"MemberAccess","src":"7079:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7079:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1334,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7069:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7069:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7061:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"7061:7:11","typeDescriptions":{}}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7061:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7047:64:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1343,"nodeType":"ExpressionStatement","src":"7047:64:11"},{"expression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1344,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"7164:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7172:11:11","memberName":"balanceList","nodeType":"MemberAccess","referencedDeclaration":5048,"src":"7164:19:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BalanceHistory_$5066_storage_$","typeString":"mapping(uint256 => struct BalanceHistory storage ref)"}},"id":1348,"indexExpression":{"id":1346,"name":"balanceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"7184:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7164:32:11","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceHistory_$5066_storage","typeString":"struct BalanceHistory storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1350,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"7235:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7243:16:11","memberName":"transactionIndex","nodeType":"MemberAccess","referencedDeclaration":5052,"src":"7235:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7282:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1349,"name":"BalanceHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7199:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BalanceHistory_$5066_storage_ptr_$","typeString":"type(struct BalanceHistory storage pointer)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7228:5:11","7273:7:11"],"names":["index","isValid"],"nodeType":"FunctionCall","src":"7199:98:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BalanceHistory_$5066_memory_ptr","typeString":"struct BalanceHistory memory"}},"src":"7164:133:11","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceHistory_$5066_storage","typeString":"struct BalanceHistory storage ref"}},"id":1355,"nodeType":"ExpressionStatement","src":"7164:133:11"},{"expression":{"arguments":[{"arguments":[{"id":1362,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"7406:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},{"expression":{"id":1363,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"7424:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7432:16:11","memberName":"transactionIndex","nodeType":"MemberAccess","referencedDeclaration":5052,"src":"7424:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1361,"name":"AmountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"7390:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AmountPCT_$5040_storage_ptr_$","typeString":"type(struct AmountPCT storage pointer)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7401:3:11","7417:5:11"],"names":["pct","index"],"nodeType":"FunctionCall","src":"7390:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AmountPCT_$5040_memory_ptr","typeString":"struct AmountPCT memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AmountPCT_$5040_memory_ptr","typeString":"struct AmountPCT memory"}],"expression":{"expression":{"id":1356,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"7353:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7361:10:11","memberName":"amountPCTs","nodeType":"MemberAccess","referencedDeclaration":5060,"src":"7353:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage","typeString":"struct AmountPCT storage ref[] storage ref"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7372:4:11","memberName":"push","nodeType":"MemberAccess","src":"7353:23:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr_$_t_struct$_AmountPCT_$5040_storage_$returns$__$attached_to$_t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr_$","typeString":"function (struct AmountPCT storage ref[] storage pointer,struct AmountPCT storage ref)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7353:107:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1367,"nodeType":"ExpressionStatement","src":"7353:107:11"},{"expression":{"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7471:26:11","subExpression":{"expression":{"id":1368,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"7471:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7479:16:11","memberName":"transactionIndex","nodeType":"MemberAccess","referencedDeclaration":5052,"src":"7471:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1372,"nodeType":"ExpressionStatement","src":"7471:26:11"}]},"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"6025:718:11","text":" @notice Adds a transaction to the user's balance history\n @param user The address of the user\n @param tokenId The ID of the token\n @param amountPCT The amount PCT for the transaction\n @dev This function:\n      1. Calculates a unique hash for the current balance state\n      2. Marks this hash as valid in the balance history\n      3. Adds the amount PCT to the transaction history\n      4. Increments the transaction index\n The balance hash is unique for each transaction because it includes the nonce,\n which is incremented after each transaction. This ensures that each transaction\n can be uniquely identified and validated."},"id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"_addToUserHistory","nameLocation":"6757:17:11","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"user","nameLocation":"6792:4:11","nodeType":"VariableDeclaration","scope":1374,"src":"6784:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"6784:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"tokenId","nameLocation":"6814:7:11","nodeType":"VariableDeclaration","scope":1374,"src":"6806:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"6806:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"amountPCT","nameLocation":"6849:9:11","nodeType":"VariableDeclaration","scope":1374,"src":"6831:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"6831:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1306,"length":{"hexValue":"37","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6839:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"6831:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"6774:90:11"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[],"src":"6874:0:11"},"scope":1643,"src":"6748:756:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1433,"nodeType":"Block","src":"8126:425:11","statements":[{"assignments":[1384],"declarations":[{"constant":false,"id":1384,"mutability":"mutable","name":"balance","nameLocation":"8161:7:11","nodeType":"VariableDeclaration","scope":1433,"src":"8136:32:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"},"typeName":{"id":1383,"nodeType":"UserDefinedTypeName","pathNode":{"id":1382,"name":"EncryptedBalance","nameLocations":["8136:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":5061,"src":"8136:16:11"},"referencedDeclaration":5061,"src":"8136:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"}},"visibility":"internal"}],"id":1390,"initialValue":{"baseExpression":{"baseExpression":{"id":1385,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"8171:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance storage ref))"}},"id":1387,"indexExpression":{"id":1386,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"8180:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8171:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance storage ref)"}},"id":1389,"indexExpression":{"id":1388,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"8186:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8171:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage","typeString":"struct EncryptedBalance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8136:58:11"},{"assignments":[1392],"declarations":[{"constant":false,"id":1392,"mutability":"mutable","name":"nonce","nameLocation":"8213:5:11","nodeType":"VariableDeclaration","scope":1433,"src":"8205:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"8205:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1395,"initialValue":{"expression":{"id":1393,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8221:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8229:5:11","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":5050,"src":"8221:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8205:29:11"},{"assignments":[1397],"declarations":[{"constant":false,"id":1397,"mutability":"mutable","name":"balanceHash","nameLocation":"8252:11:11","nodeType":"VariableDeclaration","scope":1433,"src":"8244:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1402,"initialValue":{"arguments":[{"expression":{"id":1399,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8276:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8284:4:11","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"8276:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}],"id":1398,"name":"_hashEGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"8266:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_EGCT_$5073_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EGCT memory) pure returns (uint256)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8266:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8244:45:11"},{"expression":{"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1403,"name":"balanceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"8299:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":1409,"name":"balanceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"8342:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1410,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"8355:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1407,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8331:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8335:6:11","memberName":"encode","nodeType":"MemberAccess","src":"8331:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8331:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1406,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8321:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8321:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8313:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"8313:7:11","typeDescriptions":{}}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8313:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8299:64:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1415,"nodeType":"ExpressionStatement","src":"8299:64:11"},{"expression":{"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1416,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8374:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8382:11:11","memberName":"balanceList","nodeType":"MemberAccess","referencedDeclaration":5048,"src":"8374:19:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BalanceHistory_$5066_storage_$","typeString":"mapping(uint256 => struct BalanceHistory storage ref)"}},"id":1420,"indexExpression":{"id":1418,"name":"balanceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"8394:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8374:32:11","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceHistory_$5066_storage","typeString":"struct BalanceHistory storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1422,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8445:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8453:16:11","memberName":"transactionIndex","nodeType":"MemberAccess","referencedDeclaration":5052,"src":"8445:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8492:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1421,"name":"BalanceHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"8409:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BalanceHistory_$5066_storage_ptr_$","typeString":"type(struct BalanceHistory storage pointer)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8438:5:11","8483:7:11"],"names":["index","isValid"],"nodeType":"FunctionCall","src":"8409:98:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BalanceHistory_$5066_memory_ptr","typeString":"struct BalanceHistory memory"}},"src":"8374:133:11","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceHistory_$5066_storage","typeString":"struct BalanceHistory storage ref"}},"id":1427,"nodeType":"ExpressionStatement","src":"8374:133:11"},{"expression":{"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8518:26:11","subExpression":{"expression":{"id":1428,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8518:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8526:16:11","memberName":"transactionIndex","nodeType":"MemberAccess","referencedDeclaration":5052,"src":"8518:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1432,"nodeType":"ExpressionStatement","src":"8518:26:11"}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"7510:543:11","text":" @notice Commits the current balance state to the user's history\n @param user The address of the user\n @param tokenId The ID of the token\n @dev This function:\n      1. Calculates a unique hash for the current balance state\n      2. Marks this hash as valid in the balance history\n      3. Increments the transaction index\n This is used to create a checkpoint of the balance state after operations\n that don't change the balance amount but need to be recorded in history."},"id":1434,"implemented":true,"kind":"function","modifiers":[],"name":"_commitUserBalance","nameLocation":"8067:18:11","nodeType":"FunctionDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"user","nameLocation":"8094:4:11","nodeType":"VariableDeclaration","scope":1434,"src":"8086:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"8086:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"tokenId","nameLocation":"8108:7:11","nodeType":"VariableDeclaration","scope":1434,"src":"8100:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"8100:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8085:31:11"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[],"src":"8126:0:11"},"scope":1643,"src":"8058:493:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1514,"nodeType":"Block","src":"9345:518:11","statements":[{"assignments":[1446],"declarations":[{"constant":false,"id":1446,"mutability":"mutable","name":"balance","nameLocation":"9380:7:11","nodeType":"VariableDeclaration","scope":1514,"src":"9355:32:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"},"typeName":{"id":1445,"nodeType":"UserDefinedTypeName","pathNode":{"id":1444,"name":"EncryptedBalance","nameLocations":["9355:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":5061,"src":"9355:16:11"},"referencedDeclaration":5061,"src":"9355:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"}},"visibility":"internal"}],"id":1452,"initialValue":{"baseExpression":{"baseExpression":{"id":1447,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"9390:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance storage ref))"}},"id":1449,"indexExpression":{"id":1448,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"9399:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9390:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance storage ref)"}},"id":1451,"indexExpression":{"id":1450,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"9405:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9390:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage","typeString":"struct EncryptedBalance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9355:58:11"},{"body":{"id":1502,"nodeType":"Block","src":"9480:307:11","statements":[{"assignments":[1466],"declarations":[{"constant":false,"id":1466,"mutability":"mutable","name":"index","nameLocation":"9502:5:11","nodeType":"VariableDeclaration","scope":1502,"src":"9494:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"9494:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1470,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"9510:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9494:21:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"id":1471,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"9534:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9542:10:11","memberName":"amountPCTs","nodeType":"MemberAccess","referencedDeclaration":5060,"src":"9534:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage","typeString":"struct AmountPCT storage ref[] storage ref"}},"id":1474,"indexExpression":{"id":1473,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"9553:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9534:25:11","typeDescriptions":{"typeIdentifier":"t_struct$_AmountPCT_$5040_storage","typeString":"struct AmountPCT storage ref"}},"id":1475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9560:5:11","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":5039,"src":"9534:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1476,"name":"transactionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"9569:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9534:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1501,"nodeType":"IfStatement","src":"9530:247:11","trueBody":{"id":1500,"nodeType":"Block","src":"9587:190:11","statements":[{"expression":{"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1478,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"9605:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9613:10:11","memberName":"amountPCTs","nodeType":"MemberAccess","referencedDeclaration":5060,"src":"9605:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage","typeString":"struct AmountPCT storage ref[] storage ref"}},"id":1482,"indexExpression":{"id":1480,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"9624:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9605:25:11","typeDescriptions":{"typeIdentifier":"t_struct$_AmountPCT_$5040_storage","typeString":"struct AmountPCT storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":1483,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"9633:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9641:10:11","memberName":"amountPCTs","nodeType":"MemberAccess","referencedDeclaration":5060,"src":"9633:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage","typeString":"struct AmountPCT storage ref[] storage ref"}},"id":1490,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1485,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"9673:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9681:10:11","memberName":"amountPCTs","nodeType":"MemberAccess","referencedDeclaration":5060,"src":"9673:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage","typeString":"struct AmountPCT storage ref[] storage ref"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9692:6:11","memberName":"length","nodeType":"MemberAccess","src":"9673:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9701:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9673:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9633:87:11","typeDescriptions":{"typeIdentifier":"t_struct$_AmountPCT_$5040_storage","typeString":"struct AmountPCT storage ref"}},"src":"9605:115:11","typeDescriptions":{"typeIdentifier":"t_struct$_AmountPCT_$5040_storage","typeString":"struct AmountPCT storage ref"}},"id":1492,"nodeType":"ExpressionStatement","src":"9605:115:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1493,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"9738:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9746:10:11","memberName":"amountPCTs","nodeType":"MemberAccess","referencedDeclaration":5060,"src":"9738:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage","typeString":"struct AmountPCT storage ref[] storage ref"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9757:3:11","memberName":"pop","nodeType":"MemberAccess","src":"9738:22:11","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr_$","typeString":"function (struct AmountPCT storage ref[] storage pointer)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9738:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"ExpressionStatement","src":"9738:24:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"9468:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9472:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9468:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1503,"initializationExpression":{"assignments":[1454],"declarations":[{"constant":false,"id":1454,"mutability":"mutable","name":"i","nameLocation":"9437:1:11","nodeType":"VariableDeclaration","scope":1503,"src":"9429:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"9429:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1458,"initialValue":{"expression":{"expression":{"id":1455,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"9441:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9449:10:11","memberName":"amountPCTs","nodeType":"MemberAccess","referencedDeclaration":5060,"src":"9441:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage","typeString":"struct AmountPCT storage ref[] storage ref"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9460:6:11","memberName":"length","nodeType":"MemberAccess","src":"9441:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9429:37:11"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"9475:3:11","subExpression":{"id":1462,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"9475:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1464,"nodeType":"ExpressionStatement","src":"9475:3:11"},"nodeType":"ForStatement","src":"9424:363:11"},{"expression":{"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9797:15:11","subExpression":{"expression":{"id":1504,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"9797:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":1506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9805:5:11","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":5050,"src":"9797:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1508,"nodeType":"ExpressionStatement","src":"9797:15:11"},{"expression":{"arguments":[{"id":1510,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"9842:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1511,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"9848:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1509,"name":"_commitUserBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"9823:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9823:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1513,"nodeType":"ExpressionStatement","src":"9823:33:11"}]},"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"8557:659:11","text":" @notice Deletes transaction history up to a specific transaction index\n @param user The address of the user\n @param tokenId The ID of the token\n @param transactionIndex The transaction index to delete up to\n @dev This function:\n      1. Removes amount PCTs from the history up to the specified index\n      2. Increments the nonce (invalidate all previous balance hashes)\n      3. Commits the new balance state to history\n Instead of deleting individual history entries, this function uses the nonce\n to invalidate all previous balance hashes at once, which is more gas efficient."},"id":1515,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteUserHistory","nameLocation":"9230:18:11","nodeType":"FunctionDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"user","nameLocation":"9266:4:11","nodeType":"VariableDeclaration","scope":1515,"src":"9258:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"9258:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"tokenId","nameLocation":"9288:7:11","nodeType":"VariableDeclaration","scope":1515,"src":"9280:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"9280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"transactionIndex","nameLocation":"9313:16:11","nodeType":"VariableDeclaration","scope":1515,"src":"9305:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"9305:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9248:87:11"},"returnParameters":{"id":1443,"nodeType":"ParameterList","parameters":[],"src":"9345:0:11"},"scope":1643,"src":"9221:642:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1571,"nodeType":"Block","src":"10466:337:11","statements":[{"assignments":[1530],"declarations":[{"constant":false,"id":1530,"mutability":"mutable","name":"nonce","nameLocation":"10484:5:11","nodeType":"VariableDeclaration","scope":1571,"src":"10476:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"10476:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1537,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":1531,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"10492:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance storage ref))"}},"id":1533,"indexExpression":{"id":1532,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"10501:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10492:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance storage ref)"}},"id":1535,"indexExpression":{"id":1534,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"10507:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10492:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage","typeString":"struct EncryptedBalance storage ref"}},"id":1536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10516:5:11","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":5050,"src":"10492:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10476:45:11"},{"assignments":[1539],"declarations":[{"constant":false,"id":1539,"mutability":"mutable","name":"hashWithNonce","nameLocation":"10539:13:11","nodeType":"VariableDeclaration","scope":1571,"src":"10531:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"10531:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1550,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1545,"name":"balanceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"10597:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1546,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"10610:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1543,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10586:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10590:6:11","memberName":"encode","nodeType":"MemberAccess","src":"10586:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10586:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1542,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10576:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10576:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10555:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"10555:7:11","typeDescriptions":{}}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10555:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10531:96:11"},{"expression":{"components":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1551,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"10658:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance storage ref))"}},"id":1553,"indexExpression":{"id":1552,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"10667:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance storage ref)"}},"id":1555,"indexExpression":{"id":1554,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"10673:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage","typeString":"struct EncryptedBalance storage ref"}},"id":1556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10682:11:11","memberName":"balanceList","nodeType":"MemberAccess","referencedDeclaration":5048,"src":"10658:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BalanceHistory_$5066_storage_$","typeString":"mapping(uint256 => struct BalanceHistory storage ref)"}},"id":1558,"indexExpression":{"id":1557,"name":"hashWithNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"10694:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:50:11","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceHistory_$5066_storage","typeString":"struct BalanceHistory storage ref"}},"id":1559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10709:7:11","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":5065,"src":"10658:58:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"baseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1560,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"10730:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance storage ref))"}},"id":1562,"indexExpression":{"id":1561,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"10739:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10730:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance storage ref)"}},"id":1564,"indexExpression":{"id":1563,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"10745:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10730:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage","typeString":"struct EncryptedBalance storage ref"}},"id":1565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10754:11:11","memberName":"balanceList","nodeType":"MemberAccess","referencedDeclaration":5048,"src":"10730:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BalanceHistory_$5066_storage_$","typeString":"mapping(uint256 => struct BalanceHistory storage ref)"}},"id":1567,"indexExpression":{"id":1566,"name":"hashWithNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"10766:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10730:50:11","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceHistory_$5066_storage","typeString":"struct BalanceHistory storage ref"}},"id":1568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10781:5:11","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":5063,"src":"10730:56:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10644:152:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1528,"id":1570,"nodeType":"Return","src":"10637:159:11"}]},"documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"9869:447:11","text":" @notice Checks if a balance hash is valid for a user\n @param user The address of the user\n @param tokenId The ID of the token\n @param balanceHash The hash to validate\n @return isValid True if the hash is valid, false otherwise\n @return index The transaction index associated with the hash\n This is used to validate that a user is using a recent and valid balance\n in their transactions."},"id":1572,"implemented":true,"kind":"function","modifiers":[],"name":"_isBalanceValid","nameLocation":"10330:15:11","nodeType":"FunctionDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"user","nameLocation":"10363:4:11","nodeType":"VariableDeclaration","scope":1572,"src":"10355:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"10355:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1520,"mutability":"mutable","name":"tokenId","nameLocation":"10385:7:11","nodeType":"VariableDeclaration","scope":1572,"src":"10377:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"10377:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"balanceHash","nameLocation":"10410:11:11","nodeType":"VariableDeclaration","scope":1572,"src":"10402:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"10402:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10345:82:11"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1572,"src":"10451:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1524,"name":"bool","nodeType":"ElementaryTypeName","src":"10451:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1572,"src":"10457:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"10457:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10450:15:11"},"scope":1643,"src":"10321:482:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1610,"nodeType":"Block","src":"11311:338:11","statements":[{"assignments":[1586],"declarations":[{"constant":false,"id":1586,"mutability":"mutable","name":"balanceHash","nameLocation":"11367:11:11","nodeType":"VariableDeclaration","scope":1610,"src":"11359:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"11359:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1590,"initialValue":{"arguments":[{"id":1588,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"11391:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}],"id":1587,"name":"_hashEGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"11381:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_EGCT_$5073_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EGCT memory) pure returns (uint256)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11381:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11359:37:11"},{"assignments":[1592,1594],"declarations":[{"constant":false,"id":1592,"mutability":"mutable","name":"isValid","nameLocation":"11413:7:11","nodeType":"VariableDeclaration","scope":1610,"src":"11408:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1591,"name":"bool","nodeType":"ElementaryTypeName","src":"11408:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"transactionIndex","nameLocation":"11430:16:11","nodeType":"VariableDeclaration","scope":1610,"src":"11422:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"11422:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1600,"initialValue":{"arguments":[{"id":1596,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"11479:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1597,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"11497:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1598,"name":"balanceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"11518:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1595,"name":"_isBalanceValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"11450:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (address,uint256,uint256) view returns (bool,uint256)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11450:89:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11407:132:11"},{"condition":{"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11553:8:11","subExpression":{"id":1601,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"11554:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1607,"nodeType":"IfStatement","src":"11549:60:11","trueBody":{"id":1606,"nodeType":"Block","src":"11563:46:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1603,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"11584:12:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11584:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1605,"nodeType":"RevertStatement","src":"11577:21:11"}]}},{"expression":{"id":1608,"name":"transactionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"11626:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1584,"id":1609,"nodeType":"Return","src":"11619:23:11"}]},"documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"10809:358:11","text":" @notice Verifies a user's balance\n @param user The address of the user\n @param tokenId The ID of the token\n @param eGCT The ElGamal ciphertext representing the balance\n @return transactionIndex The transaction index associated with the balance\n @dev If balance is not valid, it reverts with InvalidProof error"},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyUserBalance","nameLocation":"11181:18:11","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"user","nameLocation":"11217:4:11","nodeType":"VariableDeclaration","scope":1611,"src":"11209:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1574,"name":"address","nodeType":"ElementaryTypeName","src":"11209:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1577,"mutability":"mutable","name":"tokenId","nameLocation":"11239:7:11","nodeType":"VariableDeclaration","scope":1611,"src":"11231:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1576,"name":"uint256","nodeType":"ElementaryTypeName","src":"11231:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"eGCT","nameLocation":"11268:4:11","nodeType":"VariableDeclaration","scope":1611,"src":"11256:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":1579,"nodeType":"UserDefinedTypeName","pathNode":{"id":1578,"name":"EGCT","nameLocations":["11256:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"11256:4:11"},"referencedDeclaration":5073,"src":"11256:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"src":"11199:79:11"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"11302:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11301:9:11"},"scope":1643,"src":"11172:477:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1641,"nodeType":"Block","src":"12034:178:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"expression":{"id":1625,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"12130:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":1626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12135:2:11","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"12130:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12138:1:11","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"12130:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1628,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"12141:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":1629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12146:2:11","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"12141:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":1630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12149:1:11","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"12141:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1631,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"12152:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":1632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12157:2:11","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"12152:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":1633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12160:1:11","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"12152:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1634,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"12163:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":1635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12168:2:11","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"12163:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":1636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12171:1:11","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"12163:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1623,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12119:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12123:6:11","memberName":"encode","nodeType":"MemberAccess","src":"12119:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12119:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1622,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12088:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12088:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12063:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"12063:7:11","typeDescriptions":{}}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12063:142:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1619,"id":1640,"nodeType":"Return","src":"12044:161:11"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"11655:305:11","text":" @notice Calculates a hash of an ElGamal ciphertext\n @param eGCT The ElGamal ciphertext to hash\n @return The hash of the ciphertext\n @dev This function creates a unique identifier for an encrypted balance\n      by hashing all components of the ElGamal ciphertext."},"id":1642,"implemented":true,"kind":"function","modifiers":[],"name":"_hashEGCT","nameLocation":"11974:9:11","nodeType":"FunctionDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"eGCT","nameLocation":"11996:4:11","nodeType":"VariableDeclaration","scope":1642,"src":"11984:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":1614,"nodeType":"UserDefinedTypeName","pathNode":{"id":1613,"name":"EGCT","nameLocations":["11984:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"11984:4:11"},"referencedDeclaration":5073,"src":"11984:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"src":"11983:18:11"},"returnParameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1642,"src":"12025:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"12025:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12024:9:11"},"scope":1643,"src":"11965:247:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1644,"src":"864:11350:11","usedErrors":[],"usedEvents":[]}],"src":"134:12081:11"},"id":11},"contracts/core/Registrar.sol":{"ast":{"absolutePath":"contracts/core/Registrar.sol","exportedSymbols":{"BabyJubJub":[5007],"IRegistrationVerifier":[4569],"InvalidChainId":[4458],"InvalidProof":[4450],"InvalidRegistrationHash":[4464],"InvalidSender":[4462],"Point":[5014],"RegisterProof":[5097],"Registrar":[1928],"UserAlreadyRegistered":[4442]},"id":1929,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":1645,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:12"},{"absolutePath":"contracts/types/Types.sol","file":"../types/Types.sol","id":1648,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1929,"sourceUnit":5144,"src":"159:56:12","symbolAliases":[{"foreign":{"id":1646,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"167:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1647,"name":"RegisterProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"174:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/verifiers/IRegistrationVerifier.sol","file":"../interfaces/verifiers/IRegistrationVerifier.sol","id":1650,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1929,"sourceUnit":4570,"src":"216:88:12","symbolAliases":[{"foreign":{"id":1649,"name":"IRegistrationVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"224:21:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/errors/Errors.sol","file":"../errors/Errors.sol","id":1656,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1929,"sourceUnit":4471,"src":"305:129:12","symbolAliases":[{"foreign":{"id":1651,"name":"UserAlreadyRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"313:21:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1652,"name":"InvalidChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"336:14:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1653,"name":"InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"352:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1654,"name":"InvalidRegistrationHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"367:23:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1655,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"392:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/BabyJubJub.sol","file":"../libraries/BabyJubJub.sol","id":1658,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1929,"sourceUnit":5008,"src":"449:55:12","symbolAliases":[{"foreign":{"id":1657,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"457:10:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Registrar","contractDependencies":[],"contractKind":"contract","documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"506:366:12","text":" @title Registrar\n @notice Contract for managing user registration in the privacy-preserving ERC system\n @dev This contract handles:\n      1. User registration with public keys\n      2. Verification of registration proofs\n The Registrar is a critical component that:\n - Associates Ethereum addresses with public keys for encrypted operations"},"fullyImplemented":true,"id":1928,"linearizedBaseContracts":[1928],"name":"Registrar","nameLocation":"882:9:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"1067:70:12","text":"@notice The verifier contract used to validate registration proofs"},"functionSelector":"92d05a85","id":1663,"mutability":"mutable","name":"registrationVerifier","nameLocation":"1171:20:12","nodeType":"VariableDeclaration","scope":1928,"src":"1142:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrationVerifier_$4569","typeString":"contract IRegistrationVerifier"},"typeName":{"id":1662,"nodeType":"UserDefinedTypeName","pathNode":{"id":1661,"name":"IRegistrationVerifier","nameLocations":["1142:21:12"],"nodeType":"IdentifierPath","referencedDeclaration":4569,"src":"1142:21:12"},"referencedDeclaration":4569,"src":"1142:21:12","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrationVerifier_$4569","typeString":"contract IRegistrationVerifier"}},"visibility":"public"},{"constant":false,"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"1198:58:12","text":"@notice Mapping of user addresses to their public keys"},"functionSelector":"4cd1f470","id":1669,"mutability":"mutable","name":"userPublicKeys","nameLocation":"1320:14:12","nodeType":"VariableDeclaration","scope":1928,"src":"1261:73:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Point_$5014_storage_$","typeString":"mapping(address => struct Point)"},"typeName":{"id":1668,"keyName":"userAddress","keyNameLocation":"1277:11:12","keyType":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"1269:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1261:51:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Point_$5014_storage_$","typeString":"mapping(address => struct Point)"},"valueName":"userPublicKey","valueNameLocation":"1298:13:12","valueType":{"id":1667,"nodeType":"UserDefinedTypeName","pathNode":{"id":1666,"name":"Point","nameLocations":["1292:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"1292:5:12"},"referencedDeclaration":5014,"src":"1292:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}}},"visibility":"public"},{"constant":false,"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"1341:118:12","text":"@notice Mapping of registration hashes to registration status\n @dev Used to prevent duplicate registrations"},"functionSelector":"579a6988","id":1674,"mutability":"mutable","name":"isRegistered","nameLocation":"1526:12:12","nodeType":"VariableDeclaration","scope":1928,"src":"1464:74:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":1673,"keyName":"registrationHash","keyNameLocation":"1480:16:12","keyType":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1464:54:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"isRegistered","valueNameLocation":"1505:12:12","valueType":{"id":1672,"name":"bool","nodeType":"ElementaryTypeName","src":"1500:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"documentation":{"id":1675,"nodeType":"StructuredDocumentation","src":"1714:133:12","text":"@notice Emitted when a user is registered\n @param user Address of the user\n @param publicKey Public key of the user"},"eventSelector":"a29f706235c83d457380cf21ecc4ba909fa846879eea28d1b12e4e3b82aa7590","id":1682,"name":"Register","nameLocation":"1858:8:12","nodeType":"EventDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1883:4:12","nodeType":"VariableDeclaration","scope":1682,"src":"1867:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1676,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1680,"indexed":false,"mutability":"mutable","name":"publicKey","nameLocation":"1895:9:12","nodeType":"VariableDeclaration","scope":1682,"src":"1889:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":1679,"nodeType":"UserDefinedTypeName","pathNode":{"id":1678,"name":"Point","nameLocations":["1889:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"1889:5:12"},"referencedDeclaration":5014,"src":"1889:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"src":"1866:39:12"},"src":"1852:54:12"},{"body":{"id":1694,"nodeType":"Block","src":"2272:84:12","statements":[{"expression":{"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1688,"name":"registrationVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"2282:20:12","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrationVerifier_$4569","typeString":"contract IRegistrationVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1690,"name":"registrationVerifier_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"2327:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1689,"name":"IRegistrationVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"2305:21:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRegistrationVerifier_$4569_$","typeString":"type(contract IRegistrationVerifier)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2305:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrationVerifier_$4569","typeString":"contract IRegistrationVerifier"}},"src":"2282:67:12","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrationVerifier_$4569","typeString":"contract IRegistrationVerifier"}},"id":1693,"nodeType":"ExpressionStatement","src":"2282:67:12"}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"2081:143:12","text":" @notice Initializes the Registrar contract\n @param registrationVerifier_ Address of the registration verifier contract"},"id":1695,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"registrationVerifier_","nameLocation":"2249:21:12","nodeType":"VariableDeclaration","scope":1695,"src":"2241:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"2241:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2240:31:12"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[],"src":"2272:0:12"},"scope":1928,"src":"2229:127:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1787,"nodeType":"Block","src":"3258:950:12","statements":[{"assignments":[1707],"declarations":[{"constant":false,"id":1707,"mutability":"mutable","name":"input","nameLocation":"3319:5:12","nodeType":"VariableDeclaration","scope":1787,"src":"3301:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5]"},"typeName":{"baseType":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3301:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1706,"length":{"hexValue":"35","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3309:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"3301:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_storage_ptr","typeString":"uint256[5]"}},"visibility":"internal"}],"id":1710,"initialValue":{"expression":{"id":1708,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"3327:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterProof_$5097_calldata_ptr","typeString":"struct RegisterProof calldata"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3333:13:12","memberName":"publicSignals","nodeType":"MemberAccess","referencedDeclaration":5096,"src":"3327:19:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_calldata_ptr","typeString":"uint256[5] calldata"}},"nodeType":"VariableDeclarationStatement","src":"3301:45:12"},{"assignments":[1712],"declarations":[{"constant":false,"id":1712,"mutability":"mutable","name":"account","nameLocation":"3365:7:12","nodeType":"VariableDeclaration","scope":1787,"src":"3357:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"3357:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1722,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":1717,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"3391:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":1719,"indexExpression":{"hexValue":"32","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3397:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3391:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3383:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1715,"name":"uint160","nodeType":"ElementaryTypeName","src":"3383:7:12","typeDescriptions":{}}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3375:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"3375:7:12","typeDescriptions":{}}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3375:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3357:44:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3480:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3484:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3480:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1725,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3494:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3480:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1731,"nodeType":"IfStatement","src":"3476:74:12","trueBody":{"id":1730,"nodeType":"Block","src":"3503:47:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1727,"name":"InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"3524:13:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3524:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1729,"nodeType":"RevertStatement","src":"3517:22:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1732,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3605:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3611:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"3605:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"id":1734,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"3622:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":1736,"indexExpression":{"hexValue":"33","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3628:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3622:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3605:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1742,"nodeType":"IfStatement","src":"3601:79:12","trueBody":{"id":1741,"nodeType":"Block","src":"3632:48:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1738,"name":"InvalidChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"3653:14:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3653:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1740,"nodeType":"RevertStatement","src":"3646:23:12"}]}},{"assignments":[1744],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"registrationHash","nameLocation":"3749:16:12","nodeType":"VariableDeclaration","scope":1787,"src":"3741:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3741:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1748,"initialValue":{"baseExpression":{"id":1745,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"3768:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":1747,"indexExpression":{"hexValue":"34","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3774:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3768:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3741:35:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1749,"name":"registrationHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3790:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1750,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"3810:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3821:1:12","memberName":"Q","nodeType":"MemberAccess","referencedDeclaration":4636,"src":"3810:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3790:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1757,"nodeType":"IfStatement","src":"3786:95:12","trueBody":{"id":1756,"nodeType":"Block","src":"3824:57:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1753,"name":"InvalidRegistrationHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"3845:23:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3845:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1755,"nodeType":"RevertStatement","src":"3838:32:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1758,"name":"isRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"3946:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1760,"indexExpression":{"id":1759,"name":"registrationHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3959:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3946:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":1762,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3997:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1761,"name":"isUserRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3980:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3980:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3946:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1769,"nodeType":"IfStatement","src":"3942:120:12","trueBody":{"id":1768,"nodeType":"Block","src":"4007:55:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1765,"name":"UserAlreadyRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"4028:21:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4028:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1767,"nodeType":"RevertStatement","src":"4021:30:12"}]}},{"expression":{"arguments":[{"id":1771,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"4113:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterProof_$5097_calldata_ptr","typeString":"struct RegisterProof calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RegisterProof_$5097_calldata_ptr","typeString":"struct RegisterProof calldata"}],"id":1770,"name":"_verifyProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"4100:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_RegisterProof_$5097_calldata_ptr_$returns$__$","typeString":"function (struct RegisterProof calldata) view"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4100:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1773,"nodeType":"ExpressionStatement","src":"4100:19:12"},{"expression":{"arguments":[{"id":1775,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"4140:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"baseExpression":{"id":1777,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4159:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":1779,"indexExpression":{"hexValue":"30","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4165:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4159:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1780,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4172:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}},"id":1782,"indexExpression":{"hexValue":"31","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4178:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4172:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1776,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"4149:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4156:1:12","4169:1:12"],"names":["x","y"],"nodeType":"FunctionCall","src":"4149:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":1784,"name":"registrationHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4184:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1774,"name":"_register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"4130:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Point_$5014_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,struct Point memory,uint256)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4130:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1786,"nodeType":"ExpressionStatement","src":"4130:71:12"}]},"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"2531:665:12","text":" @notice Registers a user with their public key\n @param proof The zero-knowledge proof proving the validity of the registration\n @dev This function:\n      1. Verifies the sender matches the account in the proof\n      2. Checks the chain ID matches\n      3. Validates the registration hash\n      4. Verifies the zero-knowledge proof\n      5. Registers the user with their public key\n Requirements:\n - Sender must match the account in the proof\n - Chain ID must match\n - Registration hash must be valid\n - User must not be already registered\n - Proof must be valid"},"functionSelector":"37729b5c","id":1788,"implemented":true,"kind":"function","modifiers":[],"name":"register","nameLocation":"3210:8:12","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"proof","nameLocation":"3242:5:12","nodeType":"VariableDeclaration","scope":1788,"src":"3219:28:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterProof_$5097_calldata_ptr","typeString":"struct RegisterProof"},"typeName":{"id":1698,"nodeType":"UserDefinedTypeName","pathNode":{"id":1697,"name":"RegisterProof","nameLocations":["3219:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":5097,"src":"3219:13:12"},"referencedDeclaration":5097,"src":"3219:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterProof_$5097_storage_ptr","typeString":"struct RegisterProof"}},"visibility":"internal"}],"src":"3218:30:12"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[],"src":"3258:0:12"},"scope":1928,"src":"3201:1007:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1810,"nodeType":"Block","src":"4555:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1796,"name":"userPublicKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"4572:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Point_$5014_storage_$","typeString":"mapping(address => struct Point storage ref)"}},"id":1798,"indexExpression":{"id":1797,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"4587:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4572:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4593:1:12","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"4572:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4598:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4572:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1802,"name":"userPublicKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"4603:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Point_$5014_storage_$","typeString":"mapping(address => struct Point storage ref)"}},"id":1804,"indexExpression":{"id":1803,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"4618:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4603:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4624:1:12","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"4603:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4629:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4603:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4572:58:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1795,"id":1809,"nodeType":"Return","src":"4565:65:12"}]},"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"4214:269:12","text":" @notice Checks if a user is registered\n @param user The address of the user to check\n @return bool True if the user is registered, false otherwise\n @dev A user is considered registered if their public key is not the zero point (0,0)"},"functionSelector":"163f7522","id":1811,"implemented":true,"kind":"function","modifiers":[],"name":"isUserRegistered","nameLocation":"4497:16:12","nodeType":"FunctionDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"user","nameLocation":"4522:4:12","nodeType":"VariableDeclaration","scope":1811,"src":"4514:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"4514:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4513:14:12"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1811,"src":"4549:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1793,"name":"bool","nodeType":"ElementaryTypeName","src":"4549:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4548:6:12"},"scope":1928,"src":"4488:149:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1831,"nodeType":"Block","src":"4991:72:12","statements":[{"expression":{"components":[{"expression":{"baseExpression":{"id":1821,"name":"userPublicKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5009:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Point_$5014_storage_$","typeString":"mapping(address => struct Point storage ref)"}},"id":1823,"indexExpression":{"id":1822,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5024:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5009:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5030:1:12","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"5009:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":1825,"name":"userPublicKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5033:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Point_$5014_storage_$","typeString":"mapping(address => struct Point storage ref)"}},"id":1827,"indexExpression":{"id":1826,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5048:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5033:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5054:1:12","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"5033:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1829,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5008:48:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"functionReturnParameters":1820,"id":1830,"nodeType":"Return","src":"5001:55:12"}]},"documentation":{"id":1812,"nodeType":"StructuredDocumentation","src":"4643:239:12","text":" @notice Gets the public key of a user\n @param user The address of the user\n @return publicKey The public key of the user as a uint256 array\n @dev Returns the x and y coordinates of the user's public key"},"functionSelector":"11231fe0","id":1832,"implemented":true,"kind":"function","modifiers":[],"name":"getUserPublicKey","nameLocation":"4896:16:12","nodeType":"FunctionDefinition","parameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"user","nameLocation":"4930:4:12","nodeType":"VariableDeclaration","scope":1832,"src":"4922:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"4922:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4912:28:12"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"publicKey","nameLocation":"4980:9:12","nodeType":"VariableDeclaration","scope":1832,"src":"4962:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"4962:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1818,"length":{"hexValue":"32","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4970:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"4962:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"4961:29:12"},"scope":1928,"src":"4887:176:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1860,"nodeType":"Block","src":"5735:136:12","statements":[{"expression":{"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1843,"name":"userPublicKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5745:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Point_$5014_storage_$","typeString":"mapping(address => struct Point storage ref)"}},"id":1845,"indexExpression":{"id":1844,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"5760:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5745:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1846,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"5768:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"5745:32:12","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":1848,"nodeType":"ExpressionStatement","src":"5745:32:12"},{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1849,"name":"isRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"5787:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1851,"indexExpression":{"id":1850,"name":"registrationHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5800:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5787:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5820:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5787:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1854,"nodeType":"ExpressionStatement","src":"5787:37:12"},{"eventCall":{"arguments":[{"id":1856,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"5848:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1857,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"5854:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":1855,"name":"Register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"5839:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_struct$_Point_$5014_memory_ptr_$returns$__$","typeString":"function (address,struct Point memory)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5839:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1859,"nodeType":"EmitStatement","src":"5834:30:12"}]},"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"5238:370:12","text":" @notice Registers a user with their public key\n @param user The address of the user\n @param publicKey The public key of the user\n @param registrationHash The registration hash\n @dev This function:\n      1. Sets the user's public key\n      2. Marks the registration hash as used\n      3. Emits a Register event"},"id":1861,"implemented":true,"kind":"function","modifiers":[],"name":"_register","nameLocation":"5622:9:12","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"user","nameLocation":"5649:4:12","nodeType":"VariableDeclaration","scope":1861,"src":"5641:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"publicKey","nameLocation":"5676:9:12","nodeType":"VariableDeclaration","scope":1861,"src":"5663:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":1837,"nodeType":"UserDefinedTypeName","pathNode":{"id":1836,"name":"Point","nameLocations":["5663:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"5663:5:12"},"referencedDeclaration":5014,"src":"5663:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"registrationHash","nameLocation":"5703:16:12","nodeType":"VariableDeclaration","scope":1861,"src":"5695:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"5695:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5631:94:12"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[],"src":"5735:0:12"},"scope":1928,"src":"5613:258:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"6242:492:12","statements":[{"assignments":[1873],"declarations":[{"constant":false,"id":1873,"mutability":"mutable","name":"pointA_","nameLocation":"6270:7:12","nodeType":"VariableDeclaration","scope":1926,"src":"6252:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"6252:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1872,"length":{"hexValue":"32","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6260:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"6252:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":1877,"initialValue":{"expression":{"expression":{"id":1874,"name":"proof_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"6280:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterProof_$5097_calldata_ptr","typeString":"struct RegisterProof calldata"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6287:11:12","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5092,"src":"6280:18:12","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_calldata_ptr","typeString":"struct ProofPoints calldata"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6299:1:12","memberName":"a","nodeType":"MemberAccess","referencedDeclaration":5078,"src":"6280:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}},"nodeType":"VariableDeclarationStatement","src":"6252:48:12"},{"assignments":[1885],"declarations":[{"constant":false,"id":1885,"mutability":"mutable","name":"pointB_","nameLocation":"6331:7:12","nodeType":"VariableDeclaration","scope":1926,"src":"6310:28:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1883,"length":{"hexValue":"32","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6318:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"6310:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":1884,"length":{"hexValue":"32","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6321:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"6310:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"}],"id":1889,"initialValue":{"expression":{"expression":{"id":1886,"name":"proof_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"6341:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterProof_$5097_calldata_ptr","typeString":"struct RegisterProof calldata"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6348:11:12","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5092,"src":"6341:18:12","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_calldata_ptr","typeString":"struct ProofPoints calldata"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:1:12","memberName":"b","nodeType":"MemberAccess","referencedDeclaration":5084,"src":"6341:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","typeString":"uint256[2] calldata[2] calldata"}},"nodeType":"VariableDeclarationStatement","src":"6310:51:12"},{"assignments":[1895],"declarations":[{"constant":false,"id":1895,"mutability":"mutable","name":"pointC_","nameLocation":"6389:7:12","nodeType":"VariableDeclaration","scope":1926,"src":"6371:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"6371:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1894,"length":{"hexValue":"32","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6379:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"6371:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":1899,"initialValue":{"expression":{"expression":{"id":1896,"name":"proof_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"6399:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterProof_$5097_calldata_ptr","typeString":"struct RegisterProof calldata"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:11:12","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5092,"src":"6399:18:12","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_calldata_ptr","typeString":"struct ProofPoints calldata"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6418:1:12","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":5088,"src":"6399:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}},"nodeType":"VariableDeclarationStatement","src":"6371:48:12"},{"assignments":[1905],"declarations":[{"constant":false,"id":1905,"mutability":"mutable","name":"input","nameLocation":"6447:5:12","nodeType":"VariableDeclaration","scope":1926,"src":"6429:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5]"},"typeName":{"baseType":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1904,"length":{"hexValue":"35","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6437:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"6429:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_storage_ptr","typeString":"uint256[5]"}},"visibility":"internal"}],"id":1908,"initialValue":{"expression":{"id":1906,"name":"proof_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"6455:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterProof_$5097_calldata_ptr","typeString":"struct RegisterProof calldata"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6462:13:12","memberName":"publicSignals","nodeType":"MemberAccess","referencedDeclaration":5096,"src":"6455:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_calldata_ptr","typeString":"uint256[5] calldata"}},"nodeType":"VariableDeclarationStatement","src":"6429:46:12"},{"assignments":[1910],"declarations":[{"constant":false,"id":1910,"mutability":"mutable","name":"verified_","nameLocation":"6519:9:12","nodeType":"VariableDeclaration","scope":1926,"src":"6514:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1909,"name":"bool","nodeType":"ElementaryTypeName","src":"6514:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1918,"initialValue":{"arguments":[{"id":1913,"name":"pointA_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"6577:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1914,"name":"pointB_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"6598:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},{"id":1915,"name":"pointC_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"6619:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1916,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"6640:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5] memory"}],"expression":{"id":1911,"name":"registrationVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"6531:20:12","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrationVerifier_$4569","typeString":"contract IRegistrationVerifier"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6552:11:12","memberName":"verifyProof","nodeType":"MemberAccess","referencedDeclaration":4568,"src":"6531:32:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$5_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[5] memory) view external returns (bool)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6531:124:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6514:141:12"},{"condition":{"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6670:10:12","subExpression":{"id":1919,"name":"verified_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"6671:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1925,"nodeType":"IfStatement","src":"6666:62:12","trueBody":{"id":1924,"nodeType":"Block","src":"6682:46:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1921,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"6703:12:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6703:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1923,"nodeType":"RevertStatement","src":"6696:21:12"}]}}]},"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"5877:293:12","text":" @notice Verifies a registration proof\n @param proof_ The proof to verify\n @dev This function:\n      1. Extracts the proof points and public inputs\n      2. Calls the verifier contract to verify the proof\n      3. Reverts if the proof is invalid"},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyProof","nameLocation":"6184:12:12","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"proof_","nameLocation":"6220:6:12","nodeType":"VariableDeclaration","scope":1927,"src":"6197:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterProof_$5097_calldata_ptr","typeString":"struct RegisterProof"},"typeName":{"id":1864,"nodeType":"UserDefinedTypeName","pathNode":{"id":1863,"name":"RegisterProof","nameLocations":["6197:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":5097,"src":"6197:13:12"},"referencedDeclaration":5097,"src":"6197:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterProof_$5097_storage_ptr","typeString":"struct RegisterProof"}},"visibility":"internal"}],"src":"6196:31:12"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[],"src":"6242:0:12"},"scope":1928,"src":"6175:559:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1929,"src":"873:5863:12","usedErrors":[4442,4450,4458,4462,4464],"usedEvents":[1682]}],"src":"134:6603:12"},"id":12},"contracts/core/TokenTracker.sol":{"ast":{"absolutePath":"contracts/core/TokenTracker.sol","exportedSymbols":{"InvalidOperation":[4452],"Ownable":[147],"Ownable2Step":[233],"TokenBlacklisted":[4470],"TokenTracker":[2079]},"id":2080,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":1930,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:13"},{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","file":"@openzeppelin/contracts/access/Ownable2Step.sol","id":1933,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2080,"sourceUnit":234,"src":"159:86:13","symbolAliases":[{"foreign":{"id":1931,"name":"Ownable2Step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"167:12:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1932,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"181:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/errors/Errors.sol","file":"../errors/Errors.sol","id":1936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2080,"sourceUnit":4471,"src":"246:72:13","symbolAliases":[{"foreign":{"id":1934,"name":"TokenBlacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"254:16:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1935,"name":"InvalidOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"272:16:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1938,"name":"Ownable2Step","nameLocations":["803:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":233,"src":"803:12:13"},"id":1939,"nodeType":"InheritanceSpecifier","src":"803:12:13"}],"canonicalName":"TokenTracker","contractDependencies":[],"contractKind":"contract","documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"320:457:13","text":" @title TokenTracker\n @notice Contract for tracking ERC20 tokens in the encrypted ERC system\n @dev This contract manages:\n      1. Token registration and identification\n      2. Token blacklisting for security\n      3. Contract Mode (converter vs standalone)\n The contract can operate in two modes:\n - Converter Mode: Wraps existing ERC20 tokens into encrypted tokens\n - Standalone Mode: Operates as a standalone encrypted token"},"fullyImplemented":true,"id":2079,"linearizedBaseContracts":[2079,233,147,921],"name":"TokenTracker","nameLocation":"787:12:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"991:119:13","text":"@notice The next available token ID\n @dev Token IDs start from 1, with 0 reserved for the standalone version"},"functionSelector":"75794a3c","id":1943,"mutability":"mutable","name":"nextTokenId","nameLocation":"1130:11:13","nodeType":"VariableDeclaration","scope":2079,"src":"1115:30:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1144:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"1152:68:13","text":"@notice Indicates if the contract is operating in converter mode"},"functionSelector":"61832767","id":1946,"mutability":"mutable","name":"isConverter","nameLocation":"1237:11:13","nodeType":"VariableDeclaration","scope":2079,"src":"1225:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1945,"name":"bool","nodeType":"ElementaryTypeName","src":"1225:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"documentation":{"id":1947,"nodeType":"StructuredDocumentation","src":"1255:50:13","text":"@notice Mapping from token address to token ID"},"functionSelector":"fc97a303","id":1951,"mutability":"mutable","name":"tokenIds","nameLocation":"1366:8:13","nodeType":"VariableDeclaration","scope":2079,"src":"1310:64:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1950,"keyName":"tokenAddress","keyNameLocation":"1326:12:13","keyType":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"1318:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1310:48:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"tokenId","valueNameLocation":"1350:7:13","valueType":{"id":1949,"name":"uint256","nodeType":"ElementaryTypeName","src":"1342:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"1381:50:13","text":"@notice Mapping from token ID to token address"},"functionSelector":"e5df8b84","id":1956,"mutability":"mutable","name":"tokenAddresses","nameLocation":"1492:14:13","nodeType":"VariableDeclaration","scope":2079,"src":"1436:70:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1955,"keyName":"tokenId","keyNameLocation":"1452:7:13","keyType":{"id":1953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1444:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1436:48:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"tokenAddress","valueNameLocation":"1471:12:13","valueType":{"id":1954,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"1513:51:13","text":"@notice Array of all registered token addresses"},"functionSelector":"4f64b2be","id":1960,"mutability":"mutable","name":"tokens","nameLocation":"1586:6:13","nodeType":"VariableDeclaration","scope":2079,"src":"1569:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"1569:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1959,"nodeType":"ArrayTypeName","src":"1569:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"1599:47:13","text":"@notice Mapping to track blacklisted tokens"},"functionSelector":"5c8b5f44","id":1965,"mutability":"mutable","name":"blacklistedTokens","nameLocation":"1718:17:13","nodeType":"VariableDeclaration","scope":2079,"src":"1651:84:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1964,"keyName":"tokenAddress","keyNameLocation":"1667:12:13","keyType":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"1659:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1651:51:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"isBlacklisted","valueNameLocation":"1688:13:13","valueType":{"id":1963,"name":"bool","nodeType":"ElementaryTypeName","src":"1683:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":1976,"nodeType":"Block","src":"2095:95:13","statements":[{"condition":{"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2109:12:13","subExpression":{"id":1968,"name":"isConverter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"2110:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1974,"nodeType":"IfStatement","src":"2105:68:13","trueBody":{"id":1973,"nodeType":"Block","src":"2123:50:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1970,"name":"InvalidOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"2144:16:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2144:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1972,"nodeType":"RevertStatement","src":"2137:25:13"}]}},{"id":1975,"nodeType":"PlaceholderStatement","src":"2182:1:13"}]},"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"1911:151:13","text":" @notice Ensures the function is only called in converter mode\n @dev Reverts with InvalidOperation if called in standalone mode"},"id":1977,"name":"onlyForConverter","nameLocation":"2076:16:13","nodeType":"ModifierDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[],"src":"2092:2:13"},"src":"2067:123:13","virtual":false,"visibility":"internal"},{"body":{"id":1987,"nodeType":"Block","src":"2381:94:13","statements":[{"condition":{"id":1980,"name":"isConverter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"2395:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1985,"nodeType":"IfStatement","src":"2391:67:13","trueBody":{"id":1984,"nodeType":"Block","src":"2408:50:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1981,"name":"InvalidOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"2429:16:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1983,"nodeType":"RevertStatement","src":"2422:25:13"}]}},{"id":1986,"nodeType":"PlaceholderStatement","src":"2467:1:13"}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"2196:151:13","text":" @notice Ensures the function is only called in standalone mode\n @dev Reverts with InvalidOperation if called in converter mode"},"id":1988,"name":"onlyForStandalone","nameLocation":"2361:17:13","nodeType":"ModifierDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[],"src":"2378:2:13"},"src":"2352:123:13","virtual":false,"visibility":"internal"},{"body":{"id":2003,"nodeType":"Block","src":"2727:126:13","statements":[{"condition":{"baseExpression":{"id":1993,"name":"blacklistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"2741:17:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1995,"indexExpression":{"id":1994,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"2759:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2741:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2001,"nodeType":"IfStatement","src":"2737:99:13","trueBody":{"id":2000,"nodeType":"Block","src":"2774:62:13","statements":[{"errorCall":{"arguments":[{"id":1997,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"2812:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1996,"name":"TokenBlacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"2795:16:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2795:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1999,"nodeType":"RevertStatement","src":"2788:37:13"}]}},{"id":2002,"nodeType":"PlaceholderStatement","src":"2845:1:13"}]},"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"2481:190:13","text":" @notice Ensures the token is not blacklisted\n @param tokenAddress Address of the token to check\n @dev Reverts with TokenBlacklisted if the token is blacklisted"},"id":2004,"name":"revertIfBlacklisted","nameLocation":"2685:19:13","nodeType":"ModifierDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"tokenAddress","nameLocation":"2713:12:13","nodeType":"VariableDeclaration","scope":2004,"src":"2705:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"2705:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2704:22:13"},"src":"2676:177:13","virtual":false,"visibility":"internal"},{"body":{"id":2018,"nodeType":"Block","src":"3302:43:13","statements":[{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2014,"name":"isConverter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"3312:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2015,"name":"isConverter_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"3326:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3312:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2017,"nodeType":"ExpressionStatement","src":"3312:26:13"}]},"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"3028:218:13","text":" @notice Initializes the TokenTracker contract\n @param isConverter_ Determines if the contract operates in converter mode\n @dev Sets the initial mode of operation and initializes the owner"},"id":2019,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3290:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3294:6:13","memberName":"sender","nodeType":"MemberAccess","src":"3290:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2012,"kind":"baseConstructorSpecifier","modifierName":{"id":2009,"name":"Ownable","nameLocations":["3282:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3282:7:13"},"nodeType":"ModifierInvocation","src":"3282:19:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"isConverter_","nameLocation":"3268:12:13","nodeType":"VariableDeclaration","scope":2019,"src":"3263:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2006,"name":"bool","nodeType":"ElementaryTypeName","src":"3263:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3262:19:13"},"returnParameters":{"id":2013,"nodeType":"ParameterList","parameters":[],"src":"3302:0:13"},"scope":2079,"src":"3251:94:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2035,"nodeType":"Block","src":"3871:55:13","statements":[{"expression":{"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2029,"name":"blacklistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"3881:17:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2031,"indexExpression":{"id":2030,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"3899:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3881:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2032,"name":"blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"3908:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3881:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2034,"nodeType":"ExpressionStatement","src":"3881:38:13"}]},"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"3520:245:13","text":" @notice Sets the blacklist status of a token\n @param token Address of the token to blacklist/unblacklist\n @param blacklisted True to blacklist, false to unblacklist\n @dev Only the owner can call this function"},"functionSelector":"1ff0769a","id":2036,"implemented":true,"kind":"function","modifiers":[{"id":2027,"kind":"modifierInvocation","modifierName":{"id":2026,"name":"onlyOwner","nameLocations":["3861:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3861:9:13"},"nodeType":"ModifierInvocation","src":"3861:9:13"}],"name":"setTokenBlacklist","nameLocation":"3779:17:13","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"token","nameLocation":"3814:5:13","nodeType":"VariableDeclaration","scope":2036,"src":"3806:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"3806:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"blacklisted","nameLocation":"3834:11:13","nodeType":"VariableDeclaration","scope":2036,"src":"3829:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2023,"name":"bool","nodeType":"ElementaryTypeName","src":"3829:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3796:55:13"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"3871:0:13"},"scope":2079,"src":"3770:156:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2045,"nodeType":"Block","src":"4182:30:13","statements":[{"expression":{"id":2043,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"4199:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":2042,"id":2044,"nodeType":"Return","src":"4192:13:13"}]},"documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"3932:183:13","text":" @notice Returns an array of all registered token addresses\n @return Array of token addresses\n @dev Used for enumeration and listing all supported tokens"},"functionSelector":"aa6ca808","id":2046,"implemented":true,"kind":"function","modifiers":[],"name":"getTokens","nameLocation":"4129:9:13","nodeType":"FunctionDefinition","parameters":{"id":2038,"nodeType":"ParameterList","parameters":[],"src":"4138:2:13"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2046,"src":"4164:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2039,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2040,"nodeType":"ArrayTypeName","src":"4164:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4163:18:13"},"scope":2079,"src":"4120:92:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2077,"nodeType":"Block","src":"4756:203:13","statements":[{"assignments":[2053],"declarations":[{"constant":false,"id":2053,"mutability":"mutable","name":"newTokenId","nameLocation":"4774:10:13","nodeType":"VariableDeclaration","scope":2077,"src":"4766:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"4766:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2055,"initialValue":{"id":2054,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"4787:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4766:32:13"},{"expression":{"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2056,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"4808:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2058,"indexExpression":{"id":2057,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"4817:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4808:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2059,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"4833:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4808:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2061,"nodeType":"ExpressionStatement","src":"4808:35:13"},{"expression":{"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2062,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"4853:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2064,"indexExpression":{"id":2063,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"4868:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4853:26:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2065,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"4882:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4853:41:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2067,"nodeType":"ExpressionStatement","src":"4853:41:13"},{"expression":{"arguments":[{"id":2071,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"4916:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2068,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"4904:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4911:4:13","memberName":"push","nodeType":"MemberAccess","src":"4904:11:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4904:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2073,"nodeType":"ExpressionStatement","src":"4904:25:13"},{"expression":{"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4939:13:13","subExpression":{"id":2074,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"4939:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2076,"nodeType":"ExpressionStatement","src":"4939:13:13"}]},"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"4387:314:13","text":" @notice Adds a new token to the tracker\n @param tokenAddress Address of the token to add\n @dev This function:\n      1. Assigns a new token ID\n      2. Updates the token mappings\n      3. Adds the token to the tokens array\n      4. Increments the next token ID"},"id":2078,"implemented":true,"kind":"function","modifiers":[],"name":"_addToken","nameLocation":"4715:9:13","nodeType":"FunctionDefinition","parameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"tokenAddress","nameLocation":"4733:12:13","nodeType":"VariableDeclaration","scope":2078,"src":"4725:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2048,"name":"address","nodeType":"ElementaryTypeName","src":"4725:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4724:22:13"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"4756:0:13"},"scope":2079,"src":"4706:253:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2080,"src":"778:4183:13","usedErrors":[13,18],"usedEvents":[24,162]}],"src":"134:4828:13"},"id":13},"contracts/core/UniversalEncryptedERC.sol":{"ast":{"absolutePath":"contracts/core/UniversalEncryptedERC.sol","exportedSymbols":{"AmountPCT":[5040],"AuditorManager":[1054],"BabyJubJub":[5007],"BurnProof":[5121],"CreateEncryptedERCParams":[5033],"EGCT":[5073],"EncryptedBalance":[5061],"EncryptedUserBalances":[1643],"IBurnVerifier":[4517],"IERC20":[401],"IERC20Metadata":[427],"IMintVerifier":[4543],"IRegistrar":[4491],"ITransferVerifier":[4595],"IWithdrawVerifier":[4621],"InvalidChainId":[4458],"InvalidNullifier":[4460],"InvalidProof":[4450],"MintProof":[5105],"Point":[5014],"SafeERC20":[891],"TokenTracker":[2079],"TransferFailed":[4454],"TransferInputs":[5143],"TransferProof":[5113],"UniversalEncryptedERC":[4438],"UnknownToken":[4456],"UserNotRegistered":[4444],"WithdrawProof":[5129],"ZeroAddress":[4466]},"id":4439,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2081,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"contracts/core/TokenTracker.sol","file":"./TokenTracker.sol","id":2083,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":2080,"src":"70:48:14","symbolAliases":[{"foreign":{"id":2082,"name":"TokenTracker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"78:12:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/core/EncryptedUserBalances.sol","file":"./EncryptedUserBalances.sol","id":2085,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":1644,"src":"119:66:14","symbolAliases":[{"foreign":{"id":2084,"name":"EncryptedUserBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"127:21:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/core/AuditorManager.sol","file":"./AuditorManager.sol","id":2087,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":1055,"src":"186:52:14","symbolAliases":[{"foreign":{"id":2086,"name":"AuditorManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"194:14:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/BabyJubJub.sol","file":"../libraries/BabyJubJub.sol","id":2089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":5008,"src":"253:55:14","symbolAliases":[{"foreign":{"id":2088,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"261:10:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2091,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":892,"src":"309:82:14","symbolAliases":[{"foreign":{"id":2090,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"317:9:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/types/Types.sol","file":"../types/Types.sol","id":2102,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":5144,"src":"402:170:14","symbolAliases":[{"foreign":{"id":2092,"name":"CreateEncryptedERCParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"410:24:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2093,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"436:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2094,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"443:4:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2095,"name":"EncryptedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"449:16:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2096,"name":"AmountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"467:9:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2097,"name":"MintProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"478:9:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2098,"name":"TransferProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"489:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2099,"name":"WithdrawProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"504:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2100,"name":"BurnProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"519:9:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2101,"name":"TransferInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"530:14:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/errors/Errors.sol","file":"../errors/Errors.sol","id":2110,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":4471,"src":"584:146:14","symbolAliases":[{"foreign":{"id":2103,"name":"UserNotRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"592:17:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2104,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"611:12:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2105,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"625:14:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2106,"name":"UnknownToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"641:12:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2107,"name":"InvalidChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"655:14:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2108,"name":"InvalidNullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"671:16:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2109,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"689:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRegistrar.sol","file":"../interfaces/IRegistrar.sol","id":2112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":4492,"src":"746:56:14","symbolAliases":[{"foreign":{"id":2111,"name":"IRegistrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"754:10:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/verifiers/IMintVerifier.sol","file":"../interfaces/verifiers/IMintVerifier.sol","id":2114,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":4544,"src":"803:72:14","symbolAliases":[{"foreign":{"id":2113,"name":"IMintVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"811:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/verifiers/IWithdrawVerifier.sol","file":"../interfaces/verifiers/IWithdrawVerifier.sol","id":2116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":4622,"src":"876:80:14","symbolAliases":[{"foreign":{"id":2115,"name":"IWithdrawVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"884:17:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/verifiers/ITransferVerifier.sol","file":"../interfaces/verifiers/ITransferVerifier.sol","id":2118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":4596,"src":"957:80:14","symbolAliases":[{"foreign":{"id":2117,"name":"ITransferVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"965:17:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/verifiers/IBurnVerifier.sol","file":"../interfaces/verifiers/IBurnVerifier.sol","id":2120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":4518,"src":"1038:72:14","symbolAliases":[{"foreign":{"id":2119,"name":"IBurnVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"1046:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2122,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":402,"src":"1111:70:14","symbolAliases":[{"foreign":{"id":2121,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"1119:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":2124,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4439,"sourceUnit":428,"src":"1182:97:14","symbolAliases":[{"foreign":{"id":2123,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"1190:14:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2126,"name":"TokenTracker","nameLocations":["2874:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2079,"src":"2874:12:14"},"id":2127,"nodeType":"InheritanceSpecifier","src":"2874:12:14"},{"baseName":{"id":2128,"name":"EncryptedUserBalances","nameLocations":["2888:21:14"],"nodeType":"IdentifierPath","referencedDeclaration":1643,"src":"2888:21:14"},"id":2129,"nodeType":"InheritanceSpecifier","src":"2888:21:14"},{"baseName":{"id":2130,"name":"AuditorManager","nameLocations":["2911:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":1054,"src":"2911:14:14"},"id":2131,"nodeType":"InheritanceSpecifier","src":"2911:14:14"}],"canonicalName":"UniversalEncryptedERC","contractDependencies":[],"contractKind":"contract","documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"1597:1242:14","text":" @title UniversalEncryptedERC\n @notice A universal privacy-preserving ERC20 token implementation that uses zero-knowledge proofs for managing balances in encrypted manner.\n @dev This contract implements Encrypted ERC operations using zero-knowledge proofs with support for:\n      - ERC20 tokens\n      - Native tokens (ETH, AVAX, etc.)\n      - Multi-chain deployment\n      - Universal token standard\n Key features:\n - Encrypted ERC has 2 modes:\n   - Standalone Mode: Act like a standalone ERC20 token (mint, burn, transfer)\n   - Converter Mode: Wraps existing ERC20 tokens and encrypted ERC20 tokens (deposit, withdraw, transfer)\n - Universal Token Support: Handles both ERC20 and native tokens\n - Multi-chain Support: Deployable on any EVM chain\n - Auditor Manager: Manages auditor's public key\n - Token Tracker: Manages ERC20 token registration for deposit and withdrawal\n - Encrypted User Balances: Manages encrypted balances for users in encrypted manner\n The contract uses three main components:\n 1. TokenTracker: Manages token registration and tracking\n 2. EncryptedUserBalances: Handles encrypted balance storage and updates\n 3. AuditorManager: Manages auditor-related functionality"},"fullyImplemented":true,"id":4438,"linearizedBaseContracts":[4438,1054,1643,2079,233,147,921],"name":"UniversalEncryptedERC","nameLocation":"2849:21:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":2132,"nodeType":"StructuredDocumentation","src":"3101:76:14","text":"@notice Address of the registrar contract that manages user registration"},"functionSelector":"2b20e397","id":2135,"mutability":"mutable","name":"registrar","nameLocation":"3200:9:14","nodeType":"VariableDeclaration","scope":4438,"src":"3182:27:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrar_$4491","typeString":"contract IRegistrar"},"typeName":{"id":2134,"nodeType":"UserDefinedTypeName","pathNode":{"id":2133,"name":"IRegistrar","nameLocations":["3182:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":4491,"src":"3182:10:14"},"referencedDeclaration":4491,"src":"3182:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrar_$4491","typeString":"contract IRegistrar"}},"visibility":"public"},{"constant":false,"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"3216:49:14","text":"@notice Verifier contracts for each operation"},"functionSelector":"00b0938d","id":2139,"mutability":"mutable","name":"mintVerifier","nameLocation":"3291:12:14","nodeType":"VariableDeclaration","scope":4438,"src":"3270:33:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IMintVerifier_$4543","typeString":"contract IMintVerifier"},"typeName":{"id":2138,"nodeType":"UserDefinedTypeName","pathNode":{"id":2137,"name":"IMintVerifier","nameLocations":["3270:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":4543,"src":"3270:13:14"},"referencedDeclaration":4543,"src":"3270:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IMintVerifier_$4543","typeString":"contract IMintVerifier"}},"visibility":"public"},{"constant":false,"functionSelector":"864eb164","id":2142,"mutability":"mutable","name":"withdrawVerifier","nameLocation":"3334:16:14","nodeType":"VariableDeclaration","scope":4438,"src":"3309:41:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$4621","typeString":"contract IWithdrawVerifier"},"typeName":{"id":2141,"nodeType":"UserDefinedTypeName","pathNode":{"id":2140,"name":"IWithdrawVerifier","nameLocations":["3309:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":4621,"src":"3309:17:14"},"referencedDeclaration":4621,"src":"3309:17:14","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$4621","typeString":"contract IWithdrawVerifier"}},"visibility":"public"},{"constant":false,"functionSelector":"8daed528","id":2145,"mutability":"mutable","name":"transferVerifier","nameLocation":"3381:16:14","nodeType":"VariableDeclaration","scope":4438,"src":"3356:41:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferVerifier_$4595","typeString":"contract ITransferVerifier"},"typeName":{"id":2144,"nodeType":"UserDefinedTypeName","pathNode":{"id":2143,"name":"ITransferVerifier","nameLocations":["3356:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":4595,"src":"3356:17:14"},"referencedDeclaration":4595,"src":"3356:17:14","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferVerifier_$4595","typeString":"contract ITransferVerifier"}},"visibility":"public"},{"constant":false,"functionSelector":"c3a716eb","id":2148,"mutability":"mutable","name":"burnVerifier","nameLocation":"3424:12:14","nodeType":"VariableDeclaration","scope":4438,"src":"3403:33:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBurnVerifier_$4517","typeString":"contract IBurnVerifier"},"typeName":{"id":2147,"nodeType":"UserDefinedTypeName","pathNode":{"id":2146,"name":"IBurnVerifier","nameLocations":["3403:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":4517,"src":"3403:13:14"},"referencedDeclaration":4517,"src":"3403:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBurnVerifier_$4517","typeString":"contract IBurnVerifier"}},"visibility":"public"},{"constant":false,"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"3443:26:14","text":"@notice Token metadata"},"functionSelector":"06fdde03","id":2151,"mutability":"mutable","name":"name","nameLocation":"3488:4:14","nodeType":"VariableDeclaration","scope":4438,"src":"3474:18:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2150,"name":"string","nodeType":"ElementaryTypeName","src":"3474:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":2153,"mutability":"mutable","name":"symbol","nameLocation":"3512:6:14","nodeType":"VariableDeclaration","scope":4438,"src":"3498:20:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2152,"name":"string","nodeType":"ElementaryTypeName","src":"3498:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":2155,"mutability":"immutable","name":"decimals","nameLocation":"3547:8:14","nodeType":"VariableDeclaration","scope":4438,"src":"3524:31:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2154,"name":"uint8","nodeType":"ElementaryTypeName","src":"3524:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"3562:75:14","text":"@notice Mapping to track used mint nullifiers to prevent double-minting"},"functionSelector":"b7365f1f","id":2160,"mutability":"mutable","name":"alreadyMinted","nameLocation":"3695:13:14","nodeType":"VariableDeclaration","scope":4438,"src":"3642:66:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":2159,"keyName":"mintNullifier","keyNameLocation":"3658:13:14","keyType":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"3650:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3642:45:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"isUsed","valueNameLocation":"3680:6:14","valueType":{"id":2158,"name":"bool","nodeType":"ElementaryTypeName","src":"3675:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"3715:50:14","text":"@notice Mapping to track supported token types"},"functionSelector":"b39f252d","id":2166,"mutability":"mutable","name":"tokenTypes","nameLocation":"3807:10:14","nodeType":"VariableDeclaration","scope":4438,"src":"3770:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TokenType_$2176_$","typeString":"mapping(address => enum UniversalEncryptedERC.TokenType)"},"typeName":{"id":2165,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"3778:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3770:29:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TokenType_$2176_$","typeString":"mapping(address => enum UniversalEncryptedERC.TokenType)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2164,"nodeType":"UserDefinedTypeName","pathNode":{"id":2163,"name":"TokenType","nameLocations":["3789:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2176,"src":"3789:9:14"},"referencedDeclaration":2176,"src":"3789:9:14","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}}},"visibility":"public"},{"constant":false,"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"3828:50:14","text":"@notice Mapping to track native token balances"},"functionSelector":"95ad89e6","id":2171,"mutability":"mutable","name":"nativeBalances","nameLocation":"3918:14:14","nodeType":"VariableDeclaration","scope":4438,"src":"3883:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2170,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2168,"name":"address","nodeType":"ElementaryTypeName","src":"3891:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3883:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"canonicalName":"UniversalEncryptedERC.TokenType","documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"3939:42:14","text":"@notice Enum for different token types"},"id":2176,"members":[{"id":2173,"name":"ERC20","nameLocation":"4003:5:14","nodeType":"EnumValue","src":"4003:5:14"},{"id":2174,"name":"NATIVE","nameLocation":"4010:6:14","nodeType":"EnumValue","src":"4010:6:14"},{"id":2175,"name":"UNSUPPORTED","nameLocation":"4018:11:14","nodeType":"EnumValue","src":"4018:11:14"}],"name":"TokenType","nameLocation":"3991:9:14","nodeType":"EnumDefinition","src":"3986:45:14"},{"anonymous":false,"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"4206:335:14","text":" @notice Emitted when a private mint operation occurs\n @param user Address of the user receiving the minted tokens\n @param auditorPCT Auditor PCT values for compliance tracking\n @param auditorAddress Address of the auditor\n @dev This event is emitted when tokens are privately minted to a user"},"eventSelector":"0d78494055b7f1585d1e50d778838efd294162edeaf41569996739183722254b","id":2187,"name":"PrivateMint","nameLocation":"4552:11:14","nodeType":"EventDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4589:4:14","nodeType":"VariableDeclaration","scope":2187,"src":"4573:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"4573:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2183,"indexed":false,"mutability":"mutable","name":"auditorPCT","nameLocation":"4614:10:14","nodeType":"VariableDeclaration","scope":2187,"src":"4603:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"4603:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2182,"length":{"hexValue":"37","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4611:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"4603:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"},{"constant":false,"id":2185,"indexed":true,"mutability":"mutable","name":"auditorAddress","nameLocation":"4650:14:14","nodeType":"VariableDeclaration","scope":2187,"src":"4634:30:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2184,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4563:107:14"},"src":"4546:125:14"},{"anonymous":false,"documentation":{"id":2188,"nodeType":"StructuredDocumentation","src":"4677:326:14","text":" @notice Emitted when a private burn operation occurs\n @param user Address of the user burning the tokens\n @param auditorPCT Auditor PCT values for compliance tracking\n @param auditorAddress Address of the auditor\n @dev This event is emitted when tokens are privately burned by a user"},"eventSelector":"047fabd75c92ead101dbbb10dd37a09c205f633da9db8ce7078c2f33e84710e5","id":2198,"name":"PrivateBurn","nameLocation":"5014:11:14","nodeType":"EventDefinition","parameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5051:4:14","nodeType":"VariableDeclaration","scope":2198,"src":"5035:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2189,"name":"address","nodeType":"ElementaryTypeName","src":"5035:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2194,"indexed":false,"mutability":"mutable","name":"auditorPCT","nameLocation":"5076:10:14","nodeType":"VariableDeclaration","scope":2198,"src":"5065:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5065:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2193,"length":{"hexValue":"37","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5073:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"5065:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"},{"constant":false,"id":2196,"indexed":true,"mutability":"mutable","name":"auditorAddress","nameLocation":"5112:14:14","nodeType":"VariableDeclaration","scope":2198,"src":"5096:30:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"5096:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5025:107:14"},"src":"5008:125:14"},{"anonymous":false,"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"5139:363:14","text":" @notice Emitted when a private transfer operation occurs\n @param from Address of the sender\n @param to Address of the receiver\n @param auditorPCT Auditor PCT values for compliance tracking\n @param auditorAddress Address of the auditor\n @dev This event is emitted when tokens are privately transferred between users"},"eventSelector":"1fe42c57a12ee7d4848276c111f82c24fe213a94a603b21da88785cd882c9ccf","id":2211,"name":"PrivateTransfer","nameLocation":"5513:15:14","nodeType":"EventDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"5554:4:14","nodeType":"VariableDeclaration","scope":2211,"src":"5538:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"5538:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2203,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"5584:2:14","nodeType":"VariableDeclaration","scope":2211,"src":"5568:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2207,"indexed":false,"mutability":"mutable","name":"auditorPCT","nameLocation":"5607:10:14","nodeType":"VariableDeclaration","scope":2211,"src":"5596:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":2204,"name":"uint256","nodeType":"ElementaryTypeName","src":"5596:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2206,"length":{"hexValue":"37","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5604:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"5596:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"},{"constant":false,"id":2209,"indexed":true,"mutability":"mutable","name":"auditorAddress","nameLocation":"5643:14:14","nodeType":"VariableDeclaration","scope":2211,"src":"5627:30:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"5627:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5528:135:14"},"src":"5507:157:14"},{"anonymous":false,"documentation":{"id":2212,"nodeType":"StructuredDocumentation","src":"5670:423:14","text":" @notice Emitted when a deposit operation occurs\n @param user Address of the user making the deposit\n @param amount Amount of tokens deposited\n @param dust Amount of dust (remainder) from the deposit\n @param tokenId ID of the token being deposited\n @param tokenType Type of token being deposited\n @dev This event is emitted when a user deposits tokens into the contract"},"eventSelector":"d3b8abedf9b219788ce9c4431056d7d4b83973b9f7072ac174e1fe2479d1a2e7","id":2225,"name":"Deposit","nameLocation":"6104:7:14","nodeType":"EventDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"6137:4:14","nodeType":"VariableDeclaration","scope":2225,"src":"6121:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2213,"name":"address","nodeType":"ElementaryTypeName","src":"6121:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2216,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6159:6:14","nodeType":"VariableDeclaration","scope":2225,"src":"6151:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"6151:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2218,"indexed":false,"mutability":"mutable","name":"dust","nameLocation":"6183:4:14","nodeType":"VariableDeclaration","scope":2225,"src":"6175:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"6175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2220,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"6205:7:14","nodeType":"VariableDeclaration","scope":2225,"src":"6197:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"6197:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2223,"indexed":false,"mutability":"mutable","name":"tokenType","nameLocation":"6232:9:14","nodeType":"VariableDeclaration","scope":2225,"src":"6222:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"},"typeName":{"id":2222,"nodeType":"UserDefinedTypeName","pathNode":{"id":2221,"name":"TokenType","nameLocations":["6222:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2176,"src":"6222:9:14"},"referencedDeclaration":2176,"src":"6222:9:14","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}},"visibility":"internal"}],"src":"6111:136:14"},"src":"6098:150:14"},{"anonymous":false,"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"6254:433:14","text":" @notice Emitted when a withdrawal operation occurs\n @param user Address of the user making the withdrawal\n @param amount Amount of tokens withdrawn\n @param tokenId ID of the token being withdrawn\n @param auditorPCT Auditor PCT values for compliance tracking\n @param auditorAddress Address of the auditor\n @dev This event is emitted when a user withdraws tokens from the contract"},"eventSelector":"ae09dce9b789cf9600e6765940d134d8247429396faf72db0f7b33ed5ca8294c","id":2240,"name":"Withdraw","nameLocation":"6698:8:14","nodeType":"EventDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"6732:4:14","nodeType":"VariableDeclaration","scope":2240,"src":"6716:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"6716:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2230,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6754:6:14","nodeType":"VariableDeclaration","scope":2240,"src":"6746:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"6746:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2232,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"6778:7:14","nodeType":"VariableDeclaration","scope":2240,"src":"6770:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2231,"name":"uint256","nodeType":"ElementaryTypeName","src":"6770:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2236,"indexed":false,"mutability":"mutable","name":"auditorPCT","nameLocation":"6806:10:14","nodeType":"VariableDeclaration","scope":2240,"src":"6795:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"6795:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2235,"length":{"hexValue":"37","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6803:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"6795:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"},{"constant":false,"id":2238,"indexed":true,"mutability":"mutable","name":"auditorAddress","nameLocation":"6842:14:14","nodeType":"VariableDeclaration","scope":2240,"src":"6826:30:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"6826:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6706:156:14"},"src":"6692:171:14"},{"anonymous":false,"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"6869:323:14","text":" @notice Emitted when a native token deposit occurs\n @param user Address of the user making the deposit\n @param amount Amount of native tokens deposited\n @param tokenId ID of the token being deposited\n @dev This event is emitted when a user deposits native tokens into the contract"},"eventSelector":"2d45cf213b0878e6582a0bddc676c202f8f57ed3cd74e8ccf8955ce1359bd427","id":2249,"name":"NativeDeposit","nameLocation":"7203:13:14","nodeType":"EventDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"7242:4:14","nodeType":"VariableDeclaration","scope":2249,"src":"7226:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"7226:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2245,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"7264:6:14","nodeType":"VariableDeclaration","scope":2249,"src":"7256:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"7256:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2247,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"7288:7:14","nodeType":"VariableDeclaration","scope":2249,"src":"7280:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7216:85:14"},"src":"7197:105:14"},{"anonymous":false,"documentation":{"id":2250,"nodeType":"StructuredDocumentation","src":"7308:330:14","text":" @notice Emitted when a native token withdrawal occurs\n @param user Address of the user making the withdrawal\n @param amount Amount of native tokens withdrawn\n @param tokenId ID of the token being withdrawn\n @dev This event is emitted when a user withdraws native tokens from the contract"},"eventSelector":"02a25615d4309b997a752e7e0e81a331709124ed95ead4d561a1cd277785b541","id":2258,"name":"NativeWithdraw","nameLocation":"7649:14:14","nodeType":"EventDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"7689:4:14","nodeType":"VariableDeclaration","scope":2258,"src":"7673:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"7673:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2254,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"7711:6:14","nodeType":"VariableDeclaration","scope":2258,"src":"7703:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"7703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2256,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"7735:7:14","nodeType":"VariableDeclaration","scope":2258,"src":"7727:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2255,"name":"uint256","nodeType":"ElementaryTypeName","src":"7727:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7663:85:14"},"src":"7643:106:14"},{"body":{"id":2278,"nodeType":"Block","src":"7967:159:14","statements":[{"assignments":[2264],"declarations":[{"constant":false,"id":2264,"mutability":"mutable","name":"isRegistered","nameLocation":"7982:12:14","nodeType":"VariableDeclaration","scope":2278,"src":"7977:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2263,"name":"bool","nodeType":"ElementaryTypeName","src":"7977:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2269,"initialValue":{"arguments":[{"id":2267,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"8024:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2265,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"7997:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrar_$4491","typeString":"contract IRegistrar"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8007:16:14","memberName":"isUserRegistered","nodeType":"MemberAccess","referencedDeclaration":4490,"src":"7997:26:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7997:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7977:52:14"},{"condition":{"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8043:13:14","subExpression":{"id":2270,"name":"isRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"8044:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2276,"nodeType":"IfStatement","src":"8039:70:14","trueBody":{"id":2275,"nodeType":"Block","src":"8058:51:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2272,"name":"UserNotRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"8079:17:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2274,"nodeType":"RevertStatement","src":"8072:26:14"}]}},{"id":2277,"nodeType":"PlaceholderStatement","src":"8118:1:14"}]},"documentation":{"id":2259,"nodeType":"StructuredDocumentation","src":"7811:51:14","text":"Modifiers                 ///"},"id":2279,"name":"onlyIfUserRegistered","nameLocation":"7932:20:14","nodeType":"ModifierDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"user","nameLocation":"7961:4:14","nodeType":"VariableDeclaration","scope":2279,"src":"7953:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"7953:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7952:14:14"},"src":"7923:203:14","virtual":false,"visibility":"internal"},{"body":{"id":2399,"nodeType":"Block","src":"8813:1051:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2290,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"8879:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8886:9:14","memberName":"registrar","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"8879:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8907:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8899:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2292,"name":"address","nodeType":"ElementaryTypeName","src":"8899:7:14","typeDescriptions":{}}},"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8899:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8879:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2297,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"8925:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8932:12:14","memberName":"mintVerifier","nodeType":"MemberAccess","referencedDeclaration":5026,"src":"8925:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8948:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"8948:7:14","typeDescriptions":{}}},"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8948:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8925:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8879:79:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2305,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"8974:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8981:16:14","memberName":"withdrawVerifier","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"8974:23:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2307,"name":"address","nodeType":"ElementaryTypeName","src":"9001:7:14","typeDescriptions":{}}},"id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8974:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8879:132:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2313,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"9027:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9034:16:14","memberName":"transferVerifier","nodeType":"MemberAccess","referencedDeclaration":5030,"src":"9027:23:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9062:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9054:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2315,"name":"address","nodeType":"ElementaryTypeName","src":"9054:7:14","typeDescriptions":{}}},"id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9054:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9027:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8879:185:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2321,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"9080:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9087:12:14","memberName":"burnVerifier","nodeType":"MemberAccess","referencedDeclaration":5032,"src":"9080:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9111:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9103:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"9103:7:14","typeDescriptions":{}}},"id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9103:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9080:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8879:234:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2333,"nodeType":"IfStatement","src":"8862:307:14","trueBody":{"id":2332,"nodeType":"Block","src":"9124:45:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2329,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"9145:11:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9145:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2331,"nodeType":"RevertStatement","src":"9138:20:14"}]}},{"expression":{"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2334,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"9211:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrar_$4491","typeString":"contract IRegistrar"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2336,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"9234:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9241:9:14","memberName":"registrar","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"9234:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2335,"name":"IRegistrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"9223:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRegistrar_$4491_$","typeString":"type(contract IRegistrar)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9223:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrar_$4491","typeString":"contract IRegistrar"}},"src":"9211:40:14","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrar_$4491","typeString":"contract IRegistrar"}},"id":2340,"nodeType":"ExpressionStatement","src":"9211:40:14"},{"expression":{"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2341,"name":"mintVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"9261:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_IMintVerifier_$4543","typeString":"contract IMintVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2343,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"9290:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9297:12:14","memberName":"mintVerifier","nodeType":"MemberAccess","referencedDeclaration":5026,"src":"9290:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2342,"name":"IMintVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"9276:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMintVerifier_$4543_$","typeString":"type(contract IMintVerifier)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9276:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMintVerifier_$4543","typeString":"contract IMintVerifier"}},"src":"9261:49:14","typeDescriptions":{"typeIdentifier":"t_contract$_IMintVerifier_$4543","typeString":"contract IMintVerifier"}},"id":2347,"nodeType":"ExpressionStatement","src":"9261:49:14"},{"expression":{"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2348,"name":"withdrawVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"9320:16:14","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$4621","typeString":"contract IWithdrawVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2350,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"9357:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9364:16:14","memberName":"withdrawVerifier","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"9357:23:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2349,"name":"IWithdrawVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"9339:17:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWithdrawVerifier_$4621_$","typeString":"type(contract IWithdrawVerifier)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9339:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$4621","typeString":"contract IWithdrawVerifier"}},"src":"9320:61:14","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$4621","typeString":"contract IWithdrawVerifier"}},"id":2354,"nodeType":"ExpressionStatement","src":"9320:61:14"},{"expression":{"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2355,"name":"transferVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"9391:16:14","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferVerifier_$4595","typeString":"contract ITransferVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2357,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"9428:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9435:16:14","memberName":"transferVerifier","nodeType":"MemberAccess","referencedDeclaration":5030,"src":"9428:23:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2356,"name":"ITransferVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"9410:17:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITransferVerifier_$4595_$","typeString":"type(contract ITransferVerifier)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9410:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITransferVerifier_$4595","typeString":"contract ITransferVerifier"}},"src":"9391:61:14","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferVerifier_$4595","typeString":"contract ITransferVerifier"}},"id":2361,"nodeType":"ExpressionStatement","src":"9391:61:14"},{"expression":{"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2362,"name":"burnVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"9462:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBurnVerifier_$4517","typeString":"contract IBurnVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2364,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"9491:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9498:12:14","memberName":"burnVerifier","nodeType":"MemberAccess","referencedDeclaration":5032,"src":"9491:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2363,"name":"IBurnVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"9477:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBurnVerifier_$4517_$","typeString":"type(contract IBurnVerifier)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9477:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBurnVerifier_$4517","typeString":"contract IBurnVerifier"}},"src":"9462:49:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBurnVerifier_$4517","typeString":"contract IBurnVerifier"}},"id":2368,"nodeType":"ExpressionStatement","src":"9462:49:14"},{"condition":{"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9598:19:14","subExpression":{"expression":{"id":2369,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"9599:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9606:11:14","memberName":"isConverter","nodeType":"MemberAccess","referencedDeclaration":5018,"src":"9599:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2383,"nodeType":"IfStatement","src":"9594:104:14","trueBody":{"id":2382,"nodeType":"Block","src":"9619:79:14","statements":[{"expression":{"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2372,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"9633:4:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2373,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"9640:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9647:4:14","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":5020,"src":"9640:11:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"9633:18:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2376,"nodeType":"ExpressionStatement","src":"9633:18:14"},{"expression":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2377,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"9665:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2378,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"9674:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9681:6:14","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":5022,"src":"9674:13:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"9665:22:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2381,"nodeType":"ExpressionStatement","src":"9665:22:14"}]}},{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2384,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"9708:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2385,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"9719:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9726:8:14","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":5024,"src":"9719:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9708:26:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2388,"nodeType":"ExpressionStatement","src":"9708:26:14"},{"expression":{"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2389,"name":"tokenTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"9816:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TokenType_$2176_$","typeString":"mapping(address => enum UniversalEncryptedERC.TokenType)"}},"id":2394,"indexExpression":{"arguments":[{"hexValue":"30","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9835:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9827:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2390,"name":"address","nodeType":"ElementaryTypeName","src":"9827:7:14","typeDescriptions":{}}},"id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9827:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9816:22:14","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2395,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9841:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$2176_$","typeString":"type(enum UniversalEncryptedERC.TokenType)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9851:6:14","memberName":"NATIVE","nodeType":"MemberAccess","referencedDeclaration":2174,"src":"9841:16:14","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}},"src":"9816:41:14","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}},"id":2398,"nodeType":"ExpressionStatement","src":"9816:41:14"}]},"documentation":{"id":2280,"nodeType":"StructuredDocumentation","src":"8301:408:14","text":" @notice Initializes the UniversalEncryptedERC contract with the given parameters\n @param params The initialization parameters containing contract addresses and token metadata\n @dev This constructor sets up the contract with necessary verifiers, registrar, and token metadata.\n      It also determines whether the contract will function as a converter or standalone token."},"id":2400,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2286,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"8793:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams memory"}},"id":2287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8800:11:14","memberName":"isConverter","nodeType":"MemberAccess","referencedDeclaration":5018,"src":"8793:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2288,"kind":"baseConstructorSpecifier","modifierName":{"id":2285,"name":"TokenTracker","nameLocations":["8780:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2079,"src":"8780:12:14"},"nodeType":"ModifierInvocation","src":"8780:32:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"params","nameLocation":"8767:6:14","nodeType":"VariableDeclaration","scope":2400,"src":"8735:38:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_memory_ptr","typeString":"struct CreateEncryptedERCParams"},"typeName":{"id":2282,"nodeType":"UserDefinedTypeName","pathNode":{"id":2281,"name":"CreateEncryptedERCParams","nameLocations":["8735:24:14"],"nodeType":"IdentifierPath","referencedDeclaration":5033,"src":"8735:24:14"},"referencedDeclaration":5033,"src":"8735:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_CreateEncryptedERCParams_$5033_storage_ptr","typeString":"struct CreateEncryptedERCParams"}},"visibility":"internal"}],"src":"8725:54:14"},"returnParameters":{"id":2289,"nodeType":"ParameterList","parameters":[],"src":"8813:0:14"},"scope":4438,"src":"8714:1150:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2427,"nodeType":"Block","src":"10556:122:14","statements":[{"assignments":[2416],"declarations":[{"constant":false,"id":2416,"mutability":"mutable","name":"publicKey_","nameLocation":"10584:10:14","nodeType":"VariableDeclaration","scope":2427,"src":"10566:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"10566:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2415,"length":{"hexValue":"32","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10574:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"10566:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":2421,"initialValue":{"arguments":[{"id":2419,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"10624:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2417,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"10597:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrar_$4491","typeString":"contract IRegistrar"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10607:16:14","memberName":"getUserPublicKey","nodeType":"MemberAccess","referencedDeclaration":4482,"src":"10597:26:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (address) view external returns (uint256[2] memory)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10597:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"VariableDeclarationStatement","src":"10566:63:14"},{"expression":{"arguments":[{"id":2423,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"10654:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2424,"name":"publicKey_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"10660:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2422,"name":"_updateAuditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"10639:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$__$","typeString":"function (address,uint256[2] memory)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10639:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2426,"nodeType":"ExpressionStatement","src":"10639:32:14"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"10039:409:14","text":" @notice Sets the auditor's public key for a registered user\n @param user Address of the user to set as auditor\n @dev This function:\n      1. Verifies the user is registered\n      2. Retrieves the user's public key\n      3. Updates the auditor's information\n Requirements:\n - Caller must be the contract owner\n - User must be registered"},"functionSelector":"13a4f0db","id":2428,"implemented":true,"kind":"function","modifiers":[{"id":2406,"kind":"modifierInvocation","modifierName":{"id":2405,"name":"onlyOwner","nameLocations":["10519:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10519:9:14"},"nodeType":"ModifierInvocation","src":"10519:9:14"},{"arguments":[{"id":2408,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"10550:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2409,"kind":"modifierInvocation","modifierName":{"id":2407,"name":"onlyIfUserRegistered","nameLocations":["10529:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":2279,"src":"10529:20:14"},"nodeType":"ModifierInvocation","src":"10529:26:14"}],"name":"setAuditorPublicKey","nameLocation":"10462:19:14","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"user","nameLocation":"10499:4:14","nodeType":"VariableDeclaration","scope":2428,"src":"10491:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"10491:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10481:28:14"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"10556:0:14"},"scope":4438,"src":"10453:225:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2445,"nodeType":"Block","src":"11011:53:14","statements":[{"expression":{"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2439,"name":"tokenTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"11021:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TokenType_$2176_$","typeString":"mapping(address => enum UniversalEncryptedERC.TokenType)"}},"id":2441,"indexExpression":{"id":2440,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"11032:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11021:24:14","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2442,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"11048:9:14","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}},"src":"11021:36:14","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}},"id":2444,"nodeType":"ExpressionStatement","src":"11021:36:14"}]},"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"10684:233:14","text":" @notice Registers a new token type\n @param tokenAddress Address of the token to register\n @param tokenType Type of the token (ERC20, NATIVE, etc.)\n @dev Only the owner can register new token types"},"functionSelector":"ba487473","id":2446,"implemented":true,"kind":"function","modifiers":[{"id":2437,"kind":"modifierInvocation","modifierName":{"id":2436,"name":"onlyOwner","nameLocations":["11001:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11001:9:14"},"nodeType":"ModifierInvocation","src":"11001:9:14"}],"name":"registerTokenType","nameLocation":"10931:17:14","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"tokenAddress","nameLocation":"10957:12:14","nodeType":"VariableDeclaration","scope":2446,"src":"10949:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2430,"name":"address","nodeType":"ElementaryTypeName","src":"10949:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"tokenType","nameLocation":"10981:9:14","nodeType":"VariableDeclaration","scope":2446,"src":"10971:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"},"typeName":{"id":2433,"nodeType":"UserDefinedTypeName","pathNode":{"id":2432,"name":"TokenType","nameLocations":["10971:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2176,"src":"10971:9:14"},"referencedDeclaration":2176,"src":"10971:9:14","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}},"visibility":"internal"}],"src":"10948:43:14"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[],"src":"11011:0:14"},"scope":4438,"src":"10922:142:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2652,"nodeType":"Block","src":"12098:1840:14","statements":[{"assignments":[2469],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"publicInputs","nameLocation":"12127:12:14","nodeType":"VariableDeclaration","scope":2652,"src":"12108:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24]"},"typeName":{"baseType":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"12108:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2468,"length":{"hexValue":"3234","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12116:2:14","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"ArrayTypeName","src":"12108:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage_ptr","typeString":"uint256[24]"}},"visibility":"internal"}],"id":2472,"initialValue":{"expression":{"id":2470,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"12142:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_MintProof_$5105_calldata_ptr","typeString":"struct MintProof calldata"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12148:13:14","memberName":"publicSignals","nodeType":"MemberAccess","referencedDeclaration":5104,"src":"12142:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_calldata_ptr","typeString":"uint256[24] calldata"}},"nodeType":"VariableDeclarationStatement","src":"12108:53:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2473,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12205:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12211:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"12205:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"id":2475,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12222:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2477,"indexExpression":{"hexValue":"30","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12235:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12222:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12205:32:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2483,"nodeType":"IfStatement","src":"12201:86:14","trueBody":{"id":2482,"nodeType":"Block","src":"12239:48:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2479,"name":"InvalidChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"12260:14:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12260:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2481,"nodeType":"RevertStatement","src":"12253:23:14"}]}},{"expression":{"arguments":[{"id":2485,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"12348:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"baseExpression":{"id":2486,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12355:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2488,"indexExpression":{"hexValue":"32","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12355:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2489,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12372:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2491,"indexExpression":{"hexValue":"33","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12385:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12372:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2492,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12354:34:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2484,"name":"_validatePublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"12329:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$__$","typeString":"function (address,uint256[2] memory) view"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2494,"nodeType":"ExpressionStatement","src":"12329:60:14"},{"expression":{"arguments":[{"components":[{"baseExpression":{"id":2496,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12426:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2498,"indexExpression":{"hexValue":"3135","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12439:2:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12426:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2499,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12444:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2501,"indexExpression":{"hexValue":"3136","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12457:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12444:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2502,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12425:36:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2495,"name":"_validateAuditorPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"12399:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$returns$__$","typeString":"function (uint256[2] memory) view"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12399:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2504,"nodeType":"ExpressionStatement","src":"12399:63:14"},{"assignments":[2506],"declarations":[{"constant":false,"id":2506,"mutability":"mutable","name":"mintNullifier","nameLocation":"12526:13:14","nodeType":"VariableDeclaration","scope":2652,"src":"12518:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"12518:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2510,"initialValue":{"baseExpression":{"id":2507,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12542:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2509,"indexExpression":{"hexValue":"31","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12555:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12542:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12518:39:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2511,"name":"mintNullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"12571:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2512,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"12588:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12599:1:14","memberName":"Q","nodeType":"MemberAccess","referencedDeclaration":4636,"src":"12588:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12571:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2519,"nodeType":"IfStatement","src":"12567:85:14","trueBody":{"id":2518,"nodeType":"Block","src":"12602:50:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2515,"name":"InvalidNullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"12623:16:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12623:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2517,"nodeType":"RevertStatement","src":"12616:25:14"}]}},{"condition":{"baseExpression":{"id":2520,"name":"alreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"12665:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2522,"indexExpression":{"id":2521,"name":"mintNullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"12679:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12665:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2527,"nodeType":"IfStatement","src":"12661:80:14","trueBody":{"id":2526,"nodeType":"Block","src":"12695:46:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2523,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"12716:12:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12716:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2525,"nodeType":"RevertStatement","src":"12709:21:14"}]}},{"assignments":[2529],"declarations":[{"constant":false,"id":2529,"mutability":"mutable","name":"isVerified","nameLocation":"12799:10:14","nodeType":"VariableDeclaration","scope":2652,"src":"12794:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2528,"name":"bool","nodeType":"ElementaryTypeName","src":"12794:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2544,"initialValue":{"arguments":[{"expression":{"expression":{"id":2532,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"12850:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_MintProof_$5105_calldata_ptr","typeString":"struct MintProof calldata"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12856:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"12850:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_calldata_ptr","typeString":"struct ProofPoints calldata"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12868:1:14","memberName":"a","nodeType":"MemberAccess","referencedDeclaration":5078,"src":"12850:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}},{"expression":{"expression":{"id":2535,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"12883:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_MintProof_$5105_calldata_ptr","typeString":"struct MintProof calldata"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12889:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"12883:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_calldata_ptr","typeString":"struct ProofPoints calldata"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12901:1:14","memberName":"b","nodeType":"MemberAccess","referencedDeclaration":5084,"src":"12883:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","typeString":"uint256[2] calldata[2] calldata"}},{"expression":{"expression":{"id":2538,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"12916:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_MintProof_$5105_calldata_ptr","typeString":"struct MintProof calldata"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12922:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"12916:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_calldata_ptr","typeString":"struct ProofPoints calldata"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12934:1:14","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":5088,"src":"12916:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}},{"expression":{"id":2541,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"12949:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_MintProof_$5105_calldata_ptr","typeString":"struct MintProof calldata"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12955:13:14","memberName":"publicSignals","nodeType":"MemberAccess","referencedDeclaration":5104,"src":"12949:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_calldata_ptr","typeString":"uint256[24] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"},{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","typeString":"uint256[2] calldata[2] calldata"},{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"},{"typeIdentifier":"t_array$_t_uint256_$24_calldata_ptr","typeString":"uint256[24] calldata"}],"expression":{"id":2530,"name":"mintVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"12812:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_IMintVerifier_$4543","typeString":"contract IMintVerifier"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12825:11:14","memberName":"verifyProof","nodeType":"MemberAccess","referencedDeclaration":4542,"src":"12812:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$24_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[24] memory) view external returns (bool)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12812:166:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12794:184:14"},{"condition":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12992:11:14","subExpression":{"id":2545,"name":"isVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"12993:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2551,"nodeType":"IfStatement","src":"12988:63:14","trueBody":{"id":2550,"nodeType":"Block","src":"13005:46:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2547,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"13026:12:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13026:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2549,"nodeType":"RevertStatement","src":"13019:21:14"}]}},{"id":2609,"nodeType":"Block","src":"13061:571:14","statements":[{"assignments":[2554],"declarations":[{"constant":false,"id":2554,"mutability":"mutable","name":"encryptedAmount","nameLocation":"13146:15:14","nodeType":"VariableDeclaration","scope":2609,"src":"13134:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":2553,"nodeType":"UserDefinedTypeName","pathNode":{"id":2552,"name":"EGCT","nameLocations":["13134:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"13134:4:14"},"referencedDeclaration":5073,"src":"13134:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"id":2573,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":2557,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"13201:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2559,"indexExpression":{"hexValue":"34","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13214:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13201:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2560,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"13221:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2562,"indexExpression":{"hexValue":"35","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13234:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13221:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2556,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"13191:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["13198:1:14","13218:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"13191:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"arguments":[{"baseExpression":{"id":2565,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"13270:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2567,"indexExpression":{"hexValue":"36","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13283:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13270:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2568,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"13290:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2570,"indexExpression":{"hexValue":"37","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13303:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13290:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2564,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"13260:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["13267:1:14","13287:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"13260:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":2555,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"13164:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EGCT_$5073_storage_ptr_$","typeString":"type(struct EGCT storage pointer)"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["13187:2:14","13256:2:14"],"names":["c1","c2"],"nodeType":"FunctionCall","src":"13164:158:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"VariableDeclarationStatement","src":"13134:188:14"},{"assignments":[2579],"declarations":[{"constant":false,"id":2579,"mutability":"mutable","name":"amountPCT","nameLocation":"13389:9:14","nodeType":"VariableDeclaration","scope":2609,"src":"13371:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"13371:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2578,"length":{"hexValue":"37","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13379:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"13371:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"id":2580,"nodeType":"VariableDeclarationStatement","src":"13371:27:14"},{"body":{"id":2601,"nodeType":"Block","src":"13444:67:14","statements":[{"expression":{"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2591,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"13462:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":2593,"indexExpression":{"id":2592,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"13472:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13462:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2594,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"13477:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2598,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13490:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2596,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"13494:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13490:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13477:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13462:34:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2600,"nodeType":"ExpressionStatement","src":"13462:34:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"13432:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"37","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"13432:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2602,"initializationExpression":{"assignments":[2582],"declarations":[{"constant":false,"id":2582,"mutability":"mutable","name":"i","nameLocation":"13425:1:14","nodeType":"VariableDeclaration","scope":2602,"src":"13417:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"13417:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2584,"initialValue":{"hexValue":"30","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13429:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13417:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13439:3:14","subExpression":{"id":2588,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"13439:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2590,"nodeType":"ExpressionStatement","src":"13439:3:14"},"nodeType":"ForStatement","src":"13412:99:14"},{"expression":{"arguments":[{"id":2604,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"13588:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2605,"name":"encryptedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"13594:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":2606,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"13611:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":2603,"name":"_privateMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"13575:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_EGCT_$5073_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (address,struct EGCT memory,uint256[7] memory)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13575:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2608,"nodeType":"ExpressionStatement","src":"13575:46:14"}]},{"expression":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2610,"name":"alreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"13685:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2612,"indexExpression":{"id":2611,"name":"mintNullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"13699:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13685:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13716:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13685:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2615,"nodeType":"ExpressionStatement","src":"13685:35:14"},{"assignments":[2621],"declarations":[{"constant":false,"id":2621,"mutability":"mutable","name":"auditorPCT","nameLocation":"13749:10:14","nodeType":"VariableDeclaration","scope":2652,"src":"13731:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"13731:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2620,"length":{"hexValue":"37","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13739:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"13731:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"id":2622,"nodeType":"VariableDeclarationStatement","src":"13731:28:14"},{"body":{"id":2644,"nodeType":"Block","src":"13817:61:14","statements":[{"expression":{"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2634,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"13831:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":2636,"indexExpression":{"id":2635,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"13842:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13831:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2637,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"13847:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24] memory"}},"id":2641,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3137","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13860:2:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"17"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"13865:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13860:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13847:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13831:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"nodeType":"ExpressionStatement","src":"13831:36:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2627,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"13789:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2628,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"13793:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13804:6:14","memberName":"length","nodeType":"MemberAccess","src":"13793:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13789:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2645,"initializationExpression":{"assignments":[2624],"declarations":[{"constant":false,"id":2624,"mutability":"mutable","name":"i","nameLocation":"13782:1:14","nodeType":"VariableDeclaration","scope":2645,"src":"13774:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"13774:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2626,"initialValue":{"hexValue":"30","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13786:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13774:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13812:3:14","subExpression":{"id":2631,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"13812:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2633,"nodeType":"ExpressionStatement","src":"13812:3:14"},"nodeType":"ForStatement","src":"13769:109:14"},{"eventCall":{"arguments":[{"id":2647,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"13905:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2648,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"13911:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},{"id":2649,"name":"auditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"13923:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2646,"name":"PrivateMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"13893:11:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$7_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,uint256[7] memory,address)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13893:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2651,"nodeType":"EmitStatement","src":"13888:43:14"}]},"documentation":{"id":2447,"nodeType":"StructuredDocumentation","src":"11070:815:14","text":" @notice Performs a private mint operation for a registered user\n @param user The address of the user to mint tokens to\n @param proof The zero-knowledge proof proving the validity of the mint operation\n @dev This function:\n      1. Validates the chain ID and user registration\n      2. Verifies the user's public key matches the proof\n      3. Verifies the auditor's public key matches the proof\n      4. Checks the mint nullifier hasn't been used\n      5. Verifies the zero-knowledge proof\n      6. Updates the user's encrypted balance\n Requirements:\n - Caller must be the contract owner\n - Auditor must be set\n - Contract must be in standalone mode\n - User must be registered\n - Proof must be valid"},"functionSelector":"204ac7cc","id":2653,"implemented":true,"kind":"function","modifiers":[{"id":2455,"kind":"modifierInvocation","modifierName":{"id":2454,"name":"onlyOwner","nameLocations":["11998:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11998:9:14"},"nodeType":"ModifierInvocation","src":"11998:9:14"},{"id":2457,"kind":"modifierInvocation","modifierName":{"id":2456,"name":"onlyIfAuditorSet","nameLocations":["12016:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":990,"src":"12016:16:14"},"nodeType":"ModifierInvocation","src":"12016:16:14"},{"id":2459,"kind":"modifierInvocation","modifierName":{"id":2458,"name":"onlyForStandalone","nameLocations":["12041:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"12041:17:14"},"nodeType":"ModifierInvocation","src":"12041:17:14"},{"arguments":[{"id":2461,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"12088:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2462,"kind":"modifierInvocation","modifierName":{"id":2460,"name":"onlyIfUserRegistered","nameLocations":["12067:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":2279,"src":"12067:20:14"},"nodeType":"ModifierInvocation","src":"12067:26:14"}],"name":"privateMint","nameLocation":"11899:11:14","nodeType":"FunctionDefinition","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"user","nameLocation":"11928:4:14","nodeType":"VariableDeclaration","scope":2653,"src":"11920:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2448,"name":"address","nodeType":"ElementaryTypeName","src":"11920:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"proof","nameLocation":"11961:5:14","nodeType":"VariableDeclaration","scope":2653,"src":"11942:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_MintProof_$5105_calldata_ptr","typeString":"struct MintProof"},"typeName":{"id":2451,"nodeType":"UserDefinedTypeName","pathNode":{"id":2450,"name":"MintProof","nameLocations":["11942:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":5105,"src":"11942:9:14"},"referencedDeclaration":5105,"src":"11942:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_MintProof_$5105_storage_ptr","typeString":"struct MintProof"}},"visibility":"internal"}],"src":"11910:62:14"},"returnParameters":{"id":2463,"nodeType":"ParameterList","parameters":[],"src":"12098:0:14"},"scope":4438,"src":"11890:2048:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2819,"nodeType":"Block","src":"14939:1576:14","statements":[{"assignments":[2677],"declarations":[{"constant":false,"id":2677,"mutability":"mutable","name":"publicInputs","nameLocation":"14970:12:14","nodeType":"VariableDeclaration","scope":2819,"src":"14949:33:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19]"},"typeName":{"baseType":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"14949:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2676,"length":{"hexValue":"3139","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14957:2:14","typeDescriptions":{"typeIdentifier":"t_rational_19_by_1","typeString":"int_const 19"},"value":"19"},"nodeType":"ArrayTypeName","src":"14949:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_storage_ptr","typeString":"uint256[19]"}},"visibility":"internal"}],"id":2680,"initialValue":{"expression":{"id":2678,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"14985:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_BurnProof_$5121_calldata_ptr","typeString":"struct BurnProof calldata"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14991:13:14","memberName":"publicSignals","nodeType":"MemberAccess","referencedDeclaration":5120,"src":"14985:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"nodeType":"VariableDeclarationStatement","src":"14949:55:14"},{"assignments":[2682],"declarations":[{"constant":false,"id":2682,"mutability":"mutable","name":"from","nameLocation":"15022:4:14","nodeType":"VariableDeclaration","scope":2819,"src":"15014:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2681,"name":"address","nodeType":"ElementaryTypeName","src":"15014:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2685,"initialValue":{"expression":{"id":2683,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15029:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15033:6:14","memberName":"sender","nodeType":"MemberAccess","src":"15029:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15014:25:14"},{"expression":{"arguments":[{"id":2687,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"15100:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"baseExpression":{"id":2688,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15107:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2690,"indexExpression":{"hexValue":"30","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15120:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15107:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2691,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15124:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2693,"indexExpression":{"hexValue":"31","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15137:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15124:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2694,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15106:34:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2686,"name":"_validatePublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"15081:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$__$","typeString":"function (address,uint256[2] memory) view"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15081:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2696,"nodeType":"ExpressionStatement","src":"15081:60:14"},{"expression":{"arguments":[{"components":[{"baseExpression":{"id":2698,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15218:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2700,"indexExpression":{"hexValue":"3130","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15231:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15218:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2701,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15236:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2703,"indexExpression":{"hexValue":"3131","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15249:2:14","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15236:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2704,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15217:36:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2697,"name":"_validateAuditorPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"15191:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$returns$__$","typeString":"function (uint256[2] memory) view"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15191:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2706,"nodeType":"ExpressionStatement","src":"15191:63:14"},{"assignments":[2708],"declarations":[{"constant":false,"id":2708,"mutability":"mutable","name":"isVerified","nameLocation":"15313:10:14","nodeType":"VariableDeclaration","scope":2819,"src":"15308:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2707,"name":"bool","nodeType":"ElementaryTypeName","src":"15308:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2723,"initialValue":{"arguments":[{"expression":{"expression":{"id":2711,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"15364:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_BurnProof_$5121_calldata_ptr","typeString":"struct BurnProof calldata"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15370:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5116,"src":"15364:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_calldata_ptr","typeString":"struct ProofPoints calldata"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15382:1:14","memberName":"a","nodeType":"MemberAccess","referencedDeclaration":5078,"src":"15364:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}},{"expression":{"expression":{"id":2714,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"15397:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_BurnProof_$5121_calldata_ptr","typeString":"struct BurnProof calldata"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15403:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5116,"src":"15397:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_calldata_ptr","typeString":"struct ProofPoints calldata"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15415:1:14","memberName":"b","nodeType":"MemberAccess","referencedDeclaration":5084,"src":"15397:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","typeString":"uint256[2] calldata[2] calldata"}},{"expression":{"expression":{"id":2717,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"15430:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_BurnProof_$5121_calldata_ptr","typeString":"struct BurnProof calldata"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15436:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5116,"src":"15430:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_calldata_ptr","typeString":"struct ProofPoints calldata"}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15448:1:14","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":5088,"src":"15430:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}},{"expression":{"id":2720,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"15463:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_BurnProof_$5121_calldata_ptr","typeString":"struct BurnProof calldata"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15469:13:14","memberName":"publicSignals","nodeType":"MemberAccess","referencedDeclaration":5120,"src":"15463:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"},{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","typeString":"uint256[2] calldata[2] calldata"},{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"},{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}],"expression":{"id":2709,"name":"burnVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"15326:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBurnVerifier_$4517","typeString":"contract IBurnVerifier"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15339:11:14","memberName":"verifyProof","nodeType":"MemberAccess","referencedDeclaration":4516,"src":"15326:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$19_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[19] memory) view external returns (bool)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15326:166:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15308:184:14"},{"condition":{"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15506:11:14","subExpression":{"id":2724,"name":"isVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"15507:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2730,"nodeType":"IfStatement","src":"15502:63:14","trueBody":{"id":2729,"nodeType":"Block","src":"15519:46:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2726,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"15540:12:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15540:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2728,"nodeType":"RevertStatement","src":"15533:21:14"}]}},{"assignments":[2733],"declarations":[{"constant":false,"id":2733,"mutability":"mutable","name":"providedBalance","nameLocation":"15625:15:14","nodeType":"VariableDeclaration","scope":2819,"src":"15613:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":2732,"nodeType":"UserDefinedTypeName","pathNode":{"id":2731,"name":"EGCT","nameLocations":["15613:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"15613:4:14"},"referencedDeclaration":5073,"src":"15613:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"id":2752,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":2736,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15676:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2738,"indexExpression":{"hexValue":"32","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15689:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15676:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2739,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15696:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2741,"indexExpression":{"hexValue":"33","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15696:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2735,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"15666:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15673:1:14","15693:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"15666:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"arguments":[{"baseExpression":{"id":2744,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15741:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2746,"indexExpression":{"hexValue":"34","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15754:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15741:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2747,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15761:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2749,"indexExpression":{"hexValue":"35","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15774:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15761:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2743,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"15731:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15738:1:14","15758:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"15731:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":2734,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"15643:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EGCT_$5073_storage_ptr_$","typeString":"type(struct EGCT storage pointer)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15662:2:14","15727:2:14"],"names":["c1","c2"],"nodeType":"FunctionCall","src":"15643:146:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"VariableDeclarationStatement","src":"15613:176:14"},{"assignments":[2755],"declarations":[{"constant":false,"id":2755,"mutability":"mutable","name":"encryptedBurnAmount","nameLocation":"15853:19:14","nodeType":"VariableDeclaration","scope":2819,"src":"15841:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":2754,"nodeType":"UserDefinedTypeName","pathNode":{"id":2753,"name":"EGCT","nameLocations":["15841:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"15841:4:14"},"referencedDeclaration":5073,"src":"15841:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"id":2774,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":2758,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15908:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2760,"indexExpression":{"hexValue":"36","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15921:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15908:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2761,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15928:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2763,"indexExpression":{"hexValue":"37","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15941:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15928:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2757,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"15898:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15905:1:14","15925:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"15898:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"arguments":[{"baseExpression":{"id":2766,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15973:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2768,"indexExpression":{"hexValue":"38","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15973:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2769,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"15993:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2771,"indexExpression":{"hexValue":"39","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16006:1:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15993:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2765,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"15963:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15970:1:14","15990:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"15963:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":2756,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"15875:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EGCT_$5073_storage_ptr_$","typeString":"type(struct EGCT storage pointer)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15894:2:14","15959:2:14"],"names":["c1","c2"],"nodeType":"FunctionCall","src":"15875:146:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"VariableDeclarationStatement","src":"15841:180:14"},{"expression":{"arguments":[{"id":2776,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"16151:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16169:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2778,"name":"providedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"16184:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":2779,"name":"encryptedBurnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"16213:19:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":2780,"name":"balancePCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"16246:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_calldata_ptr","typeString":"uint256[7] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_array$_t_uint256_$7_calldata_ptr","typeString":"uint256[7] calldata"}],"id":2775,"name":"_privateBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"16125:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_struct$_EGCT_$5073_memory_ptr_$_t_struct$_EGCT_$5073_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (address,uint256,struct EGCT memory,struct EGCT memory,uint256[7] memory)"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16125:141:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2782,"nodeType":"ExpressionStatement","src":"16125:141:14"},{"assignments":[2788],"declarations":[{"constant":false,"id":2788,"mutability":"mutable","name":"auditorPCT","nameLocation":"16326:10:14","nodeType":"VariableDeclaration","scope":2819,"src":"16308:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"16308:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2787,"length":{"hexValue":"37","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16316:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"16308:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"id":2789,"nodeType":"VariableDeclarationStatement","src":"16308:28:14"},{"body":{"id":2811,"nodeType":"Block","src":"16394:61:14","statements":[{"expression":{"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2801,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"16408:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":2803,"indexExpression":{"id":2802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"16419:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16408:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2804,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"16424:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_calldata_ptr","typeString":"uint256[19] calldata"}},"id":2808,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3132","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:14","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2806,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"16442:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16437:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16424:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16408:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2810,"nodeType":"ExpressionStatement","src":"16408:36:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"16366:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2795,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"16370:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16381:6:14","memberName":"length","nodeType":"MemberAccess","src":"16370:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16366:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2812,"initializationExpression":{"assignments":[2791],"declarations":[{"constant":false,"id":2791,"mutability":"mutable","name":"i","nameLocation":"16359:1:14","nodeType":"VariableDeclaration","scope":2812,"src":"16351:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2790,"name":"uint256","nodeType":"ElementaryTypeName","src":"16351:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2793,"initialValue":{"hexValue":"30","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16363:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16351:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16389:3:14","subExpression":{"id":2798,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"16389:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2800,"nodeType":"ExpressionStatement","src":"16389:3:14"},"nodeType":"ForStatement","src":"16346:109:14"},{"eventCall":{"arguments":[{"id":2814,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"16482:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2815,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"16488:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},{"id":2816,"name":"auditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"16500:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2813,"name":"PrivateBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"16470:11:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$7_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,uint256[7] memory,address)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16470:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2818,"nodeType":"EmitStatement","src":"16465:43:14"}]},"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"13944:776:14","text":" @notice Performs a private burn operation\n @param proof The transfer proof proving the validity of the burn operation\n @param balancePCT The balance PCT for the sender after the burn\n @dev This function:\n      1. Validates the sender is registered\n      2. Verifies the sender's public key matches the proof\n      3. Verifies the burn address's public key matches the proof\n      4. Verifies the auditor's public key matches the proof\n      5. Verifies the zero-knowledge proof\n      6. Transfers the encrypted amount to the burn address\n Requirements:\n - Auditor must be set\n - Contract must be in standalone mode\n - Sender must be registered\n - Proof must be valid"},"functionSelector":"f4b2be44","id":2820,"implemented":true,"kind":"function","modifiers":[{"id":2664,"kind":"modifierInvocation","modifierName":{"id":2663,"name":"onlyIfAuditorSet","nameLocations":["14851:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":990,"src":"14851:16:14"},"nodeType":"ModifierInvocation","src":"14851:16:14"},{"id":2666,"kind":"modifierInvocation","modifierName":{"id":2665,"name":"onlyForStandalone","nameLocations":["14876:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"14876:17:14"},"nodeType":"ModifierInvocation","src":"14876:17:14"},{"arguments":[{"expression":{"id":2668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14923:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14927:6:14","memberName":"sender","nodeType":"MemberAccess","src":"14923:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2670,"kind":"modifierInvocation","modifierName":{"id":2667,"name":"onlyIfUserRegistered","nameLocations":["14902:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":2279,"src":"14902:20:14"},"nodeType":"ModifierInvocation","src":"14902:32:14"}],"name":"privateBurn","nameLocation":"14734:11:14","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"proof","nameLocation":"14774:5:14","nodeType":"VariableDeclaration","scope":2820,"src":"14755:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BurnProof_$5121_calldata_ptr","typeString":"struct BurnProof"},"typeName":{"id":2656,"nodeType":"UserDefinedTypeName","pathNode":{"id":2655,"name":"BurnProof","nameLocations":["14755:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":5121,"src":"14755:9:14"},"referencedDeclaration":5121,"src":"14755:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BurnProof_$5121_storage_ptr","typeString":"struct BurnProof"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"balancePCT","nameLocation":"14809:10:14","nodeType":"VariableDeclaration","scope":2820,"src":"14789:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_calldata_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"14789:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2660,"length":{"hexValue":"37","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14797:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"14789:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"14745:80:14"},"returnParameters":{"id":2671,"nodeType":"ParameterList","parameters":[],"src":"14939:0:14"},"scope":4438,"src":"14725:1790:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2971,"nodeType":"Block","src":"17561:1543:14","statements":[{"assignments":[2849],"declarations":[{"constant":false,"id":2849,"mutability":"mutable","name":"publicInputs","nameLocation":"17590:12:14","nodeType":"VariableDeclaration","scope":2971,"src":"17571:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32]"},"typeName":{"baseType":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"17571:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"length":{"hexValue":"3332","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17579:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"ArrayTypeName","src":"17571:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_storage_ptr","typeString":"uint256[32]"}},"visibility":"internal"}],"id":2852,"initialValue":{"expression":{"id":2850,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"17605:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferProof_$5113_memory_ptr","typeString":"struct TransferProof memory"}},"id":2851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17611:13:14","memberName":"publicSignals","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"17605:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"nodeType":"VariableDeclarationStatement","src":"17571:53:14"},{"expression":{"arguments":[{"expression":{"id":2854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17692:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17696:6:14","memberName":"sender","nodeType":"MemberAccess","src":"17692:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"baseExpression":{"id":2856,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"17705:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":2858,"indexExpression":{"hexValue":"30","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17718:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17705:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2859,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"17722:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":2861,"indexExpression":{"hexValue":"31","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17735:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17722:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2862,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17704:34:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2853,"name":"_validatePublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"17673:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$__$","typeString":"function (address,uint256[2] memory) view"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17673:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2864,"nodeType":"ExpressionStatement","src":"17673:66:14"},{"expression":{"arguments":[{"id":2866,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"17768:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"baseExpression":{"id":2867,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"17773:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":2869,"indexExpression":{"hexValue":"3130","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17786:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17773:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2870,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"17791:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":2872,"indexExpression":{"hexValue":"3131","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17804:2:14","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17791:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2873,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17772:36:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2865,"name":"_validatePublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"17749:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$__$","typeString":"function (address,uint256[2] memory) view"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17749:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2875,"nodeType":"ExpressionStatement","src":"17749:60:14"},{"expression":{"arguments":[{"components":[{"baseExpression":{"id":2877,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"17847:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":2879,"indexExpression":{"hexValue":"3233","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17860:2:14","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17847:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2880,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"17865:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":2882,"indexExpression":{"hexValue":"3234","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17878:2:14","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17865:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2883,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17846:36:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2876,"name":"_validateAuditorPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"17820:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$returns$__$","typeString":"function (uint256[2] memory) view"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17820:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2885,"nodeType":"ExpressionStatement","src":"17820:63:14"},{"assignments":[2887],"declarations":[{"constant":false,"id":2887,"mutability":"mutable","name":"isVerified","nameLocation":"17942:10:14","nodeType":"VariableDeclaration","scope":2971,"src":"17937:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2886,"name":"bool","nodeType":"ElementaryTypeName","src":"17937:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2902,"initialValue":{"arguments":[{"expression":{"expression":{"id":2890,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"17997:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferProof_$5113_memory_ptr","typeString":"struct TransferProof memory"}},"id":2891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18003:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5108,"src":"17997:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_memory_ptr","typeString":"struct ProofPoints memory"}},"id":2892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18015:1:14","memberName":"a","nodeType":"MemberAccess","referencedDeclaration":5078,"src":"17997:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"expression":{"id":2893,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"18030:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferProof_$5113_memory_ptr","typeString":"struct TransferProof memory"}},"id":2894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18036:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5108,"src":"18030:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_memory_ptr","typeString":"struct ProofPoints memory"}},"id":2895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18048:1:14","memberName":"b","nodeType":"MemberAccess","referencedDeclaration":5084,"src":"18030:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},{"expression":{"expression":{"id":2896,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"18063:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferProof_$5113_memory_ptr","typeString":"struct TransferProof memory"}},"id":2897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18069:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5108,"src":"18063:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_memory_ptr","typeString":"struct ProofPoints memory"}},"id":2898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18081:1:14","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":5088,"src":"18063:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"id":2899,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"18096:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferProof_$5113_memory_ptr","typeString":"struct TransferProof memory"}},"id":2900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18102:13:14","memberName":"publicSignals","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"18096:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}],"expression":{"id":2888,"name":"transferVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"17955:16:14","typeDescriptions":{"typeIdentifier":"t_contract$_ITransferVerifier_$4595","typeString":"contract ITransferVerifier"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17972:11:14","memberName":"verifyProof","nodeType":"MemberAccess","referencedDeclaration":4594,"src":"17955:28:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$32_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[32] memory) view external returns (bool)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17955:170:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"17937:188:14"},{"condition":{"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18139:11:14","subExpression":{"id":2903,"name":"isVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"18140:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2909,"nodeType":"IfStatement","src":"18135:63:14","trueBody":{"id":2908,"nodeType":"Block","src":"18152:46:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2905,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"18173:12:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18173:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2907,"nodeType":"RevertStatement","src":"18166:21:14"}]}},{"assignments":[2912],"declarations":[{"constant":false,"id":2912,"mutability":"mutable","name":"transferInputs","nameLocation":"18287:14:14","nodeType":"VariableDeclaration","scope":2971,"src":"18265:36:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_memory_ptr","typeString":"struct TransferInputs"},"typeName":{"id":2911,"nodeType":"UserDefinedTypeName","pathNode":{"id":2910,"name":"TransferInputs","nameLocations":["18265:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":5143,"src":"18265:14:14"},"referencedDeclaration":5143,"src":"18265:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_storage_ptr","typeString":"struct TransferInputs"}},"visibility":"internal"}],"id":2916,"initialValue":{"arguments":[{"id":2914,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"18340:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}],"id":2913,"name":"_extractTransferInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"18304:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$32_memory_ptr_$returns$_t_struct$_TransferInputs_$5143_memory_ptr_$","typeString":"function (uint256[32] memory) pure returns (struct TransferInputs memory)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18304:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_memory_ptr","typeString":"struct TransferInputs memory"}},"nodeType":"VariableDeclarationStatement","src":"18265:97:14"},{"expression":{"arguments":[{"expression":{"id":2918,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18435:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18439:6:14","memberName":"sender","nodeType":"MemberAccess","src":"18435:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2920,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"18463:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2921,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"18488:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2922,"name":"transferInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"18526:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_memory_ptr","typeString":"struct TransferInputs memory"}},"id":2923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18541:15:14","memberName":"providedBalance","nodeType":"MemberAccess","referencedDeclaration":5132,"src":"18526:30:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"expression":{"id":2924,"name":"transferInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"18593:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_memory_ptr","typeString":"struct TransferInputs memory"}},"id":2925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18608:21:14","memberName":"senderEncryptedAmount","nodeType":"MemberAccess","referencedDeclaration":5135,"src":"18593:36:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"expression":{"id":2926,"name":"transferInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"18668:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_memory_ptr","typeString":"struct TransferInputs memory"}},"id":2927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18683:23:14","memberName":"receiverEncryptedAmount","nodeType":"MemberAccess","referencedDeclaration":5138,"src":"18668:38:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":2928,"name":"balancePCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"18732:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_calldata_ptr","typeString":"uint256[7] calldata"}},{"expression":{"id":2929,"name":"transferInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"18767:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_memory_ptr","typeString":"struct TransferInputs memory"}},"id":2930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18782:9:14","memberName":"amountPCT","nodeType":"MemberAccess","referencedDeclaration":5142,"src":"18767:24:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_array$_t_uint256_$7_calldata_ptr","typeString":"uint256[7] calldata"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":2917,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"18405:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_EGCT_$5073_memory_ptr_$_t_struct$_EGCT_$5073_memory_ptr_$_t_struct$_EGCT_$5073_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,struct EGCT memory,struct EGCT memory,struct EGCT memory,uint256[7] memory,uint256[7] memory)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["18429:4:14","18459:2:14","18479:7:14","18509:15:14","18570:21:14","18643:23:14","18720:10:14","18756:9:14"],"names":["from","to","tokenId","providedBalance","senderEncryptedAmount","receiverEncryptedAmount","balancePCT","amountPCT"],"nodeType":"FunctionCall","src":"18405:397:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2932,"nodeType":"ExpressionStatement","src":"18405:397:14"},{"id":2970,"nodeType":"Block","src":"18859:239:14","statements":[{"assignments":[2938],"declarations":[{"constant":false,"id":2938,"mutability":"mutable","name":"auditorPCT","nameLocation":"18891:10:14","nodeType":"VariableDeclaration","scope":2970,"src":"18873:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"18873:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2937,"length":{"hexValue":"37","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18881:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"18873:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"id":2939,"nodeType":"VariableDeclarationStatement","src":"18873:28:14"},{"body":{"id":2960,"nodeType":"Block","src":"18947:69:14","statements":[{"expression":{"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2950,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"18965:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":2952,"indexExpression":{"id":2951,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"18976:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18965:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2953,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"18981:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":2957,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3235","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18994:2:14","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2955,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"18999:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18994:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18981:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18965:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2959,"nodeType":"ExpressionStatement","src":"18965:36:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"18935:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"37","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18939:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"18935:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2961,"initializationExpression":{"assignments":[2941],"declarations":[{"constant":false,"id":2941,"mutability":"mutable","name":"i","nameLocation":"18928:1:14","nodeType":"VariableDeclaration","scope":2961,"src":"18920:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"18920:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2943,"initialValue":{"hexValue":"30","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18932:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18920:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18942:3:14","subExpression":{"id":2947,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"18942:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2949,"nodeType":"ExpressionStatement","src":"18942:3:14"},"nodeType":"ForStatement","src":"18915:101:14"},{"eventCall":{"arguments":[{"expression":{"id":2963,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19051:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19055:6:14","memberName":"sender","nodeType":"MemberAccess","src":"19051:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2965,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"19063:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2966,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"19067:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},{"id":2967,"name":"auditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"19079:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2962,"name":"PrivateTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"19035:15:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$7_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,address,uint256[7] memory,address)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19035:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2969,"nodeType":"EmitStatement","src":"19030:57:14"}]}]},"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"16521:772:14","text":" @notice Performs a private transfer between two users\n @param to Address of the receiver\n @param tokenId ID of the token to transfer\n @param proof The transfer proof proving the validity of the transfer\n @param balancePCT The balance PCT for the sender after the transfer\n @dev This function:\n      1. Validates both sender and receiver are registered\n      2. Verifies both public keys match the proof\n      3. Verifies the auditor's public key matches the proof\n      4. Verifies the zero-knowledge proof\n      5. Updates both users' encrypted balances\n Requirements:\n - Auditor must be set\n - Both sender and receiver must be registered\n - Proof must be valid"},"functionSelector":"2d947610","id":2972,"implemented":true,"kind":"function","modifiers":[{"id":2835,"kind":"modifierInvocation","modifierName":{"id":2834,"name":"onlyIfAuditorSet","nameLocations":["17466:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":990,"src":"17466:16:14"},"nodeType":"ModifierInvocation","src":"17466:16:14"},{"arguments":[{"expression":{"id":2837,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17512:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17516:6:14","memberName":"sender","nodeType":"MemberAccess","src":"17512:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2839,"kind":"modifierInvocation","modifierName":{"id":2836,"name":"onlyIfUserRegistered","nameLocations":["17491:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":2279,"src":"17491:20:14"},"nodeType":"ModifierInvocation","src":"17491:32:14"},{"arguments":[{"id":2841,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"17553:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2842,"kind":"modifierInvocation","modifierName":{"id":2840,"name":"onlyIfUserRegistered","nameLocations":["17532:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":2279,"src":"17532:20:14"},"nodeType":"ModifierInvocation","src":"17532:24:14"}],"name":"transfer","nameLocation":"17307:8:14","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"to","nameLocation":"17333:2:14","nodeType":"VariableDeclaration","scope":2972,"src":"17325:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2822,"name":"address","nodeType":"ElementaryTypeName","src":"17325:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"tokenId","nameLocation":"17353:7:14","nodeType":"VariableDeclaration","scope":2972,"src":"17345:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"17345:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"proof","nameLocation":"17391:5:14","nodeType":"VariableDeclaration","scope":2972,"src":"17370:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TransferProof_$5113_memory_ptr","typeString":"struct TransferProof"},"typeName":{"id":2827,"nodeType":"UserDefinedTypeName","pathNode":{"id":2826,"name":"TransferProof","nameLocations":["17370:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":5113,"src":"17370:13:14"},"referencedDeclaration":5113,"src":"17370:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferProof_$5113_storage_ptr","typeString":"struct TransferProof"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"balancePCT","nameLocation":"17426:10:14","nodeType":"VariableDeclaration","scope":2972,"src":"17406:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_calldata_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"17406:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2831,"length":{"hexValue":"37","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17414:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"17406:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"17315:127:14"},"returnParameters":{"id":2843,"nodeType":"ParameterList","parameters":[],"src":"17561:0:14"},"scope":4438,"src":"17298:1806:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3021,"nodeType":"Block","src":"20147:448:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"20209:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20233:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20225:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"20225:7:14","typeDescriptions":{}}},"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20225:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20209:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3005,"nodeType":"IfStatement","src":"20205:116:14","trueBody":{"id":3004,"nodeType":"Block","src":"20237:84:14","statements":[{"expression":{"arguments":[{"id":2999,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"20272:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3000,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"20280:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":2998,"name":"_handleNativeDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"20251:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[7] memory)"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20251:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3002,"nodeType":"ExpressionStatement","src":"20251:39:14"},{"functionReturnParameters":2991,"id":3003,"nodeType":"Return","src":"20304:7:14"}]}},{"condition":{"baseExpression":{"id":3006,"name":"blacklistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"20400:17:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3008,"indexExpression":{"id":3007,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"20418:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20400:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3014,"nodeType":"IfStatement","src":"20396:92:14","trueBody":{"id":3013,"nodeType":"Block","src":"20433:55:14","statements":[{"expression":{"arguments":[{"hexValue":"546f6b656e20697320626c61636b6c6973746564","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20454:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_53b654b8d09c5f8d1ac8de0523522cae7b4d03c7fb6bf56eec493bda064f5402","typeString":"literal_string \"Token is blacklisted\""},"value":"Token is blacklisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_53b654b8d09c5f8d1ac8de0523522cae7b4d03c7fb6bf56eec493bda064f5402","typeString":"literal_string \"Token is blacklisted\""}],"id":3009,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"20447:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20447:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3012,"nodeType":"ExpressionStatement","src":"20447:30:14"}]}},{"expression":{"arguments":[{"id":3016,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"20556:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3017,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"20564:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3018,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"20578:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":3015,"name":"_handleERC20Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"20536:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256[7] memory)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20536:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3020,"nodeType":"ExpressionStatement","src":"20536:52:14"}]},"documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"19110:792:14","text":" @notice Deposits tokens into the contract (supports both ERC20 and native tokens)\n @param amount Amount of tokens to deposit\n @param tokenAddress Address of the token to deposit (address(0) for native tokens)\n @param amountPCT Amount PCT for the deposit\n @dev This function:\n      1. Validates the user is registered\n      2. Determines token type and handles accordingly\n      3. Converts the tokens to encrypted tokens\n      4. Adds the encrypted amount to the user's balance\n      5. Returns any dust (remainder) to the user\n Requirements:\n - Auditor must be set\n - Contract must be in converter mode\n - Token must not be blacklisted (for ERC20 tokens)\n - User must be registered"},"functionSelector":"82f09ea2","id":3022,"implemented":true,"kind":"function","modifiers":[{"id":2984,"kind":"modifierInvocation","modifierName":{"id":2983,"name":"onlyIfAuditorSet","nameLocations":["20060:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":990,"src":"20060:16:14"},"nodeType":"ModifierInvocation","src":"20060:16:14"},{"id":2986,"kind":"modifierInvocation","modifierName":{"id":2985,"name":"onlyForConverter","nameLocations":["20085:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":1977,"src":"20085:16:14"},"nodeType":"ModifierInvocation","src":"20085:16:14"},{"arguments":[{"expression":{"id":2988,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20131:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20135:6:14","memberName":"sender","nodeType":"MemberAccess","src":"20131:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2990,"kind":"modifierInvocation","modifierName":{"id":2987,"name":"onlyIfUserRegistered","nameLocations":["20110:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":2279,"src":"20110:20:14"},"nodeType":"ModifierInvocation","src":"20110:32:14"}],"name":"deposit","nameLocation":"19916:7:14","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"amount","nameLocation":"19941:6:14","nodeType":"VariableDeclaration","scope":3022,"src":"19933:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2974,"name":"uint256","nodeType":"ElementaryTypeName","src":"19933:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2977,"mutability":"mutable","name":"tokenAddress","nameLocation":"19965:12:14","nodeType":"VariableDeclaration","scope":3022,"src":"19957:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2976,"name":"address","nodeType":"ElementaryTypeName","src":"19957:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"amountPCT","nameLocation":"20005:9:14","nodeType":"VariableDeclaration","scope":3022,"src":"19987:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"19987:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"length":{"hexValue":"37","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19995:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"19987:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"19923:97:14"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[],"src":"20147:0:14"},"scope":4438,"src":"19907:688:14","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3139,"nodeType":"Block","src":"21654:1020:14","statements":[{"assignments":[3044],"declarations":[{"constant":false,"id":3044,"mutability":"mutable","name":"from","nameLocation":"21672:4:14","nodeType":"VariableDeclaration","scope":3139,"src":"21664:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3043,"name":"address","nodeType":"ElementaryTypeName","src":"21664:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3047,"initialValue":{"expression":{"id":3045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21679:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21683:6:14","memberName":"sender","nodeType":"MemberAccess","src":"21679:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"21664:25:14"},{"assignments":[3053],"declarations":[{"constant":false,"id":3053,"mutability":"mutable","name":"publicInputs","nameLocation":"21718:12:14","nodeType":"VariableDeclaration","scope":3139,"src":"21699:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16]"},"typeName":{"baseType":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"21699:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3052,"length":{"hexValue":"3136","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21707:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"ArrayTypeName","src":"21699:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_storage_ptr","typeString":"uint256[16]"}},"visibility":"internal"}],"id":3056,"initialValue":{"expression":{"id":3054,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"21733:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawProof_$5129_memory_ptr","typeString":"struct WithdrawProof memory"}},"id":3055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21739:13:14","memberName":"publicSignals","nodeType":"MemberAccess","referencedDeclaration":5128,"src":"21733:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"nodeType":"VariableDeclarationStatement","src":"21699:53:14"},{"assignments":[3058],"declarations":[{"constant":false,"id":3058,"mutability":"mutable","name":"amount","nameLocation":"21770:6:14","nodeType":"VariableDeclaration","scope":3139,"src":"21762:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"21762:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3062,"initialValue":{"baseExpression":{"id":3059,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"21779:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3061,"indexExpression":{"hexValue":"30","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21792:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21779:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21762:32:14"},{"expression":{"arguments":[{"id":3064,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"21856:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"baseExpression":{"id":3065,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"21863:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3067,"indexExpression":{"hexValue":"31","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21876:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21863:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3068,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"21880:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3070,"indexExpression":{"hexValue":"32","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21893:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21880:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3071,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21862:34:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":3063,"name":"_validatePublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"21837:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$__$","typeString":"function (address,uint256[2] memory) view"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21837:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3073,"nodeType":"ExpressionStatement","src":"21837:60:14"},{"expression":{"arguments":[{"components":[{"baseExpression":{"id":3075,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"21934:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3077,"indexExpression":{"hexValue":"37","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21947:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21934:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3078,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"21951:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3080,"indexExpression":{"hexValue":"38","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21964:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21951:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3081,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21933:34:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":3074,"name":"_validateAuditorPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"21907:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$returns$__$","typeString":"function (uint256[2] memory) view"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21907:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3083,"nodeType":"ExpressionStatement","src":"21907:61:14"},{"assignments":[3085],"declarations":[{"constant":false,"id":3085,"mutability":"mutable","name":"isVerified","nameLocation":"22027:10:14","nodeType":"VariableDeclaration","scope":3139,"src":"22022:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3084,"name":"bool","nodeType":"ElementaryTypeName","src":"22022:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3100,"initialValue":{"arguments":[{"expression":{"expression":{"id":3088,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"22082:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawProof_$5129_memory_ptr","typeString":"struct WithdrawProof memory"}},"id":3089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22088:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5124,"src":"22082:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_memory_ptr","typeString":"struct ProofPoints memory"}},"id":3090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22100:1:14","memberName":"a","nodeType":"MemberAccess","referencedDeclaration":5078,"src":"22082:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"expression":{"id":3091,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"22115:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawProof_$5129_memory_ptr","typeString":"struct WithdrawProof memory"}},"id":3092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22121:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5124,"src":"22115:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_memory_ptr","typeString":"struct ProofPoints memory"}},"id":3093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22133:1:14","memberName":"b","nodeType":"MemberAccess","referencedDeclaration":5084,"src":"22115:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"}},{"expression":{"expression":{"id":3094,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"22148:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawProof_$5129_memory_ptr","typeString":"struct WithdrawProof memory"}},"id":3095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22154:11:14","memberName":"proofPoints","nodeType":"MemberAccess","referencedDeclaration":5124,"src":"22148:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_memory_ptr","typeString":"struct ProofPoints memory"}},"id":3096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22166:1:14","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":5088,"src":"22148:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"id":3097,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"22181:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawProof_$5129_memory_ptr","typeString":"struct WithdrawProof memory"}},"id":3098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22187:13:14","memberName":"publicSignals","nodeType":"MemberAccess","referencedDeclaration":5128,"src":"22181:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2] memory[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}],"expression":{"id":3086,"name":"withdrawVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"22040:16:14","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawVerifier_$4621","typeString":"contract IWithdrawVerifier"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22057:11:14","memberName":"verifyProof","nodeType":"MemberAccess","referencedDeclaration":4620,"src":"22040:28:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$16_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[16] memory) view external returns (bool)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22040:170:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"22022:188:14"},{"condition":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22224:11:14","subExpression":{"id":3101,"name":"isVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"22225:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3107,"nodeType":"IfStatement","src":"22220:63:14","trueBody":{"id":3106,"nodeType":"Block","src":"22237:46:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3103,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"22258:12:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22258:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3105,"nodeType":"RevertStatement","src":"22251:21:14"}]}},{"assignments":[3109],"declarations":[{"constant":false,"id":3109,"mutability":"mutable","name":"tokenAddress","nameLocation":"22352:12:14","nodeType":"VariableDeclaration","scope":3139,"src":"22344:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3108,"name":"address","nodeType":"ElementaryTypeName","src":"22344:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3113,"initialValue":{"baseExpression":{"id":3110,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"22367:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3112,"indexExpression":{"id":3111,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"22382:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22367:23:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22344:46:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"22404:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22428:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22420:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"22420:7:14","typeDescriptions":{}}},"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22420:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22404:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3130,"nodeType":"IfStatement","src":"22400:147:14","trueBody":{"id":3129,"nodeType":"Block","src":"22432:115:14","statements":[{"expression":{"arguments":[{"id":3121,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22468:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3122,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"22474:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3123,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"22482:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3124,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"22491:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},{"id":3125,"name":"balancePCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"22505:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":3120,"name":"_handleNativeWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"22446:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$16_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,uint256[16] memory,uint256[7] memory)"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22446:70:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3127,"nodeType":"ExpressionStatement","src":"22446:70:14"},{"functionReturnParameters":3042,"id":3128,"nodeType":"Return","src":"22530:7:14"}]}},{"expression":{"arguments":[{"id":3132,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"22619:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3133,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"22625:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3134,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"22633:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3135,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"22642:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},{"id":3136,"name":"balancePCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"22656:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":3131,"name":"_handleERC20Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"22598:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$16_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,uint256[16] memory,uint256[7] memory)"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22598:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3138,"nodeType":"ExpressionStatement","src":"22598:69:14"}]},"documentation":{"id":3023,"nodeType":"StructuredDocumentation","src":"20601:815:14","text":" @notice Withdraws encrypted tokens as regular tokens\n @param tokenId ID of the token to withdraw\n @param proof The withdraw proof proving the validity of the withdrawal\n @param balancePCT The balance PCT for the user after the withdrawal\n @dev This function:\n      1. Validates the user is registered\n      2. Verifies the user's public key matches the proof\n      3. Verifies the auditor's public key matches the proof\n      4. Verifies the zero-knowledge proof\n      5. Subtracts the encrypted amount from the user's balance\n      6. Converts the tokens to regular tokens\n Requirements:\n - Auditor must be set\n - Contract must be in converter mode\n - User must be registered\n - Proof must be valid"},"functionSelector":"a5566e25","id":3140,"implemented":true,"kind":"function","modifiers":[{"id":3035,"kind":"modifierInvocation","modifierName":{"id":3034,"name":"onlyIfAuditorSet","nameLocations":["21567:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":990,"src":"21567:16:14"},"nodeType":"ModifierInvocation","src":"21567:16:14"},{"id":3037,"kind":"modifierInvocation","modifierName":{"id":3036,"name":"onlyForConverter","nameLocations":["21592:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":1977,"src":"21592:16:14"},"nodeType":"ModifierInvocation","src":"21592:16:14"},{"arguments":[{"expression":{"id":3039,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21638:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21642:6:14","memberName":"sender","nodeType":"MemberAccess","src":"21638:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3041,"kind":"modifierInvocation","modifierName":{"id":3038,"name":"onlyIfUserRegistered","nameLocations":["21617:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":2279,"src":"21617:20:14"},"nodeType":"ModifierInvocation","src":"21617:32:14"}],"name":"withdraw","nameLocation":"21430:8:14","nodeType":"FunctionDefinition","parameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"tokenId","nameLocation":"21456:7:14","nodeType":"VariableDeclaration","scope":3140,"src":"21448:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"21448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3028,"mutability":"mutable","name":"proof","nameLocation":"21494:5:14","nodeType":"VariableDeclaration","scope":3140,"src":"21473:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawProof_$5129_memory_ptr","typeString":"struct WithdrawProof"},"typeName":{"id":3027,"nodeType":"UserDefinedTypeName","pathNode":{"id":3026,"name":"WithdrawProof","nameLocations":["21473:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":5129,"src":"21473:13:14"},"referencedDeclaration":5129,"src":"21473:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawProof_$5129_storage_ptr","typeString":"struct WithdrawProof"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"balancePCT","nameLocation":"21527:10:14","nodeType":"VariableDeclaration","scope":3140,"src":"21509:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"21509:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3031,"length":{"hexValue":"37","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21517:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"21509:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"21438:105:14"},"returnParameters":{"id":3042,"nodeType":"ParameterList","parameters":[],"src":"21654:0:14"},"scope":4438,"src":"21421:1253:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3174,"nodeType":"Block","src":"23596:98:14","statements":[{"assignments":[3164],"declarations":[{"constant":false,"id":3164,"mutability":"mutable","name":"tokenId","nameLocation":"23614:7:14","nodeType":"VariableDeclaration","scope":3174,"src":"23606:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"23606:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3168,"initialValue":{"baseExpression":{"id":3165,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"23624:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3167,"indexExpression":{"id":3166,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"23633:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23624:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23606:40:14"},{"expression":{"arguments":[{"id":3170,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"23673:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3171,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"23679:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3169,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"23663:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_EGCT_$5073_memory_ptr_$_t_uint256_$_t_array$_t_struct$_AmountPCT_$5040_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$_t_uint256_$","typeString":"function (address,uint256) view returns (struct EGCT memory,uint256,struct AmountPCT memory[] memory,uint256[7] memory,uint256)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23663:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_EGCT_$5073_memory_ptr_$_t_uint256_$_t_array$_t_struct$_AmountPCT_$5040_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$_t_uint256_$","typeString":"tuple(struct EGCT memory,uint256,struct AmountPCT memory[] memory,uint256[7] memory,uint256)"}},"functionReturnParameters":3162,"id":3173,"nodeType":"Return","src":"23656:31:14"}]},"documentation":{"id":3141,"nodeType":"StructuredDocumentation","src":"22680:578:14","text":" @notice Gets the encrypted balance for a token address\n @param user Address of the user\n @param tokenAddress Address of the token\n @return eGCT The ElGamal ciphertext representing the encrypted balance\n @return nonce The current nonce used for balance validation\n @return amountPCTs Array of amount PCTs for transaction history\n @return balancePCT The current balance PCT\n @return transactionIndex The current transaction index\n @dev This is a convenience function that looks up the token ID and calls balanceOf"},"functionSelector":"14dda7fd","id":3175,"implemented":true,"kind":"function","modifiers":[],"name":"getBalanceFromTokenAddress","nameLocation":"23272:26:14","nodeType":"FunctionDefinition","parameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"user","nameLocation":"23316:4:14","nodeType":"VariableDeclaration","scope":3175,"src":"23308:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"23308:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3145,"mutability":"mutable","name":"tokenAddress","nameLocation":"23338:12:14","nodeType":"VariableDeclaration","scope":3175,"src":"23330:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3144,"name":"address","nodeType":"ElementaryTypeName","src":"23330:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23298:58:14"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"eGCT","nameLocation":"23427:4:14","nodeType":"VariableDeclaration","scope":3175,"src":"23415:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3148,"nodeType":"UserDefinedTypeName","pathNode":{"id":3147,"name":"EGCT","nameLocations":["23415:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"23415:4:14"},"referencedDeclaration":5073,"src":"23415:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"nonce","nameLocation":"23453:5:14","nodeType":"VariableDeclaration","scope":3175,"src":"23445:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"23445:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3155,"mutability":"mutable","name":"amountPCTs","nameLocation":"23491:10:14","nodeType":"VariableDeclaration","scope":3175,"src":"23472:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_memory_ptr_$dyn_memory_ptr","typeString":"struct AmountPCT[]"},"typeName":{"baseType":{"id":3153,"nodeType":"UserDefinedTypeName","pathNode":{"id":3152,"name":"AmountPCT","nameLocations":["23472:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":5040,"src":"23472:9:14"},"referencedDeclaration":5040,"src":"23472:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_AmountPCT_$5040_storage_ptr","typeString":"struct AmountPCT"}},"id":3154,"nodeType":"ArrayTypeName","src":"23472:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr","typeString":"struct AmountPCT[]"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"balancePCT","nameLocation":"23533:10:14","nodeType":"VariableDeclaration","scope":3175,"src":"23515:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"23515:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3158,"length":{"hexValue":"37","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23523:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"23515:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"},{"constant":false,"id":3161,"mutability":"mutable","name":"transactionIndex","nameLocation":"23565:16:14","nodeType":"VariableDeclaration","scope":3175,"src":"23557:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"23557:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23401:190:14"},"scope":4438,"src":"23263:431:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3187,"nodeType":"Block","src":"23931:44:14","statements":[{"expression":{"baseExpression":{"id":3183,"name":"nativeBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"23948:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3185,"indexExpression":{"id":3184,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"23963:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23948:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3182,"id":3186,"nodeType":"Return","src":"23941:27:14"}]},"documentation":{"id":3176,"nodeType":"StructuredDocumentation","src":"23700:154:14","text":" @notice Gets the native token balance for a user\n @param user Address of the user\n @return balance The native token balance"},"functionSelector":"efd8be62","id":3188,"implemented":true,"kind":"function","modifiers":[],"name":"getNativeBalance","nameLocation":"23868:16:14","nodeType":"FunctionDefinition","parameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"user","nameLocation":"23893:4:14","nodeType":"VariableDeclaration","scope":3188,"src":"23885:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"23885:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23884:14:14"},"returnParameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3188,"src":"23922:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"23922:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23921:9:14"},"scope":4438,"src":"23859:116:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3265,"nodeType":"Block","src":"24402:655:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3199,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24420:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24424:5:14","memberName":"value","nodeType":"MemberAccess","src":"24420:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3201,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"24433:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24420:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206e617469766520746f6b656e2073656e74","id":3203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24441:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_063c73bb8fe97b142d784af4285d2334e1b8f2c7083bc7533fcd8844ef3789a5","typeString":"literal_string \"Insufficient native token sent\""},"value":"Insufficient native token sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_063c73bb8fe97b142d784af4285d2334e1b8f2c7083bc7533fcd8844ef3789a5","typeString":"literal_string \"Insufficient native token sent\""}],"id":3198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"24412:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24412:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3205,"nodeType":"ExpressionStatement","src":"24412:62:14"},{"expression":{"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3206,"name":"nativeBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"24526:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3209,"indexExpression":{"expression":{"id":3207,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24541:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24545:6:14","memberName":"sender","nodeType":"MemberAccess","src":"24541:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24526:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3210,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"24556:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24526:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3212,"nodeType":"ExpressionStatement","src":"24526:36:14"},{"assignments":[3214],"declarations":[{"constant":false,"id":3214,"mutability":"mutable","name":"dust","nameLocation":"24642:4:14","nodeType":"VariableDeclaration","scope":3265,"src":"24634:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"24634:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3215,"nodeType":"VariableDeclarationStatement","src":"24634:12:14"},{"assignments":[3217],"declarations":[{"constant":false,"id":3217,"mutability":"mutable","name":"tokenId","nameLocation":"24664:7:14","nodeType":"VariableDeclaration","scope":3265,"src":"24656:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"24656:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3218,"nodeType":"VariableDeclarationStatement","src":"24656:15:14"},{"expression":{"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3219,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"24682:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3220,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"24688:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3221,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"24681:15:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3223,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24718:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24722:6:14","memberName":"sender","nodeType":"MemberAccess","src":"24718:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3225,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"24730:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3226,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"24738:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":3222,"name":"_convertFromNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"24699:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_array$_t_uint256_$7_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,uint256,uint256[7] memory) returns (uint256,uint256)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24699:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"24681:67:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"ExpressionStatement","src":"24681:67:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3230,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24817:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24821:5:14","memberName":"value","nodeType":"MemberAccess","src":"24817:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3232,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"24829:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24817:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3247,"nodeType":"IfStatement","src":"24813:97:14","trueBody":{"id":3246,"nodeType":"Block","src":"24837:73:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3240,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24880:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24884:5:14","memberName":"value","nodeType":"MemberAccess","src":"24880:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3242,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"24892:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":3236,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24859:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24863:6:14","memberName":"sender","nodeType":"MemberAccess","src":"24859:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24851:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"24851:8:14","stateMutability":"payable","typeDescriptions":{}}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24851:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24871:8:14","memberName":"transfer","nodeType":"MemberAccess","src":"24851:28:14","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24851:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3245,"nodeType":"ExpressionStatement","src":"24851:48:14"}]}},{"eventCall":{"arguments":[{"expression":{"id":3249,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24947:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24951:6:14","memberName":"sender","nodeType":"MemberAccess","src":"24947:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3251,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"24959:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"24967:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3248,"name":"NativeDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"24933:13:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24933:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3254,"nodeType":"EmitStatement","src":"24928:47:14"},{"eventCall":{"arguments":[{"expression":{"id":3256,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24998:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25002:6:14","memberName":"sender","nodeType":"MemberAccess","src":"24998:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3258,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"25010:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3259,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"25018:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"25024:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3261,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"25033:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$2176_$","typeString":"type(enum UniversalEncryptedERC.TokenType)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25043:6:14","memberName":"NATIVE","nodeType":"MemberAccess","referencedDeclaration":2174,"src":"25033:16:14","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}],"id":3255,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"24990:7:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_TokenType_$2176_$returns$__$","typeString":"function (address,uint256,uint256,uint256,enum UniversalEncryptedERC.TokenType)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24990:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3264,"nodeType":"EmitStatement","src":"24985:65:14"}]},"documentation":{"id":3189,"nodeType":"StructuredDocumentation","src":"24150:163:14","text":" @notice Handles native token deposits\n @param amount Amount of native tokens to deposit\n @param amountPCT Amount PCT for the deposit"},"id":3266,"implemented":true,"kind":"function","modifiers":[],"name":"_handleNativeDeposit","nameLocation":"24327:20:14","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"amount","nameLocation":"24356:6:14","nodeType":"VariableDeclaration","scope":3266,"src":"24348:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"24348:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3195,"mutability":"mutable","name":"amountPCT","nameLocation":"24382:9:14","nodeType":"VariableDeclaration","scope":3266,"src":"24364:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"24364:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3194,"length":{"hexValue":"37","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24372:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"24364:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"24347:45:14"},"returnParameters":{"id":3197,"nodeType":"ParameterList","parameters":[],"src":"24402:0:14"},"scope":4438,"src":"24318:739:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3375,"nodeType":"Block","src":"25388:1057:14","statements":[{"assignments":[3280],"declarations":[{"constant":false,"id":3280,"mutability":"mutable","name":"token","nameLocation":"25405:5:14","nodeType":"VariableDeclaration","scope":3375,"src":"25398:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},"typeName":{"id":3279,"nodeType":"UserDefinedTypeName","pathNode":{"id":3278,"name":"IERC20","nameLocations":["25398:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"25398:6:14"},"referencedDeclaration":401,"src":"25398:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3284,"initialValue":{"arguments":[{"id":3282,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"25420:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3281,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"25413:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$401_$","typeString":"type(contract IERC20)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25413:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"25398:35:14"},{"assignments":[3286],"declarations":[{"constant":false,"id":3286,"mutability":"mutable","name":"dust","nameLocation":"25451:4:14","nodeType":"VariableDeclaration","scope":3375,"src":"25443:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"25443:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3287,"nodeType":"VariableDeclarationStatement","src":"25443:12:14"},{"assignments":[3289],"declarations":[{"constant":false,"id":3289,"mutability":"mutable","name":"tokenId","nameLocation":"25473:7:14","nodeType":"VariableDeclaration","scope":3375,"src":"25465:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"25465:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3290,"nodeType":"VariableDeclarationStatement","src":"25465:15:14"},{"assignments":[3292],"declarations":[{"constant":false,"id":3292,"mutability":"mutable","name":"to","nameLocation":"25498:2:14","nodeType":"VariableDeclaration","scope":3375,"src":"25490:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"25490:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3295,"initialValue":{"expression":{"id":3293,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25503:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25507:6:14","memberName":"sender","nodeType":"MemberAccess","src":"25503:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"25490:23:14"},{"assignments":[3297],"declarations":[{"constant":false,"id":3297,"mutability":"mutable","name":"balanceBefore","nameLocation":"25590:13:14","nodeType":"VariableDeclaration","scope":3375,"src":"25582:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"25582:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3305,"initialValue":{"arguments":[{"arguments":[{"id":3302,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"25630:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_UniversalEncryptedERC_$4438","typeString":"contract UniversalEncryptedERC"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniversalEncryptedERC_$4438","typeString":"contract UniversalEncryptedERC"}],"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25622:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3300,"name":"address","nodeType":"ElementaryTypeName","src":"25622:7:14","typeDescriptions":{}}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25622:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3298,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"25606:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25612:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":358,"src":"25606:15:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25606:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25582:54:14"},{"expression":{"arguments":[{"id":3309,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"25723:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"id":3310,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"25730:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3313,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"25742:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_UniversalEncryptedERC_$4438","typeString":"contract UniversalEncryptedERC"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniversalEncryptedERC_$4438","typeString":"contract UniversalEncryptedERC"}],"id":3312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25734:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3311,"name":"address","nodeType":"ElementaryTypeName","src":"25734:7:14","typeDescriptions":{}}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25734:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3315,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"25749:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3306,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"25696:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$891_$","typeString":"type(library SafeERC20)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25706:16:14","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":499,"src":"25696:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25696:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3317,"nodeType":"ExpressionStatement","src":"25696:60:14"},{"assignments":[3319],"declarations":[{"constant":false,"id":3319,"mutability":"mutable","name":"balanceAfter","nameLocation":"25832:12:14","nodeType":"VariableDeclaration","scope":3375,"src":"25824:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"25824:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3327,"initialValue":{"arguments":[{"arguments":[{"id":3324,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"25871:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_UniversalEncryptedERC_$4438","typeString":"contract UniversalEncryptedERC"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniversalEncryptedERC_$4438","typeString":"contract UniversalEncryptedERC"}],"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25863:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3322,"name":"address","nodeType":"ElementaryTypeName","src":"25863:7:14","typeDescriptions":{}}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25863:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3320,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"25847:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25853:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":358,"src":"25847:15:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25847:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25824:53:14"},{"assignments":[3329],"declarations":[{"constant":false,"id":3329,"mutability":"mutable","name":"actualTransferred","nameLocation":"25977:17:14","nodeType":"VariableDeclaration","scope":3375,"src":"25969:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"25969:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3333,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"balanceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"25997:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3331,"name":"balanceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"26012:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25997:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25969:56:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3334,"name":"actualTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"26039:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3335,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"26060:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26039:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3341,"nodeType":"IfStatement","src":"26035:81:14","trueBody":{"id":3340,"nodeType":"Block","src":"26068:48:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3337,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"26089:14:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26089:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3339,"nodeType":"RevertStatement","src":"26082:23:14"}]}},{"expression":{"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3342,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"26173:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3343,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"26179:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3344,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"26172:15:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3346,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"26208:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3347,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"26212:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3348,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"26220:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3349,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"26234:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":3345,"name":"_convertFromERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"26190:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_array$_t_uint256_$7_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,uint256,address,uint256[7] memory) returns (uint256,uint256)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26190:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"26172:72:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3352,"nodeType":"ExpressionStatement","src":"26172:72:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3353,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"26298:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26305:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26298:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3365,"nodeType":"IfStatement","src":"26294:78:14","trueBody":{"id":3364,"nodeType":"Block","src":"26308:64:14","statements":[{"expression":{"arguments":[{"id":3359,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"26345:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"id":3360,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"26352:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3361,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"26356:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3356,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"26322:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$891_$","typeString":"type(library SafeERC20)"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26332:12:14","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":472,"src":"26322:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26322:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3363,"nodeType":"ExpressionStatement","src":"26322:39:14"}]}},{"eventCall":{"arguments":[{"id":3367,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"26395:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3368,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"26399:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3369,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"26407:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3370,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"26413:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3371,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"26422:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$2176_$","typeString":"type(enum UniversalEncryptedERC.TokenType)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26432:5:14","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":2173,"src":"26422:15:14","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_TokenType_$2176","typeString":"enum UniversalEncryptedERC.TokenType"}],"id":3366,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"26387:7:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_TokenType_$2176_$returns$__$","typeString":"function (address,uint256,uint256,uint256,enum UniversalEncryptedERC.TokenType)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26387:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3374,"nodeType":"EmitStatement","src":"26382:56:14"}]},"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"25063:215:14","text":" @notice Handles ERC20 token deposits\n @param amount Amount of ERC20 tokens to deposit\n @param tokenAddress Address of the ERC20 token\n @param amountPCT Amount PCT for the deposit"},"id":3376,"implemented":true,"kind":"function","modifiers":[],"name":"_handleERC20Deposit","nameLocation":"25292:19:14","nodeType":"FunctionDefinition","parameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"amount","nameLocation":"25320:6:14","nodeType":"VariableDeclaration","scope":3376,"src":"25312:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"25312:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"tokenAddress","nameLocation":"25336:12:14","nodeType":"VariableDeclaration","scope":3376,"src":"25328:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3270,"name":"address","nodeType":"ElementaryTypeName","src":"25328:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3275,"mutability":"mutable","name":"amountPCT","nameLocation":"25368:9:14","nodeType":"VariableDeclaration","scope":3376,"src":"25350:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"25350:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3274,"length":{"hexValue":"37","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25358:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"25350:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"25311:67:14"},"returnParameters":{"id":3277,"nodeType":"ParameterList","parameters":[],"src":"25388:0:14"},"scope":4438,"src":"25283:1162:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3498,"nodeType":"Block","src":"27007:1059:14","statements":[{"assignments":[3396],"declarations":[{"constant":false,"id":3396,"mutability":"mutable","name":"providedBalance","nameLocation":"27084:15:14","nodeType":"VariableDeclaration","scope":3498,"src":"27072:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3395,"nodeType":"UserDefinedTypeName","pathNode":{"id":3394,"name":"EGCT","nameLocations":["27072:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"27072:4:14"},"referencedDeclaration":5073,"src":"27072:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"id":3415,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":3399,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"27135:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3401,"indexExpression":{"hexValue":"33","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27148:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27135:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3402,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"27155:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3404,"indexExpression":{"hexValue":"34","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27168:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27155:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3398,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"27125:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["27132:1:14","27152:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"27125:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"arguments":[{"baseExpression":{"id":3407,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"27200:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3409,"indexExpression":{"hexValue":"35","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27200:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3410,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"27220:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3412,"indexExpression":{"hexValue":"36","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27233:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27220:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3406,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"27190:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["27197:1:14","27217:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"27190:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":3397,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"27102:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EGCT_$5073_storage_ptr_$","typeString":"type(struct EGCT storage pointer)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["27121:2:14","27186:2:14"],"names":["c1","c2"],"nodeType":"FunctionCall","src":"27102:146:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"VariableDeclarationStatement","src":"27072:176:14"},{"assignments":[3418],"declarations":[{"constant":false,"id":3418,"mutability":"mutable","name":"encryptedWithdrawnAmount","nameLocation":"27311:24:14","nodeType":"VariableDeclaration","scope":3498,"src":"27299:36:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3417,"nodeType":"UserDefinedTypeName","pathNode":{"id":3416,"name":"EGCT","nameLocations":["27299:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"27299:4:14"},"referencedDeclaration":5073,"src":"27299:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"id":3431,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":3422,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"27380:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3424,"indexExpression":{"hexValue":"31","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27393:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27380:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3425,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"27400:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3427,"indexExpression":{"hexValue":"32","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27413:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27400:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3421,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"27370:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["27377:1:14","27397:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"27370:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":3429,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"27431:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3419,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"27338:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27349:7:14","memberName":"encrypt","nodeType":"MemberAccess","referencedDeclaration":4907,"src":"27338:18:14","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_uint256_$returns$_t_struct$_EGCT_$5073_memory_ptr_$","typeString":"function (struct Point memory,uint256) view returns (struct EGCT memory)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27338:109:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"VariableDeclarationStatement","src":"27299:148:14"},{"expression":{"arguments":[{"id":3433,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"27484:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3434,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"27502:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3435,"name":"providedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"27523:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":3436,"name":"encryptedWithdrawnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"27552:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":3437,"name":"balancePCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"27590:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":3432,"name":"_privateBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"27458:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_struct$_EGCT_$5073_memory_ptr_$_t_struct$_EGCT_$5073_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (address,uint256,struct EGCT memory,struct EGCT memory,uint256[7] memory)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27458:152:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3439,"nodeType":"ExpressionStatement","src":"27458:152:14"},{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3440,"name":"nativeBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"27667:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3442,"indexExpression":{"id":3441,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"27682:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27667:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3443,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"27691:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27667:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3445,"nodeType":"ExpressionStatement","src":"27667:30:14"},{"expression":{"arguments":[{"id":3451,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"27730:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3448,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"27715:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27707:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3446,"name":"address","nodeType":"ElementaryTypeName","src":"27707:8:14","stateMutability":"payable","typeDescriptions":{}}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27707:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27721:8:14","memberName":"transfer","nodeType":"MemberAccess","src":"27707:22:14","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27707:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3453,"nodeType":"ExpressionStatement","src":"27707:30:14"},{"assignments":[3459],"declarations":[{"constant":false,"id":3459,"mutability":"mutable","name":"auditorPCT","nameLocation":"27812:10:14","nodeType":"VariableDeclaration","scope":3498,"src":"27794:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"27794:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3458,"length":{"hexValue":"37","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27802:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"27794:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"id":3460,"nodeType":"VariableDeclarationStatement","src":"27794:28:14"},{"body":{"id":3482,"nodeType":"Block","src":"27880:60:14","statements":[{"expression":{"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3472,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"27894:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":3474,"indexExpression":{"id":3473,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"27905:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27894:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3475,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"27910:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3479,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"39","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27923:1:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"27927:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27923:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27910:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27894:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3481,"nodeType":"ExpressionStatement","src":"27894:35:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"27852:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3466,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"27856:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27867:6:14","memberName":"length","nodeType":"MemberAccess","src":"27856:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27852:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3483,"initializationExpression":{"assignments":[3462],"declarations":[{"constant":false,"id":3462,"mutability":"mutable","name":"i","nameLocation":"27845:1:14","nodeType":"VariableDeclaration","scope":3483,"src":"27837:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"27837:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3464,"initialValue":{"hexValue":"30","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27849:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"27837:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"27875:3:14","subExpression":{"id":3469,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"27875:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3471,"nodeType":"ExpressionStatement","src":"27875:3:14"},"nodeType":"ForStatement","src":"27832:108:14"},{"eventCall":{"arguments":[{"id":3485,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"27970:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3486,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"27976:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3487,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"27984:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3484,"name":"NativeWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"27955:14:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27955:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3489,"nodeType":"EmitStatement","src":"27950:42:14"},{"eventCall":{"arguments":[{"id":3491,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"28016:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3492,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"28022:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3493,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"28030:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3494,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"28039:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},{"id":3495,"name":"auditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"28051:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3490,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"28007:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$7_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,uint256,uint256,uint256[7] memory,address)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28007:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3497,"nodeType":"EmitStatement","src":"28002:57:14"}]},"documentation":{"id":3377,"nodeType":"StructuredDocumentation","src":"26451:355:14","text":" @notice Handles native token withdrawals\n @param from Address of the user withdrawing tokens\n @param amount Amount of native tokens to withdraw\n @param tokenId ID of the token to withdraw\n @param publicInputs Public inputs from the proof\n @param balancePCT The balance PCT for the user after the withdrawal"},"id":3499,"implemented":true,"kind":"function","modifiers":[],"name":"_handleNativeWithdraw","nameLocation":"26820:21:14","nodeType":"FunctionDefinition","parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"from","nameLocation":"26859:4:14","nodeType":"VariableDeclaration","scope":3499,"src":"26851:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3378,"name":"address","nodeType":"ElementaryTypeName","src":"26851:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3381,"mutability":"mutable","name":"amount","nameLocation":"26881:6:14","nodeType":"VariableDeclaration","scope":3499,"src":"26873:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3380,"name":"uint256","nodeType":"ElementaryTypeName","src":"26873:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"tokenId","nameLocation":"26905:7:14","nodeType":"VariableDeclaration","scope":3499,"src":"26897:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"26897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"publicInputs","nameLocation":"26941:12:14","nodeType":"VariableDeclaration","scope":3499,"src":"26922:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16]"},"typeName":{"baseType":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"26922:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3386,"length":{"hexValue":"3136","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26930:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"ArrayTypeName","src":"26922:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_storage_ptr","typeString":"uint256[16]"}},"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"balancePCT","nameLocation":"26981:10:14","nodeType":"VariableDeclaration","scope":3499,"src":"26963:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"26963:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3390,"length":{"hexValue":"37","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26971:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"26963:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"26841:156:14"},"returnParameters":{"id":3393,"nodeType":"ParameterList","parameters":[],"src":"27007:0:14"},"scope":4438,"src":"26811:1255:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"28625:1121:14","statements":[{"assignments":[3518],"declarations":[{"constant":false,"id":3518,"mutability":"mutable","name":"tokenAddress","nameLocation":"28643:12:14","nodeType":"VariableDeclaration","scope":3624,"src":"28635:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3517,"name":"address","nodeType":"ElementaryTypeName","src":"28635:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3522,"initialValue":{"baseExpression":{"id":3519,"name":"tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"28658:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3521,"indexExpression":{"id":3520,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"28673:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28658:23:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"28635:46:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"28695:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28719:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28711:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3524,"name":"address","nodeType":"ElementaryTypeName","src":"28711:7:14","typeDescriptions":{}}},"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28711:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28695:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3533,"nodeType":"IfStatement","src":"28691:78:14","trueBody":{"id":3532,"nodeType":"Block","src":"28723:46:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3529,"name":"UnknownToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"28744:12:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28744:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3531,"nodeType":"RevertStatement","src":"28737:21:14"}]}},{"assignments":[3536],"declarations":[{"constant":false,"id":3536,"mutability":"mutable","name":"providedBalance","nameLocation":"28846:15:14","nodeType":"VariableDeclaration","scope":3624,"src":"28834:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3535,"nodeType":"UserDefinedTypeName","pathNode":{"id":3534,"name":"EGCT","nameLocations":["28834:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"28834:4:14"},"referencedDeclaration":5073,"src":"28834:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"id":3555,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":3539,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"28897:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3541,"indexExpression":{"hexValue":"33","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28910:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28897:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3542,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"28917:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3544,"indexExpression":{"hexValue":"34","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28930:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28917:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3538,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"28887:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["28894:1:14","28914:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"28887:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"arguments":[{"baseExpression":{"id":3547,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"28962:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3549,"indexExpression":{"hexValue":"35","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28975:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28962:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3550,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"28982:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3552,"indexExpression":{"hexValue":"36","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28995:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28982:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3546,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"28952:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["28959:1:14","28979:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"28952:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":3537,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"28864:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EGCT_$5073_storage_ptr_$","typeString":"type(struct EGCT storage pointer)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["28883:2:14","28948:2:14"],"names":["c1","c2"],"nodeType":"FunctionCall","src":"28864:146:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"VariableDeclarationStatement","src":"28834:176:14"},{"assignments":[3558],"declarations":[{"constant":false,"id":3558,"mutability":"mutable","name":"encryptedWithdrawnAmount","nameLocation":"29073:24:14","nodeType":"VariableDeclaration","scope":3624,"src":"29061:36:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3557,"nodeType":"UserDefinedTypeName","pathNode":{"id":3556,"name":"EGCT","nameLocations":["29061:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"29061:4:14"},"referencedDeclaration":5073,"src":"29061:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"id":3571,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":3562,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"29142:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3564,"indexExpression":{"hexValue":"31","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29155:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29142:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3565,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"29162:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3567,"indexExpression":{"hexValue":"32","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29175:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29162:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3561,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"29132:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["29139:1:14","29159:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"29132:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":3569,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"29193:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3559,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"29100:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29111:7:14","memberName":"encrypt","nodeType":"MemberAccess","referencedDeclaration":4907,"src":"29100:18:14","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_uint256_$returns$_t_struct$_EGCT_$5073_memory_ptr_$","typeString":"function (struct Point memory,uint256) view returns (struct EGCT memory)"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29100:109:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"VariableDeclarationStatement","src":"29061:148:14"},{"expression":{"arguments":[{"id":3573,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"29246:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3574,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"29264:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3575,"name":"providedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"29285:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":3576,"name":"encryptedWithdrawnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"29314:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":3577,"name":"balancePCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"29352:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":3572,"name":"_privateBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"29220:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_struct$_EGCT_$5073_memory_ptr_$_t_struct$_EGCT_$5073_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (address,uint256,struct EGCT memory,struct EGCT memory,uint256[7] memory)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29220:152:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3579,"nodeType":"ExpressionStatement","src":"29220:152:14"},{"expression":{"arguments":[{"id":3581,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"29442:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3582,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"29448:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3583,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"29456:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3580,"name":"_convertToERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"29426:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29426:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3585,"nodeType":"ExpressionStatement","src":"29426:43:14"},{"assignments":[3591],"declarations":[{"constant":false,"id":3591,"mutability":"mutable","name":"auditorPCT","nameLocation":"29544:10:14","nodeType":"VariableDeclaration","scope":3624,"src":"29526:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"29526:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3590,"length":{"hexValue":"37","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29534:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"29526:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"id":3592,"nodeType":"VariableDeclarationStatement","src":"29526:28:14"},{"body":{"id":3614,"nodeType":"Block","src":"29612:60:14","statements":[{"expression":{"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3604,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"29626:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":3606,"indexExpression":{"id":3605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"29637:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29626:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3607,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"29642:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16] memory"}},"id":3611,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"39","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29655:1:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"29659:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29655:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29642:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29626:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3613,"nodeType":"ExpressionStatement","src":"29626:35:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"29584:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3598,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"29588:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29599:6:14","memberName":"length","nodeType":"MemberAccess","src":"29588:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29584:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3615,"initializationExpression":{"assignments":[3594],"declarations":[{"constant":false,"id":3594,"mutability":"mutable","name":"i","nameLocation":"29577:1:14","nodeType":"VariableDeclaration","scope":3615,"src":"29569:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"29569:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3596,"initialValue":{"hexValue":"30","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29581:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29569:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"29607:3:14","subExpression":{"id":3601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"29607:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3603,"nodeType":"ExpressionStatement","src":"29607:3:14"},"nodeType":"ForStatement","src":"29564:108:14"},{"eventCall":{"arguments":[{"id":3617,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"29696:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3618,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"29702:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3619,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"29710:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3620,"name":"auditorPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"29719:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},{"id":3621,"name":"auditor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"29731:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3616,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"29687:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$7_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,uint256,uint256,uint256[7] memory,address)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29687:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3623,"nodeType":"EmitStatement","src":"29682:57:14"}]},"documentation":{"id":3500,"nodeType":"StructuredDocumentation","src":"28072:353:14","text":" @notice Handles ERC20 token withdrawals\n @param from Address of the user withdrawing tokens\n @param amount Amount of ERC20 tokens to withdraw\n @param tokenId ID of the token to withdraw\n @param publicInputs Public inputs from the proof\n @param balancePCT The balance PCT for the user after the withdrawal"},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"_handleERC20Withdraw","nameLocation":"28439:20:14","nodeType":"FunctionDefinition","parameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"from","nameLocation":"28477:4:14","nodeType":"VariableDeclaration","scope":3625,"src":"28469:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3501,"name":"address","nodeType":"ElementaryTypeName","src":"28469:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"amount","nameLocation":"28499:6:14","nodeType":"VariableDeclaration","scope":3625,"src":"28491:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"28491:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3506,"mutability":"mutable","name":"tokenId","nameLocation":"28523:7:14","nodeType":"VariableDeclaration","scope":3625,"src":"28515:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"28515:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3510,"mutability":"mutable","name":"publicInputs","nameLocation":"28559:12:14","nodeType":"VariableDeclaration","scope":3625,"src":"28540:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16]"},"typeName":{"baseType":{"id":3507,"name":"uint256","nodeType":"ElementaryTypeName","src":"28540:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3509,"length":{"hexValue":"3136","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28548:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"ArrayTypeName","src":"28540:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_storage_ptr","typeString":"uint256[16]"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"balancePCT","nameLocation":"28599:10:14","nodeType":"VariableDeclaration","scope":3625,"src":"28581:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"28581:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3513,"length":{"hexValue":"37","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28589:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"28581:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"28459:156:14"},"returnParameters":{"id":3516,"nodeType":"ParameterList","parameters":[],"src":"28625:0:14"},"scope":4438,"src":"28430:1316:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3853,"nodeType":"Block","src":"30245:2117:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3641,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"30308:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3646,"indexExpression":{"arguments":[{"hexValue":"30","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30325:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30317:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3642,"name":"address","nodeType":"ElementaryTypeName","src":"30317:7:14","typeDescriptions":{}}},"id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30317:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30308:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30332:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30308:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3657,"nodeType":"IfStatement","src":"30304:77:14","trueBody":{"id":3656,"nodeType":"Block","src":"30335:46:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30367:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30359:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3650,"name":"address","nodeType":"ElementaryTypeName","src":"30359:7:14","typeDescriptions":{}}},"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30359:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3649,"name":"_addToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"30349:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30349:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3655,"nodeType":"ExpressionStatement","src":"30349:21:14"}]}},{"expression":{"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3658,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"30390:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3659,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"30400:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3664,"indexExpression":{"arguments":[{"hexValue":"30","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30417:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30409:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3660,"name":"address","nodeType":"ElementaryTypeName","src":"30409:7:14","typeDescriptions":{}}},"id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30409:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30400:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30390:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3666,"nodeType":"ExpressionStatement","src":"30390:30:14"},{"assignments":[3668],"declarations":[{"constant":false,"id":3668,"mutability":"mutable","name":"nativeDecimals","nameLocation":"30517:14:14","nodeType":"VariableDeclaration","scope":3853,"src":"30511:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3667,"name":"uint8","nodeType":"ElementaryTypeName","src":"30511:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3670,"initialValue":{"hexValue":"3138","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30534:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"VariableDeclarationStatement","src":"30511:25:14"},{"assignments":[3672],"declarations":[{"constant":false,"id":3672,"mutability":"mutable","name":"value","nameLocation":"30554:5:14","nodeType":"VariableDeclaration","scope":3853,"src":"30546:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"30546:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3674,"initialValue":{"id":3673,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"30562:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30546:22:14"},{"expression":{"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3675,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"30578:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30585:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30578:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3678,"nodeType":"ExpressionStatement","src":"30578:8:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"nativeDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"30657:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3680,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"30674:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"30657:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"nativeDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"30926:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3705,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"30943:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"30926:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3727,"nodeType":"IfStatement","src":"30922:179:14","trueBody":{"id":3726,"nodeType":"Block","src":"30953:148:14","statements":[{"assignments":[3708],"declarations":[{"constant":false,"id":3708,"mutability":"mutable","name":"scalingFactor","nameLocation":"30975:13:14","nodeType":"VariableDeclaration","scope":3726,"src":"30967:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3707,"name":"uint256","nodeType":"ElementaryTypeName","src":"30967:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3715,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30991:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"30998:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3711,"name":"nativeDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"31009:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"30998:25:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30997:27:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"30991:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30967:57:14"},{"expression":{"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"31038:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3717,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"31046:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3718,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"31055:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31046:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31038:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3721,"nodeType":"ExpressionStatement","src":"31038:30:14"},{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3722,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"31082:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31089:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31082:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ExpressionStatement","src":"31082:8:14"}]}},"id":3728,"nodeType":"IfStatement","src":"30653:448:14","trueBody":{"id":3703,"nodeType":"Block","src":"30684:169:14","statements":[{"assignments":[3683],"declarations":[{"constant":false,"id":3683,"mutability":"mutable","name":"scalingFactor","nameLocation":"30706:13:14","nodeType":"VariableDeclaration","scope":3703,"src":"30698:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"30698:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3690,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30722:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"nativeDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"30729:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3686,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"30746:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"30729:25:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30728:27:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"30722:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30698:57:14"},{"expression":{"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"30769:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3692,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"30777:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3693,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"30786:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30777:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30769:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3696,"nodeType":"ExpressionStatement","src":"30769:30:14"},{"expression":{"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3697,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"30813:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"30820:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3699,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"30829:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30820:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30813:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3702,"nodeType":"ExpressionStatement","src":"30813:29:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"31167:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31176:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31167:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3737,"nodeType":"IfStatement","src":"31163:63:14","trueBody":{"id":3736,"nodeType":"Block","src":"31179:47:14","statements":[{"expression":{"components":[{"id":3732,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"31201:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3733,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"31207:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31200:15:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3640,"id":3735,"nodeType":"Return","src":"31193:22:14"}]}},{"id":3848,"nodeType":"Block","src":"31274:1049:14","statements":[{"assignments":[3743],"declarations":[{"constant":false,"id":3743,"mutability":"mutable","name":"publicKey","nameLocation":"31351:9:14","nodeType":"VariableDeclaration","scope":3848,"src":"31333:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"31333:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3742,"length":{"hexValue":"32","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31341:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"31333:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":3748,"initialValue":{"arguments":[{"id":3746,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"31390:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3744,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"31363:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrar_$4491","typeString":"contract IRegistrar"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31373:16:14","memberName":"getUserPublicKey","nodeType":"MemberAccess","referencedDeclaration":4482,"src":"31363:26:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (address) view external returns (uint256[2] memory)"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31363:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"VariableDeclarationStatement","src":"31333:60:14"},{"assignments":[3751],"declarations":[{"constant":false,"id":3751,"mutability":"mutable","name":"eGCT","nameLocation":"31484:4:14","nodeType":"VariableDeclaration","scope":3848,"src":"31472:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3750,"nodeType":"UserDefinedTypeName","pathNode":{"id":3749,"name":"EGCT","nameLocations":["31472:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"31472:4:14"},"referencedDeclaration":5073,"src":"31472:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"id":3764,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":3755,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"31537:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3757,"indexExpression":{"hexValue":"30","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31547:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31537:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3758,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"31554:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3760,"indexExpression":{"hexValue":"31","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31564:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31554:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3754,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"31527:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["31534:1:14","31551:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"31527:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":3762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"31586:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3752,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"31491:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31502:7:14","memberName":"encrypt","nodeType":"MemberAccess","referencedDeclaration":4907,"src":"31491:18:14","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_uint256_$returns$_t_struct$_EGCT_$5073_memory_ptr_$","typeString":"function (struct Point memory,uint256) view returns (struct EGCT memory)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31491:114:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"VariableDeclarationStatement","src":"31472:133:14"},{"assignments":[3767],"declarations":[{"constant":false,"id":3767,"mutability":"mutable","name":"balance","nameLocation":"31690:7:14","nodeType":"VariableDeclaration","scope":3848,"src":"31665:32:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"},"typeName":{"id":3766,"nodeType":"UserDefinedTypeName","pathNode":{"id":3765,"name":"EncryptedBalance","nameLocations":["31665:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":5061,"src":"31665:16:14"},"referencedDeclaration":5061,"src":"31665:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"}},"visibility":"internal"}],"id":3773,"initialValue":{"baseExpression":{"baseExpression":{"id":3768,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"31700:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance storage ref))"}},"id":3770,"indexExpression":{"id":3769,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"31709:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31700:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance storage ref)"}},"id":3772,"indexExpression":{"id":3771,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"31713:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31700:21:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage","typeString":"struct EncryptedBalance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"31665:56:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":3774,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"31740:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":3775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31748:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"31740:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":3776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31753:2:14","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"31740:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":3777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31756:1:14","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"31740:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31761:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31740:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":3780,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"31766:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":3781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31774:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"31766:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":3782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31779:2:14","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"31766:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":3783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31782:1:14","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"31766:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31787:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31766:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31740:48:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3824,"nodeType":"Block","src":"31848:169:14","statements":[{"expression":{"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":3794,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"31866:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":3797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31874:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"31866:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":3798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"31879:2:14","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"31866:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":3801,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"31900:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":3802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31908:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"31900:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":3803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31913:2:14","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"31900:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},{"expression":{"id":3804,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"31917:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":3805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31922:2:14","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"31917:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"expression":{"id":3799,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"31884:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31895:4:14","memberName":"_add","nodeType":"MemberAccess","referencedDeclaration":4764,"src":"31884:15:14","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31884:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"31866:59:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":3808,"nodeType":"ExpressionStatement","src":"31866:59:14"},{"expression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":3809,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"31943:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":3812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31951:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"31943:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":3813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"31956:2:14","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"31943:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":3816,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"31977:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":3817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31985:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"31977:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":3818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31990:2:14","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"31977:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},{"expression":{"id":3819,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"31994:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":3820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31999:2:14","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"31994:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"expression":{"id":3814,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"31961:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31972:4:14","memberName":"_add","nodeType":"MemberAccess","referencedDeclaration":4764,"src":"31961:15:14","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31961:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"31943:59:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":3823,"nodeType":"ExpressionStatement","src":"31943:59:14"}]},"id":3825,"nodeType":"IfStatement","src":"31736:281:14","trueBody":{"id":3793,"nodeType":"Block","src":"31790:52:14","statements":[{"expression":{"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3787,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"31808:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":3789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"31816:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"31808:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3790,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"31823:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"src":"31808:19:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":3792,"nodeType":"ExpressionStatement","src":"31808:19:14"}]}},{"expression":{"arguments":[{"arguments":[{"id":3832,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"32130:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},{"expression":{"id":3833,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"32148:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":3834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32156:16:14","memberName":"transactionIndex","nodeType":"MemberAccess","referencedDeclaration":5052,"src":"32148:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3831,"name":"AmountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"32114:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AmountPCT_$5040_storage_ptr_$","typeString":"type(struct AmountPCT storage pointer)"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["32125:3:14","32141:5:14"],"names":["pct","index"],"nodeType":"FunctionCall","src":"32114:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AmountPCT_$5040_memory_ptr","typeString":"struct AmountPCT memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AmountPCT_$5040_memory_ptr","typeString":"struct AmountPCT memory"}],"expression":{"expression":{"id":3826,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"32073:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":3829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32081:10:14","memberName":"amountPCTs","nodeType":"MemberAccess","referencedDeclaration":5060,"src":"32073:18:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage","typeString":"struct AmountPCT storage ref[] storage ref"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32092:4:14","memberName":"push","nodeType":"MemberAccess","src":"32073:23:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr_$_t_struct$_AmountPCT_$5040_storage_$returns$__$attached_to$_t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr_$","typeString":"function (struct AmountPCT storage ref[] storage pointer,struct AmountPCT storage ref)"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32073:115:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3837,"nodeType":"ExpressionStatement","src":"32073:115:14"},{"expression":{"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"32202:26:14","subExpression":{"expression":{"id":3838,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"32202:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":3840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"32210:16:14","memberName":"transactionIndex","nodeType":"MemberAccess","referencedDeclaration":5052,"src":"32202:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3842,"nodeType":"ExpressionStatement","src":"32202:26:14"},{"expression":{"arguments":[{"id":3844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"32300:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3845,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"32304:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3843,"name":"_commitUserBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"32281:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32281:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3847,"nodeType":"ExpressionStatement","src":"32281:31:14"}]},{"expression":{"components":[{"id":3849,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"32341:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3850,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"32347:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32340:15:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3640,"id":3852,"nodeType":"Return","src":"32333:22:14"}]},"documentation":{"id":3626,"nodeType":"StructuredDocumentation","src":"29752:324:14","text":" @notice Converts native tokens to encrypted tokens\n @param to Address of the receiver\n @param amount Amount of native tokens to convert\n @param amountPCT Amount PCT for the conversion\n @return dust The dust (remainder) from the conversion\n @return tokenId The ID of the token"},"id":3854,"implemented":true,"kind":"function","modifiers":[],"name":"_convertFromNative","nameLocation":"30090:18:14","nodeType":"FunctionDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"to","nameLocation":"30126:2:14","nodeType":"VariableDeclaration","scope":3854,"src":"30118:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3627,"name":"address","nodeType":"ElementaryTypeName","src":"30118:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"amount","nameLocation":"30146:6:14","nodeType":"VariableDeclaration","scope":3854,"src":"30138:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"30138:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"amountPCT","nameLocation":"30180:9:14","nodeType":"VariableDeclaration","scope":3854,"src":"30162:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"30162:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3633,"length":{"hexValue":"37","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30170:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"30162:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"30108:87:14"},"returnParameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"dust","nameLocation":"30222:4:14","nodeType":"VariableDeclaration","scope":3854,"src":"30214:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"30214:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"tokenId","nameLocation":"30236:7:14","nodeType":"VariableDeclaration","scope":3854,"src":"30228:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"30228:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30213:31:14"},"scope":4438,"src":"30081:2281:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3874,"nodeType":"Block","src":"32878:153:14","statements":[{"expression":{"arguments":[{"id":3868,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"32988:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32994:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3870,"name":"encryptedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"32997:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":3871,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"33014:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":3867,"name":"_addToUserBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"32970:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_struct$_EGCT_$5073_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (address,uint256,struct EGCT memory,uint256[7] memory)"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32970:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3873,"nodeType":"ExpressionStatement","src":"32970:54:14"}]},"documentation":{"id":3855,"nodeType":"StructuredDocumentation","src":"32368:372:14","text":" @notice Performs the internal logic for a private mint\n @param user Address of the user to mint tokens to\n @param encryptedAmount The encrypted amount to mint\n @param amountPCT The amount PCT for the mint\n @dev This function:\n      1. Adds the encrypted amount to the user's balance\n      2. Emits a PrivateMint event"},"id":3875,"implemented":true,"kind":"function","modifiers":[],"name":"_privateMint","nameLocation":"32754:12:14","nodeType":"FunctionDefinition","parameters":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"user","nameLocation":"32784:4:14","nodeType":"VariableDeclaration","scope":3875,"src":"32776:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3856,"name":"address","nodeType":"ElementaryTypeName","src":"32776:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3860,"mutability":"mutable","name":"encryptedAmount","nameLocation":"32810:15:14","nodeType":"VariableDeclaration","scope":3875,"src":"32798:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3859,"nodeType":"UserDefinedTypeName","pathNode":{"id":3858,"name":"EGCT","nameLocations":["32798:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"32798:4:14"},"referencedDeclaration":5073,"src":"32798:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"amountPCT","nameLocation":"32853:9:14","nodeType":"VariableDeclaration","scope":3875,"src":"32835:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"32835:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3863,"length":{"hexValue":"37","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32843:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"32835:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"32766:102:14"},"returnParameters":{"id":3866,"nodeType":"ParameterList","parameters":[],"src":"32878:0:14"},"scope":4438,"src":"32745:286:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3919,"nodeType":"Block","src":"34229:467:14","statements":[{"id":3910,"nodeType":"Block","src":"34239:273:14","statements":[{"expression":{"arguments":[{"id":3903,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"34358:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3904,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"34380:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3905,"name":"providedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"34405:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":3906,"name":"senderEncryptedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"34438:21:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":3907,"name":"balancePCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"34477:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":3902,"name":"_privateBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"34328:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_struct$_EGCT_$5073_memory_ptr_$_t_struct$_EGCT_$5073_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (address,uint256,struct EGCT memory,struct EGCT memory,uint256[7] memory)"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34328:173:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3909,"nodeType":"ExpressionStatement","src":"34328:173:14"}]},{"id":3918,"nodeType":"Block","src":"34522:168:14","statements":[{"expression":{"arguments":[{"id":3912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"34631:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"34635:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3914,"name":"receiverEncryptedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"34644:23:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":3915,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"34669:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}],"id":3911,"name":"_addToUserBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"34613:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_struct$_EGCT_$5073_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$returns$__$","typeString":"function (address,uint256,struct EGCT memory,uint256[7] memory)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3917,"nodeType":"ExpressionStatement","src":"34613:66:14"}]}]},"documentation":{"id":3876,"nodeType":"StructuredDocumentation","src":"33037:886:14","text":" @notice Performs the internal logic for a private transfer\n @param from address The address of the sender\n @param to address The address of the receiver\n @param tokenId uint256 The ID of the token to transfer\n @param providedBalance EGCT The provided balance from the proof\n @param senderEncryptedAmount EGCT The encrypted amount to subtract from the sender's balance\n @param receiverEncryptedAmount EGCT The encrypted amount to add to the receiver's balance\n @param balancePCT uint256[7] The balance PCT for the sender after the transfer\n @param amountPCT uint256[7] The amount PCT for the transfer\n @dev This function:\n      1. Verifies the sender's balance is valid\n      2. Subtracts the encrypted amount from the sender's balance\n      3. Adds the encrypted amount to the receiver's balance"},"id":3920,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"33937:9:14","nodeType":"FunctionDefinition","parameters":{"id":3900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"from","nameLocation":"33964:4:14","nodeType":"VariableDeclaration","scope":3920,"src":"33956:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3877,"name":"address","nodeType":"ElementaryTypeName","src":"33956:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"to","nameLocation":"33986:2:14","nodeType":"VariableDeclaration","scope":3920,"src":"33978:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3879,"name":"address","nodeType":"ElementaryTypeName","src":"33978:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"tokenId","nameLocation":"34006:7:14","nodeType":"VariableDeclaration","scope":3920,"src":"33998:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"33998:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"providedBalance","nameLocation":"34035:15:14","nodeType":"VariableDeclaration","scope":3920,"src":"34023:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3884,"nodeType":"UserDefinedTypeName","pathNode":{"id":3883,"name":"EGCT","nameLocations":["34023:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"34023:4:14"},"referencedDeclaration":5073,"src":"34023:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"senderEncryptedAmount","nameLocation":"34072:21:14","nodeType":"VariableDeclaration","scope":3920,"src":"34060:33:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3887,"nodeType":"UserDefinedTypeName","pathNode":{"id":3886,"name":"EGCT","nameLocations":["34060:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"34060:4:14"},"referencedDeclaration":5073,"src":"34060:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"receiverEncryptedAmount","nameLocation":"34115:23:14","nodeType":"VariableDeclaration","scope":3920,"src":"34103:35:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3890,"nodeType":"UserDefinedTypeName","pathNode":{"id":3889,"name":"EGCT","nameLocations":["34103:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"34103:4:14"},"referencedDeclaration":5073,"src":"34103:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"balancePCT","nameLocation":"34166:10:14","nodeType":"VariableDeclaration","scope":3920,"src":"34148:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"34148:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3894,"length":{"hexValue":"37","id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34156:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"34148:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"amountPCT","nameLocation":"34204:9:14","nodeType":"VariableDeclaration","scope":3920,"src":"34186:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"34186:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3898,"length":{"hexValue":"37","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34194:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"34186:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"33946:273:14"},"returnParameters":{"id":3901,"nodeType":"ParameterList","parameters":[],"src":"34229:0:14"},"scope":4438,"src":"33928:768:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3954,"nodeType":"Block","src":"35428:388:14","statements":[{"assignments":[3939],"declarations":[{"constant":false,"id":3939,"mutability":"mutable","name":"transactionIndex","nameLocation":"35487:16:14","nodeType":"VariableDeclaration","scope":3954,"src":"35479:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"35479:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3945,"initialValue":{"arguments":[{"id":3941,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"35538:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3942,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"35556:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3943,"name":"providedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"35577:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}],"id":3940,"name":"_verifyUserBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"35506:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_struct$_EGCT_$5073_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,struct EGCT memory) view returns (uint256)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35506:96:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"35479:123:14"},{"expression":{"arguments":[{"id":3947,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"35691:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3948,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"35709:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3949,"name":"encryptedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"35730:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},{"id":3950,"name":"balancePCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"35759:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},{"id":3951,"name":"transactionIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"35783:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"},{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3946,"name":"_subtractFromUserBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"35653:24:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_struct$_EGCT_$5073_memory_ptr_$_t_array$_t_uint256_$7_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,uint256,struct EGCT memory,uint256[7] memory,uint256)"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35653:156:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3953,"nodeType":"ExpressionStatement","src":"35653:156:14"}]},"documentation":{"id":3921,"nodeType":"StructuredDocumentation","src":"34702:525:14","text":" @notice Performs the internal logic for a private burn\n @param from Address of the user to burn tokens from\n @param tokenId ID of the token to burn\n @param providedBalance The provided balance from the proof\n @param encryptedAmount The encrypted amount to subtract\n @param balancePCT The balance PCT for the user after the burn\n @dev This function:\n      1. Verifies the user's balance is valid\n      2. Subtracts the encrypted amount from the user's balance"},"id":3955,"implemented":true,"kind":"function","modifiers":[],"name":"_privateBurn","nameLocation":"35241:12:14","nodeType":"FunctionDefinition","parameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"from","nameLocation":"35271:4:14","nodeType":"VariableDeclaration","scope":3955,"src":"35263:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3922,"name":"address","nodeType":"ElementaryTypeName","src":"35263:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3925,"mutability":"mutable","name":"tokenId","nameLocation":"35293:7:14","nodeType":"VariableDeclaration","scope":3955,"src":"35285:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"35285:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3928,"mutability":"mutable","name":"providedBalance","nameLocation":"35322:15:14","nodeType":"VariableDeclaration","scope":3955,"src":"35310:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3927,"nodeType":"UserDefinedTypeName","pathNode":{"id":3926,"name":"EGCT","nameLocations":["35310:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"35310:4:14"},"referencedDeclaration":5073,"src":"35310:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"encryptedAmount","nameLocation":"35359:15:14","nodeType":"VariableDeclaration","scope":3955,"src":"35347:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":3930,"nodeType":"UserDefinedTypeName","pathNode":{"id":3929,"name":"EGCT","nameLocations":["35347:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"35347:4:14"},"referencedDeclaration":5073,"src":"35347:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":3935,"mutability":"mutable","name":"balancePCT","nameLocation":"35402:10:14","nodeType":"VariableDeclaration","scope":3955,"src":"35384:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":3932,"name":"uint256","nodeType":"ElementaryTypeName","src":"35384:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3934,"length":{"hexValue":"37","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35392:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"35384:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"35253:165:14"},"returnParameters":{"id":3937,"nodeType":"ParameterList","parameters":[],"src":"35428:0:14"},"scope":4438,"src":"35232:584:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3996,"nodeType":"Block","src":"36258:263:14","statements":[{"assignments":[3970],"declarations":[{"constant":false,"id":3970,"mutability":"mutable","name":"userPublicKey","nameLocation":"36286:13:14","nodeType":"VariableDeclaration","scope":3996,"src":"36268:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"36268:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3969,"length":{"hexValue":"32","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36276:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"36268:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":3975,"initialValue":{"arguments":[{"id":3973,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"36329:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3971,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"36302:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrar_$4491","typeString":"contract IRegistrar"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36312:16:14","memberName":"getUserPublicKey","nodeType":"MemberAccess","referencedDeclaration":4482,"src":"36302:26:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (address) view external returns (uint256[2] memory)"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36302:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"VariableDeclarationStatement","src":"36268:66:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3976,"name":"userPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"36362:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3978,"indexExpression":{"hexValue":"30","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36376:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"36362:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"id":3979,"name":"providedPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"36382:17:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3981,"indexExpression":{"hexValue":"30","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36400:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"36382:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36362:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3983,"name":"userPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"36418:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3985,"indexExpression":{"hexValue":"31","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36432:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"36418:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"id":3986,"name":"providedPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"36438:17:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3988,"indexExpression":{"hexValue":"31","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36456:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"36438:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36418:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"36362:96:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3995,"nodeType":"IfStatement","src":"36345:170:14","trueBody":{"id":3994,"nodeType":"Block","src":"36469:46:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3991,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"36490:12:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36490:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3993,"nodeType":"RevertStatement","src":"36483:21:14"}]}}]},"documentation":{"id":3956,"nodeType":"StructuredDocumentation","src":"35822:316:14","text":" @notice Validates a user's public key\n @param user The address of the user\n @param providedPublicKey The public key to validate\n @dev Function fetches the user's public key from the registrar contract\n @dev If the public key is not valid, it reverts with InvalidProof error"},"id":3997,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePublicKey","nameLocation":"36152:18:14","nodeType":"FunctionDefinition","parameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"user","nameLocation":"36188:4:14","nodeType":"VariableDeclaration","scope":3997,"src":"36180:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3957,"name":"address","nodeType":"ElementaryTypeName","src":"36180:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3962,"mutability":"mutable","name":"providedPublicKey","nameLocation":"36220:17:14","nodeType":"VariableDeclaration","scope":3997,"src":"36202:35:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"36202:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3961,"length":{"hexValue":"32","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36210:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"36202:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"36170:73:14"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[],"src":"36258:0:14"},"scope":4438,"src":"36143:378:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4023,"nodeType":"Block","src":"36861:190:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4005,"name":"auditorPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"36888:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":4006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"36905:1:14","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"36888:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"id":4007,"name":"providedPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"36910:17:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":4009,"indexExpression":{"hexValue":"30","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36928:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"36910:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36888:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4011,"name":"auditorPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"36946:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":4012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"36963:1:14","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"36946:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"id":4013,"name":"providedPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"36968:17:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":4015,"indexExpression":{"hexValue":"31","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"36968:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36946:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"36888:100:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4022,"nodeType":"IfStatement","src":"36871:174:14","trueBody":{"id":4021,"nodeType":"Block","src":"36999:46:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4018,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"37020:12:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37020:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4020,"nodeType":"RevertStatement","src":"37013:21:14"}]}}]},"documentation":{"id":3998,"nodeType":"StructuredDocumentation","src":"36527:229:14","text":" @notice Validates the auditor's public key\n @param providedPublicKey The public key to validate\n @dev If the public key is not match with the auditor's public key, it reverts with InvalidProof error"},"id":4024,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAuditorPublicKey","nameLocation":"36770:25:14","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"providedPublicKey","nameLocation":"36823:17:14","nodeType":"VariableDeclaration","scope":4024,"src":"36805:35:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3999,"name":"uint256","nodeType":"ElementaryTypeName","src":"36805:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4001,"length":{"hexValue":"32","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36813:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"36805:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"36795:51:14"},"returnParameters":{"id":4004,"nodeType":"ParameterList","parameters":[],"src":"36861:0:14"},"scope":4438,"src":"36761:290:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4128,"nodeType":"Block","src":"37726:620:14","statements":[{"expression":{"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4035,"name":"transferInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"37736:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_memory_ptr","typeString":"struct TransferInputs memory"}},"id":4037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"37751:15:14","memberName":"providedBalance","nodeType":"MemberAccess","referencedDeclaration":5132,"src":"37736:30:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":4040,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"37802:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4042,"indexExpression":{"hexValue":"32","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37808:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"37802:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4043,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"37815:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4045,"indexExpression":{"hexValue":"33","id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37821:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"37815:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4039,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"37792:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["37799:1:14","37812:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"37792:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"arguments":[{"baseExpression":{"id":4048,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"37853:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4050,"indexExpression":{"hexValue":"34","id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37859:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"37853:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4051,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"37866:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4053,"indexExpression":{"hexValue":"35","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37872:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"37866:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4047,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"37843:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["37850:1:14","37863:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"37843:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":4038,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"37769:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EGCT_$5073_storage_ptr_$","typeString":"type(struct EGCT storage pointer)"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["37788:2:14","37839:2:14"],"names":["c1","c2"],"nodeType":"FunctionCall","src":"37769:118:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"src":"37736:151:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":4057,"nodeType":"ExpressionStatement","src":"37736:151:14"},{"expression":{"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4058,"name":"transferInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"37898:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_memory_ptr","typeString":"struct TransferInputs memory"}},"id":4060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"37913:21:14","memberName":"senderEncryptedAmount","nodeType":"MemberAccess","referencedDeclaration":5135,"src":"37898:36:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":4063,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"37970:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4065,"indexExpression":{"hexValue":"36","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37976:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"37970:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4066,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"37983:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4068,"indexExpression":{"hexValue":"37","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37989:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"37983:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4062,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"37960:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["37967:1:14","37980:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"37960:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"arguments":[{"baseExpression":{"id":4071,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"38021:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4073,"indexExpression":{"hexValue":"38","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38027:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"38021:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4074,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"38034:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4076,"indexExpression":{"hexValue":"39","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38040:1:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"38034:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4070,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"38011:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["38018:1:14","38031:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"38011:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":4061,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"37937:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EGCT_$5073_storage_ptr_$","typeString":"type(struct EGCT storage pointer)"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["37956:2:14","38007:2:14"],"names":["c1","c2"],"nodeType":"FunctionCall","src":"37937:118:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"src":"37898:157:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":4080,"nodeType":"ExpressionStatement","src":"37898:157:14"},{"expression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4081,"name":"transferInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"38066:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_memory_ptr","typeString":"struct TransferInputs memory"}},"id":4083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"38081:23:14","memberName":"receiverEncryptedAmount","nodeType":"MemberAccess","referencedDeclaration":5138,"src":"38066:38:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":4086,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"38140:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4088,"indexExpression":{"hexValue":"3132","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38146:2:14","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"38140:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4089,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"38154:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4091,"indexExpression":{"hexValue":"3133","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38160:2:14","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"38154:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4085,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"38130:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["38137:1:14","38151:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"38130:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"arguments":[{"baseExpression":{"id":4094,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"38193:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4096,"indexExpression":{"hexValue":"3134","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38199:2:14","typeDescriptions":{"typeIdentifier":"t_rational_14_by_1","typeString":"int_const 14"},"value":"14"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"38193:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4097,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"38207:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4099,"indexExpression":{"hexValue":"3135","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38213:2:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"38207:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4093,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"38183:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["38190:1:14","38204:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"38183:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":4084,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"38107:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EGCT_$5073_storage_ptr_$","typeString":"type(struct EGCT storage pointer)"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["38126:2:14","38179:2:14"],"names":["c1","c2"],"nodeType":"FunctionCall","src":"38107:122:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"src":"38066:163:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":4103,"nodeType":"ExpressionStatement","src":"38066:163:14"},{"body":{"id":4126,"nodeType":"Block","src":"38272:68:14","statements":[{"expression":{"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4114,"name":"transferInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"38286:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_memory_ptr","typeString":"struct TransferInputs memory"}},"id":4117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"38301:9:14","memberName":"amountPCT","nodeType":"MemberAccess","referencedDeclaration":5142,"src":"38286:24:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":4118,"indexExpression":{"id":4116,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"38311:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"38286:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4119,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"38316:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32] memory"}},"id":4123,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38322:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"38327:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38322:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"38316:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38286:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4125,"nodeType":"ExpressionStatement","src":"38286:43:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"38260:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"37","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38264:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"38260:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4127,"initializationExpression":{"assignments":[4105],"declarations":[{"constant":false,"id":4105,"mutability":"mutable","name":"i","nameLocation":"38253:1:14","nodeType":"VariableDeclaration","scope":4127,"src":"38245:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"38245:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4107,"initialValue":{"hexValue":"30","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38257:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"38245:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"38267:3:14","subExpression":{"id":4111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"38267:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4113,"nodeType":"ExpressionStatement","src":"38267:3:14"},"nodeType":"ForStatement","src":"38240:100:14"}]},"documentation":{"id":4025,"nodeType":"StructuredDocumentation","src":"37057:531:14","text":" @notice Extracts the inputs for a transfer operation\n @param input The input array containing the transfer data\n @return transferInputs TransferInputs struct containing:\n         - providedBalance (EGCT): The provided balance from the proof\n         - senderEncryptedAmount (EGCT): The encrypted amount to subtract from sender\n         - receiverEncryptedAmount (EGCT): The encrypted amount to add to receiver\n         - amountPCT (uint256[7]): The amount PCT for the transfer"},"id":4129,"implemented":true,"kind":"function","modifiers":[],"name":"_extractTransferInputs","nameLocation":"37602:22:14","nodeType":"FunctionDefinition","parameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"input","nameLocation":"37653:5:14","nodeType":"VariableDeclaration","scope":4129,"src":"37634:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32]"},"typeName":{"baseType":{"id":4026,"name":"uint256","nodeType":"ElementaryTypeName","src":"37634:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4028,"length":{"hexValue":"3332","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37642:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"ArrayTypeName","src":"37634:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_storage_ptr","typeString":"uint256[32]"}},"visibility":"internal"}],"src":"37624:40:14"},"returnParameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"transferInputs","nameLocation":"37710:14:14","nodeType":"VariableDeclaration","scope":4129,"src":"37688:36:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_memory_ptr","typeString":"struct TransferInputs"},"typeName":{"id":4032,"nodeType":"UserDefinedTypeName","pathNode":{"id":4031,"name":"TransferInputs","nameLocations":["37688:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":5143,"src":"37688:14:14"},"referencedDeclaration":5143,"src":"37688:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_TransferInputs_$5143_storage_ptr","typeString":"struct TransferInputs"}},"visibility":"internal"}],"src":"37687:38:14"},"scope":4438,"src":"37593:753:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4354,"nodeType":"Block","src":"38933:2104:14","statements":[{"assignments":[4148],"declarations":[{"constant":false,"id":4148,"mutability":"mutable","name":"tokenDecimals","nameLocation":"38998:13:14","nodeType":"VariableDeclaration","scope":4354,"src":"38992:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4147,"name":"uint8","nodeType":"ElementaryTypeName","src":"38992:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4154,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4150,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"39029:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4149,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"39014:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$427_$","typeString":"type(contract IERC20Metadata)"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39014:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$427","typeString":"contract IERC20Metadata"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39043:8:14","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":426,"src":"39014:37:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39014:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"38992:61:14"},{"assignments":[4156],"declarations":[{"constant":false,"id":4156,"mutability":"mutable","name":"value","nameLocation":"39072:5:14","nodeType":"VariableDeclaration","scope":4354,"src":"39064:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4155,"name":"uint256","nodeType":"ElementaryTypeName","src":"39064:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4158,"initialValue":{"id":4157,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"39080:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"39064:22:14"},{"expression":{"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4159,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"39096:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39103:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"39096:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4162,"nodeType":"ExpressionStatement","src":"39096:8:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4163,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"39168:13:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4164,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"39184:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"39168:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4188,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"39428:13:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4189,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"39444:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"39428:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4211,"nodeType":"IfStatement","src":"39424:177:14","trueBody":{"id":4210,"nodeType":"Block","src":"39454:147:14","statements":[{"assignments":[4192],"declarations":[{"constant":false,"id":4192,"mutability":"mutable","name":"scalingFactor","nameLocation":"39476:13:14","nodeType":"VariableDeclaration","scope":4210,"src":"39468:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"39468:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4199,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39492:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"39499:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4195,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"39510:13:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"39499:24:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"39498:26:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"39492:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"39468:56:14"},{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"39538:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"39546:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4202,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"39555:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39546:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39538:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4205,"nodeType":"ExpressionStatement","src":"39538:30:14"},{"expression":{"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4206,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"39582:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39589:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"39582:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4209,"nodeType":"ExpressionStatement","src":"39582:8:14"}]}},"id":4212,"nodeType":"IfStatement","src":"39164:437:14","trueBody":{"id":4187,"nodeType":"Block","src":"39194:168:14","statements":[{"assignments":[4167],"declarations":[{"constant":false,"id":4167,"mutability":"mutable","name":"scalingFactor","nameLocation":"39216:13:14","nodeType":"VariableDeclaration","scope":4187,"src":"39208:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"39208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4174,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39232:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4169,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"39239:13:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4170,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"39255:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"39239:24:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"39238:26:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"39232:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"39208:56:14"},{"expression":{"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"39278:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"39286:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4177,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"39295:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39286:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39278:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4180,"nodeType":"ExpressionStatement","src":"39278:30:14"},{"expression":{"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4181,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"39322:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4182,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"39329:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4183,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"39338:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39329:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39322:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4186,"nodeType":"ExpressionStatement","src":"39322:29:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4213,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"39657:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4215,"indexExpression":{"id":4214,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"39666:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"39657:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39683:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"39657:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4223,"nodeType":"IfStatement","src":"39653:81:14","trueBody":{"id":4222,"nodeType":"Block","src":"39686:48:14","statements":[{"expression":{"arguments":[{"id":4219,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"39710:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4218,"name":"_addToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"39700:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39700:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4221,"nodeType":"ExpressionStatement","src":"39700:23:14"}]}},{"expression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4224,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"39743:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4225,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"39753:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4227,"indexExpression":{"id":4226,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"39762:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"39753:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39743:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4229,"nodeType":"ExpressionStatement","src":"39743:32:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"39842:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39851:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"39842:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"IfStatement","src":"39838:63:14","trueBody":{"id":4237,"nodeType":"Block","src":"39854:47:14","statements":[{"expression":{"components":[{"id":4233,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"39876:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4234,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"39882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"39875:15:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":4146,"id":4236,"nodeType":"Return","src":"39868:22:14"}]}},{"id":4349,"nodeType":"Block","src":"39949:1049:14","statements":[{"assignments":[4244],"declarations":[{"constant":false,"id":4244,"mutability":"mutable","name":"publicKey","nameLocation":"40026:9:14","nodeType":"VariableDeclaration","scope":4349,"src":"40008:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"40008:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4243,"length":{"hexValue":"32","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40016:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"40008:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":4249,"initialValue":{"arguments":[{"id":4247,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"40065:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4245,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"40038:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistrar_$4491","typeString":"contract IRegistrar"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40048:16:14","memberName":"getUserPublicKey","nodeType":"MemberAccess","referencedDeclaration":4482,"src":"40038:26:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (address) view external returns (uint256[2] memory)"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40038:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"VariableDeclarationStatement","src":"40008:60:14"},{"assignments":[4252],"declarations":[{"constant":false,"id":4252,"mutability":"mutable","name":"eGCT","nameLocation":"40159:4:14","nodeType":"VariableDeclaration","scope":4349,"src":"40147:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":4251,"nodeType":"UserDefinedTypeName","pathNode":{"id":4250,"name":"EGCT","nameLocations":["40147:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"40147:4:14"},"referencedDeclaration":5073,"src":"40147:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"id":4265,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":4256,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"40212:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":4258,"indexExpression":{"hexValue":"30","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40222:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"40212:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4259,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"40229:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":4261,"indexExpression":{"hexValue":"31","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40239:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"40229:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4255,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"40202:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["40209:1:14","40226:1:14"],"names":["x","y"],"nodeType":"FunctionCall","src":"40202:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":4263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"40261:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4253,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"40166:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40177:7:14","memberName":"encrypt","nodeType":"MemberAccess","referencedDeclaration":4907,"src":"40166:18:14","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_uint256_$returns$_t_struct$_EGCT_$5073_memory_ptr_$","typeString":"function (struct Point memory,uint256) view returns (struct EGCT memory)"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40166:114:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"nodeType":"VariableDeclarationStatement","src":"40147:133:14"},{"assignments":[4268],"declarations":[{"constant":false,"id":4268,"mutability":"mutable","name":"balance","nameLocation":"40365:7:14","nodeType":"VariableDeclaration","scope":4349,"src":"40340:32:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"},"typeName":{"id":4267,"nodeType":"UserDefinedTypeName","pathNode":{"id":4266,"name":"EncryptedBalance","nameLocations":["40340:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":5061,"src":"40340:16:14"},"referencedDeclaration":5061,"src":"40340:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance"}},"visibility":"internal"}],"id":4274,"initialValue":{"baseExpression":{"baseExpression":{"id":4269,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"40375:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct EncryptedBalance storage ref))"}},"id":4271,"indexExpression":{"id":4270,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"40384:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"40375:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EncryptedBalance_$5061_storage_$","typeString":"mapping(uint256 => struct EncryptedBalance storage ref)"}},"id":4273,"indexExpression":{"id":4272,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"40388:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"40375:21:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage","typeString":"struct EncryptedBalance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"40340:56:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":4275,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"40415:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":4276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40423:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"40415:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":4277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40428:2:14","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"40415:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":4278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40431:1:14","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"40415:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40436:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"40415:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":4281,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"40441:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":4282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40449:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"40441:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":4283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40454:2:14","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"40441:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":4284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40457:1:14","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"40441:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40462:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"40441:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"40415:48:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4325,"nodeType":"Block","src":"40523:169:14","statements":[{"expression":{"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":4295,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"40541:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":4298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40549:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"40541:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":4299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"40554:2:14","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"40541:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":4302,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"40575:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":4303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40583:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"40575:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":4304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40588:2:14","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"40575:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},{"expression":{"id":4305,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"40592:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":4306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40597:2:14","memberName":"c1","nodeType":"MemberAccess","referencedDeclaration":5069,"src":"40592:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"expression":{"id":4300,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"40559:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40570:4:14","memberName":"_add","nodeType":"MemberAccess","referencedDeclaration":4764,"src":"40559:15:14","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40559:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"40541:59:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":4309,"nodeType":"ExpressionStatement","src":"40541:59:14"},{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":4310,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"40618:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":4313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40626:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"40618:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":4314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"40631:2:14","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"40618:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":4317,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"40652:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":4318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40660:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"40652:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":4319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40665:2:14","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"40652:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},{"expression":{"id":4320,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"40669:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"id":4321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40674:2:14","memberName":"c2","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"40669:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"expression":{"id":4315,"name":"BabyJubJub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"40636:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BabyJubJub_$5007_$","typeString":"type(library BabyJubJub)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40647:4:14","memberName":"_add","nodeType":"MemberAccess","referencedDeclaration":4764,"src":"40636:15:14","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40636:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"40618:59:14","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage","typeString":"struct Point storage ref"}},"id":4324,"nodeType":"ExpressionStatement","src":"40618:59:14"}]},"id":4326,"nodeType":"IfStatement","src":"40411:281:14","trueBody":{"id":4294,"nodeType":"Block","src":"40465:52:14","statements":[{"expression":{"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4288,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"40483:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":4290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"40491:4:14","memberName":"eGCT","nodeType":"MemberAccess","referencedDeclaration":5043,"src":"40483:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4291,"name":"eGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"40498:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"src":"40483:19:14","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage","typeString":"struct EGCT storage ref"}},"id":4293,"nodeType":"ExpressionStatement","src":"40483:19:14"}]}},{"expression":{"arguments":[{"arguments":[{"id":4333,"name":"amountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"40805:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},{"expression":{"id":4334,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"40823:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":4335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40831:16:14","memberName":"transactionIndex","nodeType":"MemberAccess","referencedDeclaration":5052,"src":"40823:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4332,"name":"AmountPCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"40789:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AmountPCT_$5040_storage_ptr_$","typeString":"type(struct AmountPCT storage pointer)"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["40800:3:14","40816:5:14"],"names":["pct","index"],"nodeType":"FunctionCall","src":"40789:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AmountPCT_$5040_memory_ptr","typeString":"struct AmountPCT memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AmountPCT_$5040_memory_ptr","typeString":"struct AmountPCT memory"}],"expression":{"expression":{"id":4327,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"40748:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":4330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"40756:10:14","memberName":"amountPCTs","nodeType":"MemberAccess","referencedDeclaration":5060,"src":"40748:18:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage","typeString":"struct AmountPCT storage ref[] storage ref"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40767:4:14","memberName":"push","nodeType":"MemberAccess","src":"40748:23:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr_$_t_struct$_AmountPCT_$5040_storage_$returns$__$attached_to$_t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr_$","typeString":"function (struct AmountPCT storage ref[] storage pointer,struct AmountPCT storage ref)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40748:115:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4338,"nodeType":"ExpressionStatement","src":"40748:115:14"},{"expression":{"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"40877:26:14","subExpression":{"expression":{"id":4339,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"40877:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_EncryptedBalance_$5061_storage_ptr","typeString":"struct EncryptedBalance storage pointer"}},"id":4341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"40885:16:14","memberName":"transactionIndex","nodeType":"MemberAccess","referencedDeclaration":5052,"src":"40877:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4343,"nodeType":"ExpressionStatement","src":"40877:26:14"},{"expression":{"arguments":[{"id":4345,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"40975:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4346,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"40979:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4344,"name":"_commitUserBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"40956:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40956:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4348,"nodeType":"ExpressionStatement","src":"40956:31:14"}]},{"expression":{"components":[{"id":4350,"name":"dust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"41016:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4351,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"41022:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"41015:15:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":4146,"id":4353,"nodeType":"Return","src":"41008:22:14"}]},"documentation":{"id":4130,"nodeType":"StructuredDocumentation","src":"38352:383:14","text":" @notice Converts regular ERC20 tokens to encrypted tokens\n @param to Address of the receiver\n @param amount Amount of tokens to convert\n @param tokenAddress Address of the token to convert\n @param amountPCT Amount PCT for the conversion\n @return dust The dust (remainder) from the conversion\n @return tokenId The ID of the token"},"id":4355,"implemented":true,"kind":"function","modifiers":[],"name":"_convertFromERC20","nameLocation":"38749:17:14","nodeType":"FunctionDefinition","parameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"mutability":"mutable","name":"to","nameLocation":"38784:2:14","nodeType":"VariableDeclaration","scope":4355,"src":"38776:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4131,"name":"address","nodeType":"ElementaryTypeName","src":"38776:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4134,"mutability":"mutable","name":"amount","nameLocation":"38804:6:14","nodeType":"VariableDeclaration","scope":4355,"src":"38796:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"38796:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"tokenAddress","nameLocation":"38828:12:14","nodeType":"VariableDeclaration","scope":4355,"src":"38820:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4135,"name":"address","nodeType":"ElementaryTypeName","src":"38820:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4140,"mutability":"mutable","name":"amountPCT","nameLocation":"38868:9:14","nodeType":"VariableDeclaration","scope":4355,"src":"38850:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"38850:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4139,"length":{"hexValue":"37","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38858:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"38850:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"38766:117:14"},"returnParameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"dust","nameLocation":"38910:4:14","nodeType":"VariableDeclaration","scope":4355,"src":"38902:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"38902:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4145,"mutability":"mutable","name":"tokenId","nameLocation":"38924:7:14","nodeType":"VariableDeclaration","scope":4355,"src":"38916:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"38916:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38901:31:14"},"scope":4438,"src":"38740:2297:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4436,"nodeType":"Block","src":"41390:755:14","statements":[{"assignments":[4366],"declarations":[{"constant":false,"id":4366,"mutability":"mutable","name":"tokenDecimals","nameLocation":"41457:13:14","nodeType":"VariableDeclaration","scope":4436,"src":"41449:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"41449:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4372,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4368,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"41488:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4367,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"41473:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$427_$","typeString":"type(contract IERC20Metadata)"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41473:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$427","typeString":"contract IERC20Metadata"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"41502:8:14","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":426,"src":"41473:37:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41473:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"41449:63:14"},{"assignments":[4374],"declarations":[{"constant":false,"id":4374,"mutability":"mutable","name":"value","nameLocation":"41531:5:14","nodeType":"VariableDeclaration","scope":4436,"src":"41523:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4373,"name":"uint256","nodeType":"ElementaryTypeName","src":"41523:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4376,"initialValue":{"id":4375,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"41539:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"41523:22:14"},{"assignments":[4378],"declarations":[{"constant":false,"id":4378,"mutability":"mutable","name":"scalingFactor","nameLocation":"41563:13:14","nodeType":"VariableDeclaration","scope":4436,"src":"41555:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4377,"name":"uint256","nodeType":"ElementaryTypeName","src":"41555:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4380,"initialValue":{"hexValue":"30","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41579:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"41555:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4381,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"41642:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4382,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"41658:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"41642:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4400,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"41853:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4401,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"41869:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"41853:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4419,"nodeType":"IfStatement","src":"41849:147:14","trueBody":{"id":4418,"nodeType":"Block","src":"41879:117:14","statements":[{"expression":{"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4403,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"41893:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41909:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4405,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"41916:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4406,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"41927:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41916:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"41915:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41909:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41893:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4411,"nodeType":"ExpressionStatement","src":"41893:48:14"},{"expression":{"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"41955:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4413,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"41963:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4414,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"41972:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41963:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41955:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4417,"nodeType":"ExpressionStatement","src":"41955:30:14"}]}},"id":4420,"nodeType":"IfStatement","src":"41638:358:14","trueBody":{"id":4399,"nodeType":"Block","src":"41668:117:14","statements":[{"expression":{"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4384,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"41682:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41698:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4386,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"41705:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4387,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"41721:8:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"41705:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"41704:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41698:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41682:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4392,"nodeType":"ExpressionStatement","src":"41682:48:14"},{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"41744:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"41752:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4395,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"41761:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41752:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41744:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"41744:30:14"}]}},{"assignments":[4423],"declarations":[{"constant":false,"id":4423,"mutability":"mutable","name":"token","nameLocation":"42060:5:14","nodeType":"VariableDeclaration","scope":4436,"src":"42053:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},"typeName":{"id":4422,"nodeType":"UserDefinedTypeName","pathNode":{"id":4421,"name":"IERC20","nameLocations":["42053:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":401,"src":"42053:6:14"},"referencedDeclaration":401,"src":"42053:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"visibility":"internal"}],"id":4427,"initialValue":{"arguments":[{"id":4425,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"42075:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4424,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"42068:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$401_$","typeString":"type(contract IERC20)"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42068:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"42053:35:14"},{"expression":{"arguments":[{"id":4431,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"42121:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"}},{"id":4432,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"42128:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"42132:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$401","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4428,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"42098:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$891_$","typeString":"type(library SafeERC20)"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"42108:12:14","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":472,"src":"42098:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$401_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42098:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4435,"nodeType":"ExpressionStatement","src":"42098:40:14"}]},"documentation":{"id":4356,"nodeType":"StructuredDocumentation","src":"41043:228:14","text":" @notice Converts encrypted tokens to regular ERC20 tokens\n @param to Address of the receiver\n @param amount Amount of tokens to convert\n @param tokenAddress Address of the token to convert to"},"id":4437,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToERC20","nameLocation":"41285:15:14","nodeType":"FunctionDefinition","parameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"to","nameLocation":"41318:2:14","nodeType":"VariableDeclaration","scope":4437,"src":"41310:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4357,"name":"address","nodeType":"ElementaryTypeName","src":"41310:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4360,"mutability":"mutable","name":"amount","nameLocation":"41338:6:14","nodeType":"VariableDeclaration","scope":4437,"src":"41330:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"41330:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4362,"mutability":"mutable","name":"tokenAddress","nameLocation":"41362:12:14","nodeType":"VariableDeclaration","scope":4437,"src":"41354:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4361,"name":"address","nodeType":"ElementaryTypeName","src":"41354:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41300:80:14"},"returnParameters":{"id":4364,"nodeType":"ParameterList","parameters":[],"src":"41390:0:14"},"scope":4438,"src":"41276:869:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4439,"src":"2840:39307:14","usedErrors":[13,18,439,4444,4450,4452,4454,4456,4458,4460,4466],"usedEvents":[24,162,962,2187,2198,2211,2225,2240,2249,2258]}],"src":"32:42116:14"},"id":14},"contracts/errors/Errors.sol":{"ast":{"absolutePath":"contracts/errors/Errors.sol","exportedSymbols":{"AuditorKeyNotSet":[4448],"InvalidChainId":[4458],"InvalidNullifier":[4460],"InvalidOperation":[4452],"InvalidProof":[4450],"InvalidRegistrationHash":[4464],"InvalidSender":[4462],"TokenBlacklisted":[4470],"TransferFailed":[4454],"UnauthorizedAccess":[4446],"UnknownToken":[4456],"UserAlreadyRegistered":[4442],"UserNotRegistered":[4444],"ZeroAddress":[4466]},"id":4471,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":4440,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:15"},{"errorSelector":"9e4a65f6","id":4442,"name":"UserAlreadyRegistered","nameLocation":"165:21:15","nodeType":"ErrorDefinition","parameters":{"id":4441,"nodeType":"ParameterList","parameters":[],"src":"186:2:15"},"src":"159:30:15"},{"errorSelector":"2163950f","id":4444,"name":"UserNotRegistered","nameLocation":"196:17:15","nodeType":"ErrorDefinition","parameters":{"id":4443,"nodeType":"ParameterList","parameters":[],"src":"213:2:15"},"src":"190:26:15"},{"errorSelector":"344fd586","id":4446,"name":"UnauthorizedAccess","nameLocation":"223:18:15","nodeType":"ErrorDefinition","parameters":{"id":4445,"nodeType":"ParameterList","parameters":[],"src":"241:2:15"},"src":"217:27:15"},{"errorSelector":"6ed668d7","id":4448,"name":"AuditorKeyNotSet","nameLocation":"251:16:15","nodeType":"ErrorDefinition","parameters":{"id":4447,"nodeType":"ParameterList","parameters":[],"src":"267:2:15"},"src":"245:25:15"},{"errorSelector":"09bde339","id":4450,"name":"InvalidProof","nameLocation":"277:12:15","nodeType":"ErrorDefinition","parameters":{"id":4449,"nodeType":"ParameterList","parameters":[],"src":"289:2:15"},"src":"271:21:15"},{"errorSelector":"398d4d32","id":4452,"name":"InvalidOperation","nameLocation":"299:16:15","nodeType":"ErrorDefinition","parameters":{"id":4451,"nodeType":"ParameterList","parameters":[],"src":"315:2:15"},"src":"293:25:15"},{"errorSelector":"90b8ec18","id":4454,"name":"TransferFailed","nameLocation":"325:14:15","nodeType":"ErrorDefinition","parameters":{"id":4453,"nodeType":"ParameterList","parameters":[],"src":"339:2:15"},"src":"319:23:15"},{"errorSelector":"8698bf37","id":4456,"name":"UnknownToken","nameLocation":"349:12:15","nodeType":"ErrorDefinition","parameters":{"id":4455,"nodeType":"ParameterList","parameters":[],"src":"361:2:15"},"src":"343:21:15"},{"errorSelector":"7a47c9a2","id":4458,"name":"InvalidChainId","nameLocation":"371:14:15","nodeType":"ErrorDefinition","parameters":{"id":4457,"nodeType":"ParameterList","parameters":[],"src":"385:2:15"},"src":"365:23:15"},{"errorSelector":"5d904cb2","id":4460,"name":"InvalidNullifier","nameLocation":"395:16:15","nodeType":"ErrorDefinition","parameters":{"id":4459,"nodeType":"ParameterList","parameters":[],"src":"411:2:15"},"src":"389:25:15"},{"errorSelector":"ddb5de5e","id":4462,"name":"InvalidSender","nameLocation":"421:13:15","nodeType":"ErrorDefinition","parameters":{"id":4461,"nodeType":"ParameterList","parameters":[],"src":"434:2:15"},"src":"415:22:15"},{"errorSelector":"8c45c0ad","id":4464,"name":"InvalidRegistrationHash","nameLocation":"444:23:15","nodeType":"ErrorDefinition","parameters":{"id":4463,"nodeType":"ParameterList","parameters":[],"src":"467:2:15"},"src":"438:32:15"},{"errorSelector":"d92e233d","id":4466,"name":"ZeroAddress","nameLocation":"477:11:15","nodeType":"ErrorDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[],"src":"488:2:15"},"src":"471:20:15"},{"errorSelector":"75519c51","id":4470,"name":"TokenBlacklisted","nameLocation":"498:16:15","nodeType":"ErrorDefinition","parameters":{"id":4469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4468,"mutability":"mutable","name":"token","nameLocation":"523:5:15","nodeType":"VariableDeclaration","scope":4470,"src":"515:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4467,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"514:15:15"},"src":"492:38:15"}],"src":"134:397:15"},"id":15},"contracts/interfaces/IRegistrar.sol":{"ast":{"absolutePath":"contracts/interfaces/IRegistrar.sol","exportedSymbols":{"IRegistrar":[4491]},"id":4492,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":4472,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IRegistrar","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4491,"linearizedBaseContracts":[4491],"name":"IRegistrar","nameLocation":"169:10:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4473,"nodeType":"StructuredDocumentation","src":"186:184:16","text":" @dev Returns the public key of a user.\n @param user Address of the user.\n @return publicKey The public key of the user as an array of two uint256 values."},"functionSelector":"11231fe0","id":4482,"implemented":false,"kind":"function","modifiers":[],"name":"getUserPublicKey","nameLocation":"384:16:16","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"user","nameLocation":"418:4:16","nodeType":"VariableDeclaration","scope":4482,"src":"410:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4474,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"400:28:16"},"returnParameters":{"id":4481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"publicKey","nameLocation":"470:9:16","nodeType":"VariableDeclaration","scope":4482,"src":"452:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4479,"length":{"hexValue":"32","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"460:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"452:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"451:29:16"},"scope":4491,"src":"375:106:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4483,"nodeType":"StructuredDocumentation","src":"487:180:16","text":" @dev Returns true if the user is registered.\n @param user Address of the user.\n @return isRegistered True if the user is registered, false otherwise."},"functionSelector":"163f7522","id":4490,"implemented":false,"kind":"function","modifiers":[],"name":"isUserRegistered","nameLocation":"681:16:16","nodeType":"FunctionDefinition","parameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"user","nameLocation":"706:4:16","nodeType":"VariableDeclaration","scope":4490,"src":"698:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4484,"name":"address","nodeType":"ElementaryTypeName","src":"698:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"697:14:16"},"returnParameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4490,"src":"735:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4487,"name":"bool","nodeType":"ElementaryTypeName","src":"735:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"734:6:16"},"scope":4491,"src":"672:69:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4492,"src":"159:584:16","usedErrors":[],"usedEvents":[]}],"src":"134:610:16"},"id":16},"contracts/interfaces/verifiers/IBurnVerifier.sol":{"ast":{"absolutePath":"contracts/interfaces/verifiers/IBurnVerifier.sol","exportedSymbols":{"IBurnVerifier":[4517]},"id":4518,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":4493,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IBurnVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4517,"linearizedBaseContracts":[4517],"name":"IBurnVerifier","nameLocation":"169:13:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f3f22e72","id":4516,"implemented":false,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"198:11:17","nodeType":"FunctionDefinition","parameters":{"id":4512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"pointA_","nameLocation":"237:7:17","nodeType":"VariableDeclaration","scope":4516,"src":"219:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"219:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4496,"length":{"hexValue":"32","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"227:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"219:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4503,"mutability":"mutable","name":"pointB_","nameLocation":"275:7:17","nodeType":"VariableDeclaration","scope":4516,"src":"254:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4500,"length":{"hexValue":"32","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"262:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"254:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":4502,"length":{"hexValue":"32","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"265:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"254:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":4507,"mutability":"mutable","name":"pointC_","nameLocation":"310:7:17","nodeType":"VariableDeclaration","scope":4516,"src":"292:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"292:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4506,"length":{"hexValue":"32","id":4505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"300:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"292:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4511,"mutability":"mutable","name":"publicSignals_","nameLocation":"346:14:17","nodeType":"VariableDeclaration","scope":4516,"src":"327:33:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_memory_ptr","typeString":"uint256[19]"},"typeName":{"baseType":{"id":4508,"name":"uint256","nodeType":"ElementaryTypeName","src":"327:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4510,"length":{"hexValue":"3139","id":4509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"335:2:17","typeDescriptions":{"typeIdentifier":"t_rational_19_by_1","typeString":"int_const 19"},"value":"19"},"nodeType":"ArrayTypeName","src":"327:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_storage_ptr","typeString":"uint256[19]"}},"visibility":"internal"}],"src":"209:157:17"},"returnParameters":{"id":4515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"verified_","nameLocation":"395:9:17","nodeType":"VariableDeclaration","scope":4516,"src":"390:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4513,"name":"bool","nodeType":"ElementaryTypeName","src":"390:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"389:16:17"},"scope":4517,"src":"189:217:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4518,"src":"159:249:17","usedErrors":[],"usedEvents":[]}],"src":"134:275:17"},"id":17},"contracts/interfaces/verifiers/IMintVerifier.sol":{"ast":{"absolutePath":"contracts/interfaces/verifiers/IMintVerifier.sol","exportedSymbols":{"IMintVerifier":[4543]},"id":4544,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":4519,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IMintVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4543,"linearizedBaseContracts":[4543],"name":"IMintVerifier","nameLocation":"169:13:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"4d01c5a0","id":4542,"implemented":false,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"198:11:18","nodeType":"FunctionDefinition","parameters":{"id":4538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"pointA_","nameLocation":"237:7:18","nodeType":"VariableDeclaration","scope":4542,"src":"219:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4520,"name":"uint256","nodeType":"ElementaryTypeName","src":"219:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4522,"length":{"hexValue":"32","id":4521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"227:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"219:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4529,"mutability":"mutable","name":"pointB_","nameLocation":"275:7:18","nodeType":"VariableDeclaration","scope":4542,"src":"254:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4526,"length":{"hexValue":"32","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"262:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"254:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":4528,"length":{"hexValue":"32","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"265:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"254:13:18","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"pointC_","nameLocation":"310:7:18","nodeType":"VariableDeclaration","scope":4542,"src":"292:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4530,"name":"uint256","nodeType":"ElementaryTypeName","src":"292:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4532,"length":{"hexValue":"32","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"300:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"292:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4537,"mutability":"mutable","name":"publicSignals_","nameLocation":"346:14:18","nodeType":"VariableDeclaration","scope":4542,"src":"327:33:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_memory_ptr","typeString":"uint256[24]"},"typeName":{"baseType":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"327:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4536,"length":{"hexValue":"3234","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"335:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"ArrayTypeName","src":"327:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage_ptr","typeString":"uint256[24]"}},"visibility":"internal"}],"src":"209:157:18"},"returnParameters":{"id":4541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"verified_","nameLocation":"395:9:18","nodeType":"VariableDeclaration","scope":4542,"src":"390:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4539,"name":"bool","nodeType":"ElementaryTypeName","src":"390:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"389:16:18"},"scope":4543,"src":"189:217:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4544,"src":"159:249:18","usedErrors":[],"usedEvents":[]}],"src":"134:275:18"},"id":18},"contracts/interfaces/verifiers/IRegistrationVerifier.sol":{"ast":{"absolutePath":"contracts/interfaces/verifiers/IRegistrationVerifier.sol","exportedSymbols":{"IRegistrationVerifier":[4569]},"id":4570,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":4545,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IRegistrationVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4569,"linearizedBaseContracts":[4569],"name":"IRegistrationVerifier","nameLocation":"169:21:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"34baeab9","id":4568,"implemented":false,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"206:11:19","nodeType":"FunctionDefinition","parameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4549,"mutability":"mutable","name":"pointA_","nameLocation":"245:7:19","nodeType":"VariableDeclaration","scope":4568,"src":"227:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4548,"length":{"hexValue":"32","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"235:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"227:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4555,"mutability":"mutable","name":"pointB_","nameLocation":"283:7:19","nodeType":"VariableDeclaration","scope":4568,"src":"262:28:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":4550,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4552,"length":{"hexValue":"32","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"270:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"262:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":4554,"length":{"hexValue":"32","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"273:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"262:13:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":4559,"mutability":"mutable","name":"pointC_","nameLocation":"318:7:19","nodeType":"VariableDeclaration","scope":4568,"src":"300:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4556,"name":"uint256","nodeType":"ElementaryTypeName","src":"300:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4558,"length":{"hexValue":"32","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"308:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"300:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4563,"mutability":"mutable","name":"publicSignals_","nameLocation":"353:14:19","nodeType":"VariableDeclaration","scope":4568,"src":"335:32:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5]"},"typeName":{"baseType":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"335:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4562,"length":{"hexValue":"35","id":4561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"335:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_storage_ptr","typeString":"uint256[5]"}},"visibility":"internal"}],"src":"217:156:19"},"returnParameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4566,"mutability":"mutable","name":"verified_","nameLocation":"402:9:19","nodeType":"VariableDeclaration","scope":4568,"src":"397:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4565,"name":"bool","nodeType":"ElementaryTypeName","src":"397:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"396:16:19"},"scope":4569,"src":"197:216:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4570,"src":"159:256:19","usedErrors":[],"usedEvents":[]}],"src":"134:282:19"},"id":19},"contracts/interfaces/verifiers/ITransferVerifier.sol":{"ast":{"absolutePath":"contracts/interfaces/verifiers/ITransferVerifier.sol","exportedSymbols":{"ITransferVerifier":[4595]},"id":4596,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":4571,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"ITransferVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4595,"linearizedBaseContracts":[4595],"name":"ITransferVerifier","nameLocation":"169:17:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3cc08b24","id":4594,"implemented":false,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"202:11:20","nodeType":"FunctionDefinition","parameters":{"id":4590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"pointA_","nameLocation":"241:7:20","nodeType":"VariableDeclaration","scope":4594,"src":"223:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4572,"name":"uint256","nodeType":"ElementaryTypeName","src":"223:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4574,"length":{"hexValue":"32","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"231:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"223:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"pointB_","nameLocation":"279:7:20","nodeType":"VariableDeclaration","scope":4594,"src":"258:28:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"258:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4578,"length":{"hexValue":"32","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"266:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"258:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":4580,"length":{"hexValue":"32","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"269:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"258:13:20","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":4585,"mutability":"mutable","name":"pointC_","nameLocation":"314:7:20","nodeType":"VariableDeclaration","scope":4594,"src":"296:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"296:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4584,"length":{"hexValue":"32","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"304:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"296:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4589,"mutability":"mutable","name":"publicSignals_","nameLocation":"350:14:20","nodeType":"VariableDeclaration","scope":4594,"src":"331:33:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_memory_ptr","typeString":"uint256[32]"},"typeName":{"baseType":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"331:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4588,"length":{"hexValue":"3332","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"339:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"ArrayTypeName","src":"331:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_storage_ptr","typeString":"uint256[32]"}},"visibility":"internal"}],"src":"213:157:20"},"returnParameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4592,"mutability":"mutable","name":"verified_","nameLocation":"399:9:20","nodeType":"VariableDeclaration","scope":4594,"src":"394:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4591,"name":"bool","nodeType":"ElementaryTypeName","src":"394:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"393:16:20"},"scope":4595,"src":"193:217:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4596,"src":"159:253:20","usedErrors":[],"usedEvents":[]}],"src":"134:279:20"},"id":20},"contracts/interfaces/verifiers/IWithdrawVerifier.sol":{"ast":{"absolutePath":"contracts/interfaces/verifiers/IWithdrawVerifier.sol","exportedSymbols":{"IWithdrawVerifier":[4621]},"id":4622,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":4597,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IWithdrawVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4621,"linearizedBaseContracts":[4621],"name":"IWithdrawVerifier","nameLocation":"169:17:21","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c82febf5","id":4620,"implemented":false,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"202:11:21","nodeType":"FunctionDefinition","parameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"pointA_","nameLocation":"241:7:21","nodeType":"VariableDeclaration","scope":4620,"src":"223:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"223:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4600,"length":{"hexValue":"32","id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"231:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"223:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"pointB_","nameLocation":"279:7:21","nodeType":"VariableDeclaration","scope":4620,"src":"258:28:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"258:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"length":{"hexValue":"32","id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"266:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"258:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":4606,"length":{"hexValue":"32","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"269:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"258:13:21","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":4611,"mutability":"mutable","name":"pointC_","nameLocation":"314:7:21","nodeType":"VariableDeclaration","scope":4620,"src":"296:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"296:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4610,"length":{"hexValue":"32","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"304:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"296:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":4615,"mutability":"mutable","name":"publicSignals_","nameLocation":"350:14:21","nodeType":"VariableDeclaration","scope":4620,"src":"331:33:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_memory_ptr","typeString":"uint256[16]"},"typeName":{"baseType":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"331:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4614,"length":{"hexValue":"3136","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"339:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"ArrayTypeName","src":"331:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_storage_ptr","typeString":"uint256[16]"}},"visibility":"internal"}],"src":"213:157:21"},"returnParameters":{"id":4619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4618,"mutability":"mutable","name":"verified_","nameLocation":"399:9:21","nodeType":"VariableDeclaration","scope":4620,"src":"394:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4617,"name":"bool","nodeType":"ElementaryTypeName","src":"394:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"393:16:21"},"scope":4621,"src":"193:217:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4622,"src":"159:253:21","usedErrors":[],"usedEvents":[]}],"src":"134:279:21"},"id":21},"contracts/libraries/BabyJubJub.sol":{"ast":{"absolutePath":"contracts/libraries/BabyJubJub.sol","exportedSymbols":{"BabyJubJub":[5007],"EGCT":[5073],"Point":[5014]},"id":5008,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":4623,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:22"},{"absolutePath":"contracts/types/Types.sol","file":"../types/Types.sol","id":4626,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5008,"sourceUnit":5144,"src":"170:47:22","symbolAliases":[{"foreign":{"id":4624,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"178:5:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4625,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"185:4:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"BabyJubJub","contractDependencies":[],"contractKind":"library","documentation":{"id":4627,"nodeType":"StructuredDocumentation","src":"219:43:22","text":" @dev BabyJubJub curve operations"},"fullyImplemented":true,"id":5007,"linearizedBaseContracts":[5007],"name":"BabyJubJub","nameLocation":"271:10:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4630,"mutability":"constant","name":"A","nameLocation":"380:1:22","nodeType":"VariableDeclaration","scope":5007,"src":"354:36:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313638373030","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"384:6:22","typeDescriptions":{"typeIdentifier":"t_rational_168700_by_1","typeString":"int_const 168700"},"value":"168700"},"visibility":"internal"},{"constant":true,"id":4633,"mutability":"constant","name":"D","nameLocation":"422:1:22","nodeType":"VariableDeclaration","scope":5007,"src":"396:36:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4631,"name":"uint256","nodeType":"ElementaryTypeName","src":"396:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313638363936","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"426:6:22","typeDescriptions":{"typeIdentifier":"t_rational_168696_by_1","typeString":"int_const 168696"},"value":"168696"},"visibility":"internal"},{"constant":true,"functionSelector":"e493ef8c","id":4636,"mutability":"constant","name":"Q","nameLocation":"462:1:22","nodeType":"VariableDeclaration","scope":5007,"src":"438:113:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4634,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3231383838323432383731383339323735323232323436343035373435323537323735303838353438333634343030343136303334333433363938323034313836353735383038343935363137","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"474:77:22","typeDescriptions":{"typeIdentifier":"t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495617_by_1","typeString":"int_const 2188...(69 digits omitted)...5617"},"value":"21888242871839275222246405745257275088548364400416034343698204186575808495617"},"visibility":"public"},{"constant":true,"id":4639,"mutability":"constant","name":"H","nameLocation":"583:1:22","nodeType":"VariableDeclaration","scope":5007,"src":"557:115:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4637,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130393434313231343335393139363337363131313233323032383732363238363337353434323734313832323030323038303137313731383439313032303933323837393034323437383038","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"595:77:22","typeDescriptions":{"typeIdentifier":"t_rational_10944121435919637611123202872628637544274182200208017171849102093287904247808_by_1","typeString":"int_const 1094...(69 digits omitted)...7808"},"value":"10944121435919637611123202872628637544274182200208017171849102093287904247808"},"visibility":"internal"},{"constant":true,"id":4642,"mutability":"constant","name":"R","nameLocation":"704:1:22","nodeType":"VariableDeclaration","scope":5007,"src":"678:114:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32373336303330333538393739393039343032373830383030373138313537313539333836303736383133393732313538353637323539323030323135363630393438343437333733303431","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"716:76:22","typeDescriptions":{"typeIdentifier":"t_rational_2736030358979909402780800718157159386076813972158567259200215660948447373041_by_1","typeString":"int_const 2736...(68 digits omitted)...3041"},"value":"2736030358979909402780800718157159386076813972158567259200215660948447373041"},"visibility":"internal"},{"body":{"id":4662,"nodeType":"Block","src":"1124:54:22","statements":[{"expression":{"arguments":[{"id":4656,"name":"_point1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"1146:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"arguments":[{"id":4658,"name":"_point2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"1162:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":4657,"name":"negate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"1155:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory) pure returns (struct Point memory)"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1155:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":4655,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"1141:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1141:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"functionReturnParameters":4654,"id":4661,"nodeType":"Return","src":"1134:37:22"}]},"documentation":{"id":4643,"nodeType":"StructuredDocumentation","src":"799:205:22","text":" @dev Subtract a BabyJubJub point from another BabyJubJub point\n @param _point1 the point which will be subtracted from\n @param _point2 point to subtract\n @return result"},"functionSelector":"4fa78ada","id":4663,"implemented":true,"kind":"function","modifiers":[],"name":"_sub","nameLocation":"1018:4:22","nodeType":"FunctionDefinition","parameters":{"id":4650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4646,"mutability":"mutable","name":"_point1","nameLocation":"1045:7:22","nodeType":"VariableDeclaration","scope":4663,"src":"1032:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4645,"nodeType":"UserDefinedTypeName","pathNode":{"id":4644,"name":"Point","nameLocations":["1032:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"1032:5:22"},"referencedDeclaration":5014,"src":"1032:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"},{"constant":false,"id":4649,"mutability":"mutable","name":"_point2","nameLocation":"1075:7:22","nodeType":"VariableDeclaration","scope":4663,"src":"1062:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4648,"nodeType":"UserDefinedTypeName","pathNode":{"id":4647,"name":"Point","nameLocations":["1062:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"1062:5:22"},"referencedDeclaration":5014,"src":"1062:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"src":"1022:66:22"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4663,"src":"1110:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4652,"nodeType":"UserDefinedTypeName","pathNode":{"id":4651,"name":"Point","nameLocations":["1110:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"1110:5:22"},"referencedDeclaration":5014,"src":"1110:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"src":"1109:14:22"},"scope":5007,"src":"1009:169:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4763,"nodeType":"Block","src":"1613:579:22","statements":[{"assignments":[4677],"declarations":[{"constant":false,"id":4677,"mutability":"mutable","name":"x1x2","nameLocation":"1631:4:22","nodeType":"VariableDeclaration","scope":4763,"src":"1623:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4685,"initialValue":{"arguments":[{"expression":{"id":4679,"name":"_point1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"1645:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1653:1:22","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"1645:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4681,"name":"_point2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"1656:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1664:1:22","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"1656:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4683,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1667:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4678,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"1638:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1623:46:22"},{"assignments":[4687],"declarations":[{"constant":false,"id":4687,"mutability":"mutable","name":"y1y2","nameLocation":"1687:4:22","nodeType":"VariableDeclaration","scope":4763,"src":"1679:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1679:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4695,"initialValue":{"arguments":[{"expression":{"id":4689,"name":"_point1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"1701:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1709:1:22","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"1701:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4691,"name":"_point2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"1712:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1720:1:22","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"1712:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4693,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1723:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4688,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"1694:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1694:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1679:46:22"},{"assignments":[4697],"declarations":[{"constant":false,"id":4697,"mutability":"mutable","name":"dx1x2y1y2","nameLocation":"1744:9:22","nodeType":"VariableDeclaration","scope":4763,"src":"1736:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4707,"initialValue":{"arguments":[{"id":4699,"name":"D","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"1763:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4701,"name":"x1x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"1773:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4702,"name":"y1y2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"1779:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4703,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1785:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4700,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"1766:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1766:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4705,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1789:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4698,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"1756:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1756:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1736:55:22"},{"assignments":[4709],"declarations":[{"constant":false,"id":4709,"mutability":"mutable","name":"x3Num","nameLocation":"1810:5:22","nodeType":"VariableDeclaration","scope":4763,"src":"1802:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4727,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":4712,"name":"_point1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"1845:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1853:1:22","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"1845:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4714,"name":"_point2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"1856:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1864:1:22","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"1856:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4716,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1867:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4711,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"1838:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1838:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":4719,"name":"_point1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"1890:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1898:1:22","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"1890:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4721,"name":"_point2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"1901:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1909:1:22","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"1901:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4723,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1912:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4718,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"1883:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1883:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4725,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1928:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4710,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"1818:6:22","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:121:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1802:137:22"},{"assignments":[4729],"declarations":[{"constant":false,"id":4729,"mutability":"mutable","name":"y3Num","nameLocation":"1957:5:22","nodeType":"VariableDeclaration","scope":4763,"src":"1949:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4738,"initialValue":{"arguments":[{"id":4731,"name":"y1y2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"1972:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4733,"name":"A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"1985:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4734,"name":"x1x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"1988:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4735,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1994:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4732,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"1978:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1978:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4730,"name":"submod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"1965:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1949:48:22"},{"expression":{"arguments":[{"arguments":[{"id":4741,"name":"x3Num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"2061:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"hexValue":"31","id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2082:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":4745,"name":"dx1x2y1y2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"2085:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4746,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"2096:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4743,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"2075:6:22","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2075:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4742,"name":"invmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"2068:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4749,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"2101:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4740,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2054:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2054:49:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4752,"name":"y3Num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"2131:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"hexValue":"31","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":4756,"name":"dx1x2y1y2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"2155:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4754,"name":"submod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"2145:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4753,"name":"invmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"2138:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4759,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"2168:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4751,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2124:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2124:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4739,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"2027:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2051:1:22","2121:1:22"],"names":["x","y"],"nodeType":"FunctionCall","src":"2027:158:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"functionReturnParameters":4675,"id":4762,"nodeType":"Return","src":"2008:177:22"}]},"documentation":{"id":4664,"nodeType":"StructuredDocumentation","src":"1184:309:22","text":" @dev Add 2 points on BabyJubJub curve\n Formulae for adding 2 points on a twisted Edwards curve:\n x3 = (x1y2 + y1x2) / (1 + dx1x2y1y2)\n y3 = (y1y2 - ax1x2) / (1 - dx1x2y1y2)\n @param _point1 first point\n @param _point2 second point\n @return resulting point"},"functionSelector":"7bb10bcb","id":4764,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"1507:4:22","nodeType":"FunctionDefinition","parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"_point1","nameLocation":"1534:7:22","nodeType":"VariableDeclaration","scope":4764,"src":"1521:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4666,"nodeType":"UserDefinedTypeName","pathNode":{"id":4665,"name":"Point","nameLocations":["1521:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"1521:5:22"},"referencedDeclaration":5014,"src":"1521:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"},{"constant":false,"id":4670,"mutability":"mutable","name":"_point2","nameLocation":"1564:7:22","nodeType":"VariableDeclaration","scope":4764,"src":"1551:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4669,"nodeType":"UserDefinedTypeName","pathNode":{"id":4668,"name":"Point","nameLocations":["1551:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"1551:5:22"},"referencedDeclaration":5014,"src":"1551:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"src":"1511:66:22"},"returnParameters":{"id":4675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4764,"src":"1599:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4673,"nodeType":"UserDefinedTypeName","pathNode":{"id":4672,"name":"Point","nameLocations":["1599:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"1599:5:22"},"referencedDeclaration":5014,"src":"1599:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"src":"1598:14:22"},"scope":5007,"src":"1498:694:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4829,"nodeType":"Block","src":"2544:733:22","statements":[{"assignments":[4777],"declarations":[{"constant":false,"id":4777,"mutability":"mutable","name":"remaining","nameLocation":"2598:9:22","nodeType":"VariableDeclaration","scope":4829,"src":"2590:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"2590:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4781,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4778,"name":"_scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"2610:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4779,"name":"R","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2620:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2610:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2590:31:22"},{"assignments":[4784],"declarations":[{"constant":false,"id":4784,"mutability":"mutable","name":"initial","nameLocation":"2702:7:22","nodeType":"VariableDeclaration","scope":4829,"src":"2689:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4783,"nodeType":"UserDefinedTypeName","pathNode":{"id":4782,"name":"Point","nameLocations":["2689:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"2689:5:22"},"referencedDeclaration":5014,"src":"2689:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"id":4786,"initialValue":{"id":4785,"name":"_point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"2712:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"nodeType":"VariableDeclarationStatement","src":"2689:29:22"},{"assignments":[4789],"declarations":[{"constant":false,"id":4789,"mutability":"mutable","name":"result","nameLocation":"2771:6:22","nodeType":"VariableDeclaration","scope":4829,"src":"2758:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4788,"nodeType":"UserDefinedTypeName","pathNode":{"id":4787,"name":"Point","nameLocations":["2758:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"2758:5:22"},"referencedDeclaration":5014,"src":"2758:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"id":4794,"initialValue":{"arguments":[{"hexValue":"30","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2790:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"31","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2796:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":4790,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"2780:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2787:1:22","2793:1:22"],"names":["x","y"],"nodeType":"FunctionCall","src":"2780:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"nodeType":"VariableDeclarationStatement","src":"2758:41:22"},{"body":{"id":4825,"nodeType":"Block","src":"2883:364:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"2997:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3009:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2997:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2996:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3015:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2996:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4812,"nodeType":"IfStatement","src":"2992:89:22","trueBody":{"id":4811,"nodeType":"Block","src":"3018:63:22","statements":[{"expression":{"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"3036:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"3050:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":4807,"name":"initial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"3058:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":4805,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"3045:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3045:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"3036:30:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4810,"nodeType":"ExpressionStatement","src":"3036:30:22"}]}},{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4813,"name":"initial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"3131:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4815,"name":"initial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"3148:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":4814,"name":"double","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"3141:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory) view returns (struct Point memory)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3141:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"src":"3131:25:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4818,"nodeType":"ExpressionStatement","src":"3131:25:22"},{"expression":{"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"3210:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4820,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"3222:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3235:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3222:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3210:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4824,"nodeType":"ExpressionStatement","src":"3210:26:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4795,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"2867:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2880:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2867:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4826,"nodeType":"WhileStatement","src":"2860:387:22"},{"expression":{"id":4827,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"3264:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"functionReturnParameters":4775,"id":4828,"nodeType":"Return","src":"3257:13:22"}]},"documentation":{"id":4765,"nodeType":"StructuredDocumentation","src":"2198:222:22","text":" @dev Multiply a BabyJubJub point by a scalar\n Use the double and add algorithm\n @param _point point be multiplied by a scalar\n @param _scalar scalar value\n @return resulting point"},"functionSelector":"ef69ca3a","id":4830,"implemented":true,"kind":"function","modifiers":[],"name":"scalarMultiply","nameLocation":"2434:14:22","nodeType":"FunctionDefinition","parameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4768,"mutability":"mutable","name":"_point","nameLocation":"2471:6:22","nodeType":"VariableDeclaration","scope":4830,"src":"2458:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4767,"nodeType":"UserDefinedTypeName","pathNode":{"id":4766,"name":"Point","nameLocations":["2458:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"2458:5:22"},"referencedDeclaration":5014,"src":"2458:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"},{"constant":false,"id":4770,"mutability":"mutable","name":"_scalar","nameLocation":"2495:7:22","nodeType":"VariableDeclaration","scope":4830,"src":"2487:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2448:60:22"},"returnParameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4830,"src":"2530:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4773,"nodeType":"UserDefinedTypeName","pathNode":{"id":4772,"name":"Point","nameLocations":["2530:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"2530:5:22"},"referencedDeclaration":5014,"src":"2530:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"src":"2529:14:22"},"scope":5007,"src":"2425:852:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4889,"nodeType":"Block","src":"3554:326:22","statements":[{"assignments":[4843],"declarations":[{"constant":false,"id":4843,"mutability":"mutable","name":"random","nameLocation":"3572:6:22","nodeType":"VariableDeclaration","scope":4889,"src":"3564:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3564:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4845,"initialValue":{"hexValue":"31","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3581:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"3564:18:22"},{"assignments":[4848],"declarations":[{"constant":false,"id":4848,"mutability":"mutable","name":"b8","nameLocation":"3605:2:22","nodeType":"VariableDeclaration","scope":4889,"src":"3592:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4847,"nodeType":"UserDefinedTypeName","pathNode":{"id":4846,"name":"Point","nameLocations":["3592:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"3592:5:22"},"referencedDeclaration":5014,"src":"3592:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"id":4851,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4849,"name":"base8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"3610:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function () pure returns (struct Point memory)"}},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"nodeType":"VariableDeclarationStatement","src":"3592:25:22"},{"assignments":[4854],"declarations":[{"constant":false,"id":4854,"mutability":"mutable","name":"c1","nameLocation":"3641:2:22","nodeType":"VariableDeclaration","scope":4889,"src":"3628:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4853,"nodeType":"UserDefinedTypeName","pathNode":{"id":4852,"name":"Point","nameLocations":["3628:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"3628:5:22"},"referencedDeclaration":5014,"src":"3628:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"id":4859,"initialValue":{"arguments":[{"id":4856,"name":"b8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"3661:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":4857,"name":"random","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"3665:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4855,"name":"scalarMultiply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"3646:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Point_$5014_memory_ptr_$_t_uint256_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,uint256) view returns (struct Point memory)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3646:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"nodeType":"VariableDeclarationStatement","src":"3628:44:22"},{"assignments":[4862],"declarations":[{"constant":false,"id":4862,"mutability":"mutable","name":"pkr","nameLocation":"3695:3:22","nodeType":"VariableDeclaration","scope":4889,"src":"3682:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4861,"nodeType":"UserDefinedTypeName","pathNode":{"id":4860,"name":"Point","nameLocations":["3682:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"3682:5:22"},"referencedDeclaration":5014,"src":"3682:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"id":4867,"initialValue":{"arguments":[{"id":4864,"name":"_publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"3716:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":4865,"name":"random","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"3728:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4863,"name":"scalarMultiply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"3701:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Point_$5014_memory_ptr_$_t_uint256_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,uint256) view returns (struct Point memory)"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"nodeType":"VariableDeclarationStatement","src":"3682:53:22"},{"assignments":[4870],"declarations":[{"constant":false,"id":4870,"mutability":"mutable","name":"pMsg","nameLocation":"3758:4:22","nodeType":"VariableDeclaration","scope":4889,"src":"3745:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4869,"nodeType":"UserDefinedTypeName","pathNode":{"id":4868,"name":"Point","nameLocations":["3745:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"3745:5:22"},"referencedDeclaration":5014,"src":"3745:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"id":4875,"initialValue":{"arguments":[{"id":4872,"name":"b8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"3780:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":4873,"name":"_msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"3784:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4871,"name":"scalarMultiply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"3765:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Point_$5014_memory_ptr_$_t_uint256_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,uint256) view returns (struct Point memory)"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3765:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"nodeType":"VariableDeclarationStatement","src":"3745:44:22"},{"assignments":[4878],"declarations":[{"constant":false,"id":4878,"mutability":"mutable","name":"c2","nameLocation":"3813:2:22","nodeType":"VariableDeclaration","scope":4889,"src":"3800:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4877,"nodeType":"UserDefinedTypeName","pathNode":{"id":4876,"name":"Point","nameLocations":["3800:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"3800:5:22"},"referencedDeclaration":5014,"src":"3800:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"id":4883,"initialValue":{"arguments":[{"id":4880,"name":"pkr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"3823:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":4881,"name":"pMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"3828:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":4879,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"3818:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"nodeType":"VariableDeclarationStatement","src":"3800:33:22"},{"expression":{"arguments":[{"id":4885,"name":"c1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"3861:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":4886,"name":"c2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"3869:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":4884,"name":"EGCT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"3851:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EGCT_$5073_storage_ptr_$","typeString":"type(struct EGCT storage pointer)"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3857:2:22","3865:2:22"],"names":["c1","c2"],"nodeType":"FunctionCall","src":"3851:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"functionReturnParameters":4841,"id":4888,"nodeType":"Return","src":"3844:29:22"}]},"documentation":{"id":4831,"nodeType":"StructuredDocumentation","src":"3283:144:22","text":" @param _publicKey Public Key that will be used in encryption\n @param _msg Message in scalar form to be encrypted"},"functionSelector":"34603b1a","id":4890,"implemented":true,"kind":"function","modifiers":[],"name":"elGamalEncryption","nameLocation":"3441:17:22","nodeType":"FunctionDefinition","parameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4834,"mutability":"mutable","name":"_publicKey","nameLocation":"3481:10:22","nodeType":"VariableDeclaration","scope":4890,"src":"3468:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4833,"nodeType":"UserDefinedTypeName","pathNode":{"id":4832,"name":"Point","nameLocations":["3468:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"3468:5:22"},"referencedDeclaration":5014,"src":"3468:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"},{"constant":false,"id":4836,"mutability":"mutable","name":"_msg","nameLocation":"3509:4:22","nodeType":"VariableDeclaration","scope":4890,"src":"3501:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3501:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3458:61:22"},"returnParameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4890,"src":"3541:11:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":4839,"nodeType":"UserDefinedTypeName","pathNode":{"id":4838,"name":"EGCT","nameLocations":["3541:4:22"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"3541:4:22"},"referencedDeclaration":5073,"src":"3541:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"src":"3540:13:22"},"scope":5007,"src":"3432:448:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4906,"nodeType":"Block","src":"4045:59:22","statements":[{"expression":{"arguments":[{"id":4902,"name":"_publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"4080:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":4903,"name":"_msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"4092:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4901,"name":"elGamalEncryption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"4062:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Point_$5014_memory_ptr_$_t_uint256_$returns$_t_struct$_EGCT_$5073_memory_ptr_$","typeString":"function (struct Point memory,uint256) view returns (struct EGCT memory)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT memory"}},"functionReturnParameters":4900,"id":4905,"nodeType":"Return","src":"4055:42:22"}]},"functionSelector":"04068d3a","id":4907,"implemented":true,"kind":"function","modifiers":[],"name":"encrypt","nameLocation":"3942:7:22","nodeType":"FunctionDefinition","parameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"_publicKey","nameLocation":"3972:10:22","nodeType":"VariableDeclaration","scope":4907,"src":"3959:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4892,"nodeType":"UserDefinedTypeName","pathNode":{"id":4891,"name":"Point","nameLocations":["3959:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"3959:5:22"},"referencedDeclaration":5014,"src":"3959:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"},{"constant":false,"id":4895,"mutability":"mutable","name":"_msg","nameLocation":"4000:4:22","nodeType":"VariableDeclaration","scope":4907,"src":"3992:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3992:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3949:61:22"},"returnParameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4907,"src":"4032:11:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_memory_ptr","typeString":"struct EGCT"},"typeName":{"id":4898,"nodeType":"UserDefinedTypeName","pathNode":{"id":4897,"name":"EGCT","nameLocations":["4032:4:22"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"4032:4:22"},"referencedDeclaration":5073,"src":"4032:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"}],"src":"4031:13:22"},"scope":5007,"src":"3933:171:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4919,"nodeType":"Block","src":"4208:252:22","statements":[{"expression":{"arguments":[{"hexValue":"35323939363139323430363431353531323831363334383635353833353138323937303330323832383734343732313930373732383934303836353231313434343832373231303031353533","id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4264:76:22","typeDescriptions":{"typeIdentifier":"t_rational_5299619240641551281634865583518297030282874472190772894086521144482721001553_by_1","typeString":"int_const 5299...(68 digits omitted)...1553"},"value":"5299619240641551281634865583518297030282874472190772894086521144482721001553"},{"hexValue":"3136393530313530373938343630363537373137393538363235353637383231383334353530333031363633313631363234373037373837323232383135393336313832363338393638323033","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4361:77:22","typeDescriptions":{"typeIdentifier":"t_rational_16950150798460657717958625567821834550301663161624707787222815936182638968203_by_1","typeString":"int_const 1695...(69 digits omitted)...8203"},"value":"16950150798460657717958625567821834550301663161624707787222815936182638968203"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5299619240641551281634865583518297030282874472190772894086521144482721001553_by_1","typeString":"int_const 5299...(68 digits omitted)...1553"},{"typeIdentifier":"t_rational_16950150798460657717958625567821834550301663161624707787222815936182638968203_by_1","typeString":"int_const 1695...(69 digits omitted)...8203"}],"id":4914,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"4237:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4261:1:22","4358:1:22"],"names":["x","y"],"nodeType":"FunctionCall","src":"4237:216:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"functionReturnParameters":4913,"id":4918,"nodeType":"Return","src":"4218:235:22"}]},"documentation":{"id":4908,"nodeType":"StructuredDocumentation","src":"4110:41:22","text":" @dev Default generator"},"functionSelector":"7a634a72","id":4920,"implemented":true,"kind":"function","modifiers":[],"name":"base8","nameLocation":"4165:5:22","nodeType":"FunctionDefinition","parameters":{"id":4909,"nodeType":"ParameterList","parameters":[],"src":"4170:2:22"},"returnParameters":{"id":4913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4920,"src":"4194:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4911,"nodeType":"UserDefinedTypeName","pathNode":{"id":4910,"name":"Point","nameLocations":["4194:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"4194:5:22"},"referencedDeclaration":5014,"src":"4194:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"src":"4193:14:22"},"scope":5007,"src":"4156:304:22","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4935,"nodeType":"Block","src":"4661:36:22","statements":[{"expression":{"arguments":[{"id":4931,"name":"_p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"4683:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},{"id":4932,"name":"_p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"4687:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"},{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}],"id":4930,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"4678:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Point_$5014_memory_ptr_$_t_struct$_Point_$5014_memory_ptr_$returns$_t_struct$_Point_$5014_memory_ptr_$","typeString":"function (struct Point memory,struct Point memory) view returns (struct Point memory)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4678:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"functionReturnParameters":4929,"id":4934,"nodeType":"Return","src":"4671:19:22"}]},"documentation":{"id":4921,"nodeType":"StructuredDocumentation","src":"4466:120:22","text":" @dev Double a point on BabyJubJub curve\n @param _p point to double\n @return doubled point"},"id":4936,"implemented":true,"kind":"function","modifiers":[],"name":"double","nameLocation":"4600:6:22","nodeType":"FunctionDefinition","parameters":{"id":4925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"_p","nameLocation":"4620:2:22","nodeType":"VariableDeclaration","scope":4936,"src":"4607:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4923,"nodeType":"UserDefinedTypeName","pathNode":{"id":4922,"name":"Point","nameLocations":["4607:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"4607:5:22"},"referencedDeclaration":5014,"src":"4607:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"src":"4606:17:22"},"returnParameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4936,"src":"4647:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4927,"nodeType":"UserDefinedTypeName","pathNode":{"id":4926,"name":"Point","nameLocations":["4647:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"4647:5:22"},"referencedDeclaration":5014,"src":"4647:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"src":"4646:14:22"},"scope":5007,"src":"4591:106:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4949,"nodeType":"Block","src":"4878:314:22","statements":[{"expression":{"arguments":[{"id":4945,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"5085:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"307833303634346537326531333161303239623835303435623638313831353835643238333365383438373962393730393134336531663539336566666666666666","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5105:66:22","typeDescriptions":{"typeIdentifier":"t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495615_by_1","typeString":"int_const 2188...(69 digits omitted)...5615"},"value":"0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495615_by_1","typeString":"int_const 2188...(69 digits omitted)...5615"}],"id":4944,"name":"expmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"5061:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5061:124:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4943,"id":4948,"nodeType":"Return","src":"5042:143:22"}]},"documentation":{"id":4937,"nodeType":"StructuredDocumentation","src":"4703:110:22","text":" @dev Compute modular inverse of a number\n @param _a the value to be inverted in mod Q"},"id":4950,"implemented":true,"kind":"function","modifiers":[],"name":"invmod","nameLocation":"4827:6:22","nodeType":"FunctionDefinition","parameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"mutability":"mutable","name":"_a","nameLocation":"4842:2:22","nodeType":"VariableDeclaration","scope":4950,"src":"4834:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"4834:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4833:12:22"},"returnParameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4950,"src":"4869:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4941,"name":"uint256","nodeType":"ElementaryTypeName","src":"4869:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4868:9:22"},"scope":5007,"src":"4818:374:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"5464:971:22","statements":[{"assignments":[4961],"declarations":[{"constant":false,"id":4961,"mutability":"mutable","name":"result","nameLocation":"5482:6:22","nodeType":"VariableDeclaration","scope":4966,"src":"5474:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"5474:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4962,"nodeType":"VariableDeclarationStatement","src":"5474:14:22"},{"AST":{"nativeSrc":"5564:841:22","nodeType":"YulBlock","src":"5564:841:22","statements":[{"nativeSrc":"5578:108:22","nodeType":"YulVariableDeclaration","src":"5578:108:22","value":{"kind":"number","nativeSrc":"5620:66:22","nodeType":"YulLiteral","src":"5620:66:22","type":"","value":"0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001"},"variables":[{"name":"localQ","nativeSrc":"5598:6:22","nodeType":"YulTypedName","src":"5598:6:22","type":""}]},{"nativeSrc":"5699:25:22","nodeType":"YulVariableDeclaration","src":"5699:25:22","value":{"arguments":[{"kind":"number","nativeSrc":"5719:4:22","nodeType":"YulLiteral","src":"5719:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"5713:5:22","nodeType":"YulIdentifier","src":"5713:5:22"},"nativeSrc":"5713:11:22","nodeType":"YulFunctionCall","src":"5713:11:22"},"variables":[{"name":"memPtr","nativeSrc":"5703:6:22","nodeType":"YulTypedName","src":"5703:6:22","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"5744:6:22","nodeType":"YulIdentifier","src":"5744:6:22"},{"kind":"number","nativeSrc":"5752:4:22","nodeType":"YulLiteral","src":"5752:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"5737:6:22","nodeType":"YulIdentifier","src":"5737:6:22"},"nativeSrc":"5737:20:22","nodeType":"YulFunctionCall","src":"5737:20:22"},"nativeSrc":"5737:20:22","nodeType":"YulExpressionStatement","src":"5737:20:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"5802:6:22","nodeType":"YulIdentifier","src":"5802:6:22"},{"kind":"number","nativeSrc":"5810:4:22","nodeType":"YulLiteral","src":"5810:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5798:3:22","nodeType":"YulIdentifier","src":"5798:3:22"},"nativeSrc":"5798:17:22","nodeType":"YulFunctionCall","src":"5798:17:22"},{"kind":"number","nativeSrc":"5817:4:22","nodeType":"YulLiteral","src":"5817:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"5791:6:22","nodeType":"YulIdentifier","src":"5791:6:22"},"nativeSrc":"5791:31:22","nodeType":"YulFunctionCall","src":"5791:31:22"},"nativeSrc":"5791:31:22","nodeType":"YulExpressionStatement","src":"5791:31:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"5871:6:22","nodeType":"YulIdentifier","src":"5871:6:22"},{"kind":"number","nativeSrc":"5879:4:22","nodeType":"YulLiteral","src":"5879:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"5867:3:22","nodeType":"YulIdentifier","src":"5867:3:22"},"nativeSrc":"5867:17:22","nodeType":"YulFunctionCall","src":"5867:17:22"},{"kind":"number","nativeSrc":"5886:4:22","nodeType":"YulLiteral","src":"5886:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"5860:6:22","nodeType":"YulIdentifier","src":"5860:6:22"},"nativeSrc":"5860:31:22","nodeType":"YulFunctionCall","src":"5860:31:22"},"nativeSrc":"5860:31:22","nodeType":"YulExpressionStatement","src":"5860:31:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"5938:6:22","nodeType":"YulIdentifier","src":"5938:6:22"},{"kind":"number","nativeSrc":"5946:4:22","nodeType":"YulLiteral","src":"5946:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"5934:3:22","nodeType":"YulIdentifier","src":"5934:3:22"},"nativeSrc":"5934:17:22","nodeType":"YulFunctionCall","src":"5934:17:22"},{"name":"_base","nativeSrc":"5953:5:22","nodeType":"YulIdentifier","src":"5953:5:22"}],"functionName":{"name":"mstore","nativeSrc":"5927:6:22","nodeType":"YulIdentifier","src":"5927:6:22"},"nativeSrc":"5927:32:22","nodeType":"YulFunctionCall","src":"5927:32:22"},"nativeSrc":"5927:32:22","nodeType":"YulExpressionStatement","src":"5927:32:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"5994:6:22","nodeType":"YulIdentifier","src":"5994:6:22"},{"kind":"number","nativeSrc":"6002:4:22","nodeType":"YulLiteral","src":"6002:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"5990:3:22","nodeType":"YulIdentifier","src":"5990:3:22"},"nativeSrc":"5990:17:22","nodeType":"YulFunctionCall","src":"5990:17:22"},{"name":"_exponent","nativeSrc":"6009:9:22","nodeType":"YulIdentifier","src":"6009:9:22"}],"functionName":{"name":"mstore","nativeSrc":"5983:6:22","nodeType":"YulIdentifier","src":"5983:6:22"},"nativeSrc":"5983:36:22","nodeType":"YulFunctionCall","src":"5983:36:22"},"nativeSrc":"5983:36:22","nodeType":"YulExpressionStatement","src":"5983:36:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6058:6:22","nodeType":"YulIdentifier","src":"6058:6:22"},{"kind":"number","nativeSrc":"6066:4:22","nodeType":"YulLiteral","src":"6066:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"6054:3:22","nodeType":"YulIdentifier","src":"6054:3:22"},"nativeSrc":"6054:17:22","nodeType":"YulFunctionCall","src":"6054:17:22"},{"name":"localQ","nativeSrc":"6073:6:22","nodeType":"YulIdentifier","src":"6073:6:22"}],"functionName":{"name":"mstore","nativeSrc":"6047:6:22","nodeType":"YulIdentifier","src":"6047:6:22"},"nativeSrc":"6047:33:22","nodeType":"YulFunctionCall","src":"6047:33:22"},"nativeSrc":"6047:33:22","nodeType":"YulExpressionStatement","src":"6047:33:22"},{"nativeSrc":"6158:66:22","nodeType":"YulVariableDeclaration","src":"6158:66:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"6184:3:22","nodeType":"YulIdentifier","src":"6184:3:22"},"nativeSrc":"6184:5:22","nodeType":"YulFunctionCall","src":"6184:5:22"},{"kind":"number","nativeSrc":"6191:4:22","nodeType":"YulLiteral","src":"6191:4:22","type":"","value":"0x05"},{"name":"memPtr","nativeSrc":"6197:6:22","nodeType":"YulIdentifier","src":"6197:6:22"},{"kind":"number","nativeSrc":"6205:4:22","nodeType":"YulLiteral","src":"6205:4:22","type":"","value":"0xc0"},{"name":"memPtr","nativeSrc":"6211:6:22","nodeType":"YulIdentifier","src":"6211:6:22"},{"kind":"number","nativeSrc":"6219:4:22","nodeType":"YulLiteral","src":"6219:4:22","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"6173:10:22","nodeType":"YulIdentifier","src":"6173:10:22"},"nativeSrc":"6173:51:22","nodeType":"YulFunctionCall","src":"6173:51:22"},"variables":[{"name":"success","nativeSrc":"6162:7:22","nodeType":"YulTypedName","src":"6162:7:22","type":""}]},{"cases":[{"body":{"nativeSrc":"6271:48:22","nodeType":"YulBlock","src":"6271:48:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6296:3:22","nodeType":"YulLiteral","src":"6296:3:22","type":"","value":"0x0"},{"kind":"number","nativeSrc":"6301:3:22","nodeType":"YulLiteral","src":"6301:3:22","type":"","value":"0x0"}],"functionName":{"name":"revert","nativeSrc":"6289:6:22","nodeType":"YulIdentifier","src":"6289:6:22"},"nativeSrc":"6289:16:22","nodeType":"YulFunctionCall","src":"6289:16:22"},"nativeSrc":"6289:16:22","nodeType":"YulExpressionStatement","src":"6289:16:22"}]},"nativeSrc":"6264:55:22","nodeType":"YulCase","src":"6264:55:22","value":{"kind":"number","nativeSrc":"6269:1:22","nodeType":"YulLiteral","src":"6269:1:22","type":"","value":"0"}},{"body":{"nativeSrc":"6340:55:22","nodeType":"YulBlock","src":"6340:55:22","statements":[{"nativeSrc":"6358:23:22","nodeType":"YulAssignment","src":"6358:23:22","value":{"arguments":[{"name":"memPtr","nativeSrc":"6374:6:22","nodeType":"YulIdentifier","src":"6374:6:22"}],"functionName":{"name":"mload","nativeSrc":"6368:5:22","nodeType":"YulIdentifier","src":"6368:5:22"},"nativeSrc":"6368:13:22","nodeType":"YulFunctionCall","src":"6368:13:22"},"variableNames":[{"name":"result","nativeSrc":"6358:6:22","nodeType":"YulIdentifier","src":"6358:6:22"}]}]},"nativeSrc":"6332:63:22","nodeType":"YulCase","src":"6332:63:22","value":"default"}],"expression":{"name":"success","nativeSrc":"6244:7:22","nodeType":"YulIdentifier","src":"6244:7:22"},"nativeSrc":"6237:158:22","nodeType":"YulSwitch","src":"6237:158:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":4953,"isOffset":false,"isSlot":false,"src":"5953:5:22","valueSize":1},{"declaration":4955,"isOffset":false,"isSlot":false,"src":"6009:9:22","valueSize":1},{"declaration":4961,"isOffset":false,"isSlot":false,"src":"6358:6:22","valueSize":1}],"id":4963,"nodeType":"InlineAssembly","src":"5555:850:22"},{"expression":{"id":4964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"6422:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4959,"id":4965,"nodeType":"Return","src":"6415:13:22"}]},"documentation":{"id":4951,"nodeType":"StructuredDocumentation","src":"5198:157:22","text":" @dev Exponentiation modulo Q\n @param _base the base of the exponentiation\n @param _exponent the exponent\n @return result"},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"expmod","nameLocation":"5369:6:22","nodeType":"FunctionDefinition","parameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"mutability":"mutable","name":"_base","nameLocation":"5393:5:22","nodeType":"VariableDeclaration","scope":4967,"src":"5385:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"5385:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4955,"mutability":"mutable","name":"_exponent","nameLocation":"5416:9:22","nodeType":"VariableDeclaration","scope":4967,"src":"5408:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"5408:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5375:56:22"},"returnParameters":{"id":4959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4967,"src":"5455:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4957,"name":"uint256","nodeType":"ElementaryTypeName","src":"5455:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5454:9:22"},"scope":5007,"src":"5360:1075:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4986,"nodeType":"Block","src":"6631:61:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"6658:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4979,"name":"_point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"6662:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6669:1:22","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":5011,"src":"6662:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6658:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4982,"name":"_point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"6675:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"id":4983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6682:1:22","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":5013,"src":"6675:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4977,"name":"Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"6648:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Point_$5014_storage_ptr_$","typeString":"type(struct Point storage pointer)"}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6655:1:22","6672:1:22"],"names":["x","y"],"nodeType":"FunctionCall","src":"6648:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point memory"}},"functionReturnParameters":4976,"id":4985,"nodeType":"Return","src":"6641:44:22"}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"6441:111:22","text":" @dev Negate a BabyJubJub point\n @param _point point to negate\n @return p = -(_p)"},"id":4987,"implemented":true,"kind":"function","modifiers":[],"name":"negate","nameLocation":"6566:6:22","nodeType":"FunctionDefinition","parameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4971,"mutability":"mutable","name":"_point","nameLocation":"6586:6:22","nodeType":"VariableDeclaration","scope":4987,"src":"6573:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4970,"nodeType":"UserDefinedTypeName","pathNode":{"id":4969,"name":"Point","nameLocations":["6573:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"6573:5:22"},"referencedDeclaration":5014,"src":"6573:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"src":"6572:21:22"},"returnParameters":{"id":4976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4987,"src":"6617:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_memory_ptr","typeString":"struct Point"},"typeName":{"id":4974,"nodeType":"UserDefinedTypeName","pathNode":{"id":4973,"name":"Point","nameLocations":["6617:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"6617:5:22"},"referencedDeclaration":5014,"src":"6617:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"src":"6616:14:22"},"scope":5007,"src":"6557:135:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5005,"nodeType":"Block","src":"6925:45:22","statements":[{"expression":{"arguments":[{"id":4998,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"6949:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4999,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"6953:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5000,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"6957:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6953:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5002,"name":"Q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"6961:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4997,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"6942:6:22","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6942:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4996,"id":5004,"nodeType":"Return","src":"6935:28:22"}]},"documentation":{"id":4988,"nodeType":"StructuredDocumentation","src":"6698:150:22","text":" @dev Modular subtract (mod n).\n @param _a The first number\n @param _b The number to be subtracted\n @return result"},"id":5006,"implemented":true,"kind":"function","modifiers":[],"name":"submod","nameLocation":"6862:6:22","nodeType":"FunctionDefinition","parameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"_a","nameLocation":"6877:2:22","nodeType":"VariableDeclaration","scope":5006,"src":"6869:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4989,"name":"uint256","nodeType":"ElementaryTypeName","src":"6869:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4992,"mutability":"mutable","name":"_b","nameLocation":"6889:2:22","nodeType":"VariableDeclaration","scope":5006,"src":"6881:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"6881:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6868:24:22"},"returnParameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5006,"src":"6916:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"6916:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6915:9:22"},"scope":5007,"src":"6853:117:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5008,"src":"263:6709:22","usedErrors":[],"usedEvents":[]}],"src":"134:6839:22"},"id":22},"contracts/types/Types.sol":{"ast":{"absolutePath":"contracts/types/Types.sol","exportedSymbols":{"AmountPCT":[5040],"BalanceHistory":[5066],"BurnProof":[5121],"CreateEncryptedERCParams":[5033],"EGCT":[5073],"EncryptedBalance":[5061],"MintProof":[5105],"Point":[5014],"ProofPoints":[5089],"RegisterProof":[5097],"TransferInputs":[5143],"TransferProof":[5113],"WithdrawProof":[5129]},"id":5144,"license":"Ecosystem","nodeType":"SourceUnit","nodes":[{"id":5009,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"134:23:23"},{"canonicalName":"Point","id":5014,"members":[{"constant":false,"id":5011,"mutability":"mutable","name":"x","nameLocation":"186:1:23","nodeType":"VariableDeclaration","scope":5014,"src":"178:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"178:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5013,"mutability":"mutable","name":"y","nameLocation":"201:1:23","nodeType":"VariableDeclaration","scope":5014,"src":"193:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5012,"name":"uint256","nodeType":"ElementaryTypeName","src":"193:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Point","nameLocation":"166:5:23","nodeType":"StructDefinition","scope":5144,"src":"159:46:23","visibility":"public"},{"canonicalName":"CreateEncryptedERCParams","id":5033,"members":[{"constant":false,"id":5016,"mutability":"mutable","name":"registrar","nameLocation":"317:9:23","nodeType":"VariableDeclaration","scope":5033,"src":"309:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5015,"name":"address","nodeType":"ElementaryTypeName","src":"309:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5018,"mutability":"mutable","name":"isConverter","nameLocation":"374:11:23","nodeType":"VariableDeclaration","scope":5033,"src":"369:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5017,"name":"bool","nodeType":"ElementaryTypeName","src":"369:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5020,"mutability":"mutable","name":"name","nameLocation":"416:4:23","nodeType":"VariableDeclaration","scope":5033,"src":"409:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5019,"name":"string","nodeType":"ElementaryTypeName","src":"409:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5022,"mutability":"mutable","name":"symbol","nameLocation":"433:6:23","nodeType":"VariableDeclaration","scope":5033,"src":"426:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5021,"name":"string","nodeType":"ElementaryTypeName","src":"426:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5024,"mutability":"mutable","name":"decimals","nameLocation":"451:8:23","nodeType":"VariableDeclaration","scope":5033,"src":"445:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5023,"name":"uint8","nodeType":"ElementaryTypeName","src":"445:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5026,"mutability":"mutable","name":"mintVerifier","nameLocation":"490:12:23","nodeType":"VariableDeclaration","scope":5033,"src":"482:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5025,"name":"address","nodeType":"ElementaryTypeName","src":"482:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5028,"mutability":"mutable","name":"withdrawVerifier","nameLocation":"516:16:23","nodeType":"VariableDeclaration","scope":5033,"src":"508:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5027,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5030,"mutability":"mutable","name":"transferVerifier","nameLocation":"546:16:23","nodeType":"VariableDeclaration","scope":5033,"src":"538:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5029,"name":"address","nodeType":"ElementaryTypeName","src":"538:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5032,"mutability":"mutable","name":"burnVerifier","nameLocation":"576:12:23","nodeType":"VariableDeclaration","scope":5033,"src":"568:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5031,"name":"address","nodeType":"ElementaryTypeName","src":"568:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CreateEncryptedERCParams","nameLocation":"214:24:23","nodeType":"StructDefinition","scope":5144,"src":"207:384:23","visibility":"public"},{"canonicalName":"AmountPCT","id":5040,"members":[{"constant":false,"id":5037,"mutability":"mutable","name":"pct","nameLocation":"627:3:23","nodeType":"VariableDeclaration","scope":5040,"src":"616:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":5034,"name":"uint256","nodeType":"ElementaryTypeName","src":"616:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5036,"length":{"hexValue":"37","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"624:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"616:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"},{"constant":false,"id":5039,"mutability":"mutable","name":"index","nameLocation":"644:5:23","nodeType":"VariableDeclaration","scope":5040,"src":"636:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"636:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AmountPCT","nameLocation":"600:9:23","nodeType":"StructDefinition","scope":5144,"src":"593:59:23","visibility":"public"},{"canonicalName":"EncryptedBalance","id":5061,"members":[{"constant":false,"id":5043,"mutability":"mutable","name":"eGCT","nameLocation":"689:4:23","nodeType":"VariableDeclaration","scope":5061,"src":"684:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"},"typeName":{"id":5042,"nodeType":"UserDefinedTypeName","pathNode":{"id":5041,"name":"EGCT","nameLocations":["684:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"684:4:23"},"referencedDeclaration":5073,"src":"684:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":5048,"mutability":"mutable","name":"balanceList","nameLocation":"748:11:23","nodeType":"VariableDeclaration","scope":5061,"src":"699:60:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BalanceHistory_$5066_storage_$","typeString":"mapping(uint256 => struct BalanceHistory)"},"typeName":{"id":5047,"keyName":"index","keyNameLocation":"715:5:23","keyType":{"id":5044,"name":"uint256","nodeType":"ElementaryTypeName","src":"707:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"699:48:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BalanceHistory_$5066_storage_$","typeString":"mapping(uint256 => struct BalanceHistory)"},"valueName":"history","valueNameLocation":"739:7:23","valueType":{"id":5046,"nodeType":"UserDefinedTypeName","pathNode":{"id":5045,"name":"BalanceHistory","nameLocations":["724:14:23"],"nodeType":"IdentifierPath","referencedDeclaration":5066,"src":"724:14:23"},"referencedDeclaration":5066,"src":"724:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_BalanceHistory_$5066_storage_ptr","typeString":"struct BalanceHistory"}}},"visibility":"internal"},{"constant":false,"id":5050,"mutability":"mutable","name":"nonce","nameLocation":"773:5:23","nodeType":"VariableDeclaration","scope":5061,"src":"765:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5052,"mutability":"mutable","name":"transactionIndex","nameLocation":"792:16:23","nodeType":"VariableDeclaration","scope":5061,"src":"784:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5056,"mutability":"mutable","name":"balancePCT","nameLocation":"825:10:23","nodeType":"VariableDeclaration","scope":5061,"src":"814:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5055,"length":{"hexValue":"37","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"822:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"814:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"},{"constant":false,"id":5060,"mutability":"mutable","name":"amountPCTs","nameLocation":"874:10:23","nodeType":"VariableDeclaration","scope":5061,"src":"862:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr","typeString":"struct AmountPCT[]"},"typeName":{"baseType":{"id":5058,"nodeType":"UserDefinedTypeName","pathNode":{"id":5057,"name":"AmountPCT","nameLocations":["862:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":5040,"src":"862:9:23"},"referencedDeclaration":5040,"src":"862:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_AmountPCT_$5040_storage_ptr","typeString":"struct AmountPCT"}},"id":5059,"nodeType":"ArrayTypeName","src":"862:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AmountPCT_$5040_storage_$dyn_storage_ptr","typeString":"struct AmountPCT[]"}},"visibility":"internal"}],"name":"EncryptedBalance","nameLocation":"661:16:23","nodeType":"StructDefinition","scope":5144,"src":"654:253:23","visibility":"public"},{"canonicalName":"BalanceHistory","id":5066,"members":[{"constant":false,"id":5063,"mutability":"mutable","name":"index","nameLocation":"945:5:23","nodeType":"VariableDeclaration","scope":5066,"src":"937:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5065,"mutability":"mutable","name":"isValid","nameLocation":"961:7:23","nodeType":"VariableDeclaration","scope":5066,"src":"956:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5064,"name":"bool","nodeType":"ElementaryTypeName","src":"956:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BalanceHistory","nameLocation":"916:14:23","nodeType":"StructDefinition","scope":5144,"src":"909:62:23","visibility":"public"},{"canonicalName":"EGCT","id":5073,"members":[{"constant":false,"id":5069,"mutability":"mutable","name":"c1","nameLocation":"997:2:23","nodeType":"VariableDeclaration","scope":5073,"src":"991:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"},"typeName":{"id":5068,"nodeType":"UserDefinedTypeName","pathNode":{"id":5067,"name":"Point","nameLocations":["991:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"991:5:23"},"referencedDeclaration":5014,"src":"991:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"},{"constant":false,"id":5072,"mutability":"mutable","name":"c2","nameLocation":"1011:2:23","nodeType":"VariableDeclaration","scope":5073,"src":"1005:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"},"typeName":{"id":5071,"nodeType":"UserDefinedTypeName","pathNode":{"id":5070,"name":"Point","nameLocations":["1005:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"1005:5:23"},"referencedDeclaration":5014,"src":"1005:5:23","typeDescriptions":{"typeIdentifier":"t_struct$_Point_$5014_storage_ptr","typeString":"struct Point"}},"visibility":"internal"}],"name":"EGCT","nameLocation":"980:4:23","nodeType":"StructDefinition","scope":5144,"src":"973:43:23","visibility":"public"},{"canonicalName":"ProofPoints","documentation":{"id":5074,"nodeType":"StructuredDocumentation","src":"1018:52:23","text":"@dev The proof base is used to verify the proof"},"id":5089,"members":[{"constant":false,"id":5078,"mutability":"mutable","name":"a","nameLocation":"1106:1:23","nodeType":"VariableDeclaration","scope":5089,"src":"1095:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":5075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1095:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5077,"length":{"hexValue":"32","id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1103:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1095:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":5084,"mutability":"mutable","name":"b","nameLocation":"1127:1:23","nodeType":"VariableDeclaration","scope":5089,"src":"1113:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1113:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5081,"length":{"hexValue":"32","id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1121:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1113:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":5083,"length":{"hexValue":"32","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1124:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1113:13:23","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":5088,"mutability":"mutable","name":"c","nameLocation":"1145:1:23","nodeType":"VariableDeclaration","scope":5089,"src":"1134:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":5085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5087,"length":{"hexValue":"32","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1142:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1134:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"name":"ProofPoints","nameLocation":"1077:11:23","nodeType":"StructDefinition","scope":5144,"src":"1070:79:23","visibility":"public"},{"canonicalName":"RegisterProof","id":5097,"members":[{"constant":false,"id":5092,"mutability":"mutable","name":"proofPoints","nameLocation":"1190:11:23","nodeType":"VariableDeclaration","scope":5097,"src":"1178:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_storage_ptr","typeString":"struct ProofPoints"},"typeName":{"id":5091,"nodeType":"UserDefinedTypeName","pathNode":{"id":5090,"name":"ProofPoints","nameLocations":["1178:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":5089,"src":"1178:11:23"},"referencedDeclaration":5089,"src":"1178:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_storage_ptr","typeString":"struct ProofPoints"}},"visibility":"internal"},{"constant":false,"id":5096,"mutability":"mutable","name":"publicSignals","nameLocation":"1218:13:23","nodeType":"VariableDeclaration","scope":5097,"src":"1207:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_storage_ptr","typeString":"uint256[5]"},"typeName":{"baseType":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5095,"length":{"hexValue":"35","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1215:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"1207:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_storage_ptr","typeString":"uint256[5]"}},"visibility":"internal"}],"name":"RegisterProof","nameLocation":"1158:13:23","nodeType":"StructDefinition","scope":5144,"src":"1151:83:23","visibility":"public"},{"canonicalName":"MintProof","id":5105,"members":[{"constant":false,"id":5100,"mutability":"mutable","name":"proofPoints","nameLocation":"1271:11:23","nodeType":"VariableDeclaration","scope":5105,"src":"1259:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_storage_ptr","typeString":"struct ProofPoints"},"typeName":{"id":5099,"nodeType":"UserDefinedTypeName","pathNode":{"id":5098,"name":"ProofPoints","nameLocations":["1259:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":5089,"src":"1259:11:23"},"referencedDeclaration":5089,"src":"1259:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_storage_ptr","typeString":"struct ProofPoints"}},"visibility":"internal"},{"constant":false,"id":5104,"mutability":"mutable","name":"publicSignals","nameLocation":"1300:13:23","nodeType":"VariableDeclaration","scope":5105,"src":"1288:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage_ptr","typeString":"uint256[24]"},"typeName":{"baseType":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1288:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5103,"length":{"hexValue":"3234","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"ArrayTypeName","src":"1288:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$24_storage_ptr","typeString":"uint256[24]"}},"visibility":"internal"}],"name":"MintProof","nameLocation":"1243:9:23","nodeType":"StructDefinition","scope":5144,"src":"1236:80:23","visibility":"public"},{"canonicalName":"TransferProof","id":5113,"members":[{"constant":false,"id":5108,"mutability":"mutable","name":"proofPoints","nameLocation":"1357:11:23","nodeType":"VariableDeclaration","scope":5113,"src":"1345:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_storage_ptr","typeString":"struct ProofPoints"},"typeName":{"id":5107,"nodeType":"UserDefinedTypeName","pathNode":{"id":5106,"name":"ProofPoints","nameLocations":["1345:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":5089,"src":"1345:11:23"},"referencedDeclaration":5089,"src":"1345:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_storage_ptr","typeString":"struct ProofPoints"}},"visibility":"internal"},{"constant":false,"id":5112,"mutability":"mutable","name":"publicSignals","nameLocation":"1386:13:23","nodeType":"VariableDeclaration","scope":5113,"src":"1374:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_storage_ptr","typeString":"uint256[32]"},"typeName":{"baseType":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1374:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5111,"length":{"hexValue":"3332","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1382:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"ArrayTypeName","src":"1374:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$32_storage_ptr","typeString":"uint256[32]"}},"visibility":"internal"}],"name":"TransferProof","nameLocation":"1325:13:23","nodeType":"StructDefinition","scope":5144,"src":"1318:84:23","visibility":"public"},{"canonicalName":"BurnProof","id":5121,"members":[{"constant":false,"id":5116,"mutability":"mutable","name":"proofPoints","nameLocation":"1439:11:23","nodeType":"VariableDeclaration","scope":5121,"src":"1427:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_storage_ptr","typeString":"struct ProofPoints"},"typeName":{"id":5115,"nodeType":"UserDefinedTypeName","pathNode":{"id":5114,"name":"ProofPoints","nameLocations":["1427:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":5089,"src":"1427:11:23"},"referencedDeclaration":5089,"src":"1427:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_storage_ptr","typeString":"struct ProofPoints"}},"visibility":"internal"},{"constant":false,"id":5120,"mutability":"mutable","name":"publicSignals","nameLocation":"1468:13:23","nodeType":"VariableDeclaration","scope":5121,"src":"1456:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_storage_ptr","typeString":"uint256[19]"},"typeName":{"baseType":{"id":5117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1456:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5119,"length":{"hexValue":"3139","id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1464:2:23","typeDescriptions":{"typeIdentifier":"t_rational_19_by_1","typeString":"int_const 19"},"value":"19"},"nodeType":"ArrayTypeName","src":"1456:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$19_storage_ptr","typeString":"uint256[19]"}},"visibility":"internal"}],"name":"BurnProof","nameLocation":"1411:9:23","nodeType":"StructDefinition","scope":5144,"src":"1404:80:23","visibility":"public"},{"canonicalName":"WithdrawProof","id":5129,"members":[{"constant":false,"id":5124,"mutability":"mutable","name":"proofPoints","nameLocation":"1525:11:23","nodeType":"VariableDeclaration","scope":5129,"src":"1513:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_storage_ptr","typeString":"struct ProofPoints"},"typeName":{"id":5123,"nodeType":"UserDefinedTypeName","pathNode":{"id":5122,"name":"ProofPoints","nameLocations":["1513:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":5089,"src":"1513:11:23"},"referencedDeclaration":5089,"src":"1513:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_ProofPoints_$5089_storage_ptr","typeString":"struct ProofPoints"}},"visibility":"internal"},{"constant":false,"id":5128,"mutability":"mutable","name":"publicSignals","nameLocation":"1554:13:23","nodeType":"VariableDeclaration","scope":5129,"src":"1542:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_storage_ptr","typeString":"uint256[16]"},"typeName":{"baseType":{"id":5125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5127,"length":{"hexValue":"3136","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"ArrayTypeName","src":"1542:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$16_storage_ptr","typeString":"uint256[16]"}},"visibility":"internal"}],"name":"WithdrawProof","nameLocation":"1493:13:23","nodeType":"StructDefinition","scope":5144,"src":"1486:84:23","visibility":"public"},{"canonicalName":"TransferInputs","id":5143,"members":[{"constant":false,"id":5132,"mutability":"mutable","name":"providedBalance","nameLocation":"1605:15:23","nodeType":"VariableDeclaration","scope":5143,"src":"1600:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"},"typeName":{"id":5131,"nodeType":"UserDefinedTypeName","pathNode":{"id":5130,"name":"EGCT","nameLocations":["1600:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"1600:4:23"},"referencedDeclaration":5073,"src":"1600:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":5135,"mutability":"mutable","name":"senderEncryptedAmount","nameLocation":"1631:21:23","nodeType":"VariableDeclaration","scope":5143,"src":"1626:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"},"typeName":{"id":5134,"nodeType":"UserDefinedTypeName","pathNode":{"id":5133,"name":"EGCT","nameLocations":["1626:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"1626:4:23"},"referencedDeclaration":5073,"src":"1626:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":5138,"mutability":"mutable","name":"receiverEncryptedAmount","nameLocation":"1663:23:23","nodeType":"VariableDeclaration","scope":5143,"src":"1658:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"},"typeName":{"id":5137,"nodeType":"UserDefinedTypeName","pathNode":{"id":5136,"name":"EGCT","nameLocations":["1658:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"1658:4:23"},"referencedDeclaration":5073,"src":"1658:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_EGCT_$5073_storage_ptr","typeString":"struct EGCT"}},"visibility":"internal"},{"constant":false,"id":5142,"mutability":"mutable","name":"amountPCT","nameLocation":"1703:9:23","nodeType":"VariableDeclaration","scope":5143,"src":"1692:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":5139,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5141,"length":{"hexValue":"37","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1700:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"1692:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"name":"TransferInputs","nameLocation":"1579:14:23","nodeType":"StructDefinition","scope":5144,"src":"1572:143:23","visibility":"public"}],"src":"134:1582:23"},"id":23}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable2Step.sol":{"Ownable2Step":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f984a503409f6d4e41a51ac5ba79e498e83666fe75481ddd02ce9270c8f1102764736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP5 0xA5 SUB BLOCKHASH SWAP16 PUSH14 0x4E41A51AC5BA79E498E83666FE75 BASEFEE SAR 0xDD MUL 0xCE SWAP3 PUSH17 0xC8F1102764736F6C634300081B00330000 ","sourceMap":"698:9376:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f984a503409f6d4e41a51ac5ba79e498e83666fe75481ddd02ce9270c8f1102764736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP5 0xA5 SUB BLOCKHASH SWAP16 PUSH14 0x4E41A51AC5BA79E498E83666FE75 BASEFEE SAR 0xDD MUL 0xCE SWAP3 PUSH17 0xC8F1102764736F6C634300081B00330000 ","sourceMap":"698:9376:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"contracts/core/AuditorManager.sol":{"AuditorManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAuditor","type":"address"},{"indexed":true,"internalType":"address","name":"newAuditor","type":"address"}],"name":"AuditorChanged","type":"event"},{"inputs":[],"name":"auditor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"auditorPublicKey","outputs":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isAuditorKeySet","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"auditor()":"3ec045a6","auditorPublicKey()":"91584d49","isAuditorKeySet()":"034a1c18"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAuditor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAuditor\",\"type\":\"address\"}],\"name\":\"AuditorChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"auditor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auditorPublicKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAuditorKeySet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is responsible for:      1. Storing and managing the auditor's address and public key      2. Providing access control for auditor-related operations      3. Emitting events when auditor information changes The auditor is a crucial component in the encrypted ERC system that: - Ensures compliance with regulatory requirements - Provides oversight for private operations\",\"events\":{\"AuditorChanged(address,address)\":{\"params\":{\"newAuditor\":\"The new auditor's address\",\"oldAuditor\":\"The previous auditor's address\"}}},\"kind\":\"dev\",\"methods\":{\"isAuditorKeySet()\":{\"details\":\"This function is used to verify if the contract is ready for      operations that require auditor validation\",\"returns\":{\"_0\":\"bool True if the auditor's public key is set and valid\"}}},\"stateVariables\":{\"auditor\":{\"details\":\"This address is used to identify the auditor and for access control\"},\"auditorPublicKey\":{\"details\":\"This is used in zero-knowledge proofs to validate auditor signatures      The point (0,1) is considered invalid as it's the identity point in the elliptic curve\"}},\"title\":\"AuditorManager\",\"version\":1},\"userdoc\":{\"events\":{\"AuditorChanged(address,address)\":{\"notice\":\"Emitted when the auditor's information is updated\"}},\"kind\":\"user\",\"methods\":{\"auditor()\":{\"notice\":\"The address of the current auditor\"},\"auditorPublicKey()\":{\"notice\":\"The public key of the current auditor\"},\"isAuditorKeySet()\":{\"notice\":\"Checks if the auditor's public key is properly set\"}},\"notice\":\"Abstract contract that manages auditor-related functionality for encrypted ERC operations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/AuditorManager.sol\":\"AuditorManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/AuditorManager.sol\":{\"keccak256\":\"0x8ef789a523bc20720c885900e90775324de9f6c47ab575d0769807d2fed0b78f\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://3a8aaafcee8093f70f6d4501ed0efd5ff58388541049ac2760589ccf24c55ac6\",\"dweb:/ipfs/QmeWNZ83GhZQei2R6dNRZWxjAWTVKQA6LRrwbQSa91CGAB\"]},\"contracts/errors/Errors.sol\":{\"keccak256\":\"0x927b7cc1dd72c518b300006a54c1803151c039a1529da8eedf59650059a21774\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://fe443cd55953c874054a3f0875b1eef9e3856a0c5e9905def44c5ea975cf1f91\",\"dweb:/ipfs/QmbVsF2ChKaxu4rPctxt3u6UQHCSg47uK7e7RmAHnRqxi6\"]},\"contracts/types/Types.sol\":{\"keccak256\":\"0x2327a499d5e63c8dad204c0d13b17cb8d3f913578a9a889b640be7276f42384d\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://c74b01811db798e34e30d6f65e072a6e5acfe0c28e9f98404be8a30ac43782b4\",\"dweb:/ipfs/QmdfTgJhnLE2frgUHoRTovG1CZWNZWmmzR2fnwvzEUVvw3\"]}},\"version\":1}"}},"contracts/core/EncryptedUserBalances.sol":{"EncryptedUserBalances":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"balanceOf","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c1","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c2","type":"tuple"}],"internalType":"struct EGCT","name":"eGCT","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"components":[{"internalType":"uint256[7]","name":"pct","type":"uint256[7]"},{"internalType":"uint256","name":"index","type":"uint256"}],"internalType":"struct AmountPCT[]","name":"amountPCTs","type":"tuple[]"},{"internalType":"uint256[7]","name":"balancePCT","type":"uint256[7]"},{"internalType":"uint256","name":"transactionIndex","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"balanceOfStandalone","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c1","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c2","type":"tuple"}],"internalType":"struct EGCT","name":"eGCT","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"components":[{"internalType":"uint256[7]","name":"pct","type":"uint256[7]"},{"internalType":"uint256","name":"index","type":"uint256"}],"internalType":"struct AmountPCT[]","name":"amountPCTs","type":"tuple[]"},{"internalType":"uint256[7]","name":"balancePCT","type":"uint256[7]"},{"internalType":"uint256","name":"transactionIndex","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"balances","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c1","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c2","type":"tuple"}],"internalType":"struct EGCT","name":"eGCT","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"transactionIndex","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601557610523908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e14610203578063a865d5b2146100cc5763cbf1304d1461003c57600080fd5b346100c75760403660031901126100c7576001600160a01b0361005d6102fb565b166000526000602052604060002060243560005260205260c0604060002061008481610446565b9060066005820154910154906100bb6040518094602080606092818151805187520151828601520151805160408501520151910152565b608083015260a0820152f35b600080fd5b346100c75760203660031901126100c75760406100e76102fb565b6100ef610472565b5060e0908183516101008282610406565b36903760009161010e610472565b50835161011b8282610406565b3690376001600160a01b03168152602081815282822082805290522060058101546006820154600e8301929061015082610446565b9184549067ffffffffffffffff82116101ed576040519161017760208260051b0184610406565b80835260208301966000526020600020966000905b8282106101b857505050906101a760076101b49493016104b6565b9060405195869586610311565b0390f35b600860206001926040516101cb816103ea565b6101d48d6104b6565b815260078d01548382015281520199019101909761018c565b634e487b7160e01b600052604160045260246000fd5b346100c75760403660031901126100c757604061021e6102fb565b600090610229610472565b5060e083516102388282610406565b3690376001600160a01b031681526020818152828220602435835290522060058101546006820154600e8301929061026f82610446565b9184549067ffffffffffffffff82116101ed576040519161029660208260051b0184610406565b80835260208301966000526020600020966000905b8282106102c657505050906101a760076101b49493016104b6565b600860206001926040516102d9816103ea565b6102e28d6104b6565b815260078d0154838201528152019901910190976102ab565b600435906001600160a01b03821682036100c757565b929195949395610344846101c0810193602080606092818151805187520151828601520151805160408501520151910152565b60808401526101c060a0840152815180915260206101e0840192019060005b81811061039e575050509360c082016000905b60078210610388575050506101a00152565b6020806001928551815201930191019091610376565b9091928351805182906000915b600783106103d45750505061010060019260208093015160e08201520194019101919091610363565b60208060019284518152019201920191906103ab565b6040810190811067ffffffffffffffff8211176101ed57604052565b90601f8019910116810190811067ffffffffffffffff8211176101ed57604052565b90604051610435816103ea565b602060018294805484520154910152565b90604051610453816103ea565b602061046d6002839561046581610428565b855201610428565b910152565b6040519061047f826103ea565b8160405161048c816103ea565b600081526000602082015281526020604051916104a8836103ea565b600083526000828401520152565b60405191906000835b600782106104d7575050506104d560e083610406565b565b60016020819285548152019301910190916104bf56fea2646970667358221220ee71062fd9ccea35ef7679aabe68e5bf271a6ba409fc2be2fd737c55c05f69dc64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x523 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xA865D5B2 EQ PUSH2 0xCC JUMPI PUSH4 0xCBF1304D EQ PUSH2 0x3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5D PUSH2 0x2FB JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xC0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x84 DUP2 PUSH2 0x446 JUMP JUMPDEST SWAP1 PUSH1 0x6 PUSH1 0x5 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0xBB PUSH1 0x40 MLOAD DUP1 SWAP5 PUSH1 0x20 DUP1 PUSH1 0x60 SWAP3 DUP2 DUP2 MLOAD DUP1 MLOAD DUP8 MSTORE ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC7 JUMPI PUSH1 0x40 PUSH2 0xE7 PUSH2 0x2FB JUMP JUMPDEST PUSH2 0xEF PUSH2 0x472 JUMP JUMPDEST POP PUSH1 0xE0 SWAP1 DUP2 DUP4 MLOAD PUSH2 0x100 DUP3 DUP3 PUSH2 0x406 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x0 SWAP2 PUSH2 0x10E PUSH2 0x472 JUMP JUMPDEST POP DUP4 MLOAD PUSH2 0x11B DUP3 DUP3 PUSH2 0x406 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP3 DUP1 MSTORE SWAP1 MSTORE KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xE DUP4 ADD SWAP3 SWAP1 PUSH2 0x150 DUP3 PUSH2 0x446 JUMP JUMPDEST SWAP2 DUP5 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1ED JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x177 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x406 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP7 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1B8 JUMPI POP POP POP SWAP1 PUSH2 0x1A7 PUSH1 0x7 PUSH2 0x1B4 SWAP5 SWAP4 ADD PUSH2 0x4B6 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 PUSH2 0x311 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1CB DUP2 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x1D4 DUP14 PUSH2 0x4B6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP14 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP10 ADD SWAP2 ADD SWAP1 SWAP8 PUSH2 0x18C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC7 JUMPI PUSH1 0x40 PUSH2 0x21E PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x229 PUSH2 0x472 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 MLOAD PUSH2 0x238 DUP3 DUP3 PUSH2 0x406 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE SWAP1 MSTORE KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xE DUP4 ADD SWAP3 SWAP1 PUSH2 0x26F DUP3 PUSH2 0x446 JUMP JUMPDEST SWAP2 DUP5 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1ED JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x296 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x406 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP7 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2C6 JUMPI POP POP POP SWAP1 PUSH2 0x1A7 PUSH1 0x7 PUSH2 0x1B4 SWAP5 SWAP4 ADD PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x2D9 DUP2 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x2E2 DUP14 PUSH2 0x4B6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP14 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP10 ADD SWAP2 ADD SWAP1 SWAP8 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC7 JUMPI JUMP JUMPDEST SWAP3 SWAP2 SWAP6 SWAP5 SWAP4 SWAP6 PUSH2 0x344 DUP5 PUSH2 0x1C0 DUP2 ADD SWAP4 PUSH1 0x20 DUP1 PUSH1 0x60 SWAP3 DUP2 DUP2 MLOAD DUP1 MLOAD DUP8 MSTORE ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1C0 PUSH1 0xA0 DUP5 ADD MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH2 0x1E0 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x39E JUMPI POP POP POP SWAP4 PUSH1 0xC0 DUP3 ADD PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x7 DUP3 LT PUSH2 0x388 JUMPI POP POP POP PUSH2 0x1A0 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP6 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x376 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP4 MLOAD DUP1 MLOAD DUP3 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x7 DUP4 LT PUSH2 0x3D4 JUMPI POP POP POP PUSH2 0x100 PUSH1 0x1 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP5 MLOAD DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x435 DUP2 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x453 DUP2 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x20 PUSH2 0x46D PUSH1 0x2 DUP4 SWAP6 PUSH2 0x465 DUP2 PUSH2 0x428 JUMP JUMPDEST DUP6 MSTORE ADD PUSH2 0x428 JUMP JUMPDEST SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x47F DUP3 PUSH2 0x3EA JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH2 0x48C DUP2 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x4A8 DUP4 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH1 0x0 DUP3 DUP5 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x7 DUP3 LT PUSH2 0x4D7 JUMPI POP POP POP PUSH2 0x4D5 PUSH1 0xE0 DUP4 PUSH2 0x406 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x4BF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH18 0x62FD9CCEA35EF7679AABE68E5BF271A6BA4 MULMOD 0xFC 0x2B 0xE2 REVERT PUSH20 0x7C55C05F69DC64736F6C634300081B0033000000 ","sourceMap":"864:11350:11:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":763,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_struct_EGCT":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_EGCT_uint256_array_struct_AmountPCT_dyn_array_uint256_uint256":{"entryPoint":785,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_and_zero_memory_struct_struct_EGCT":{"entryPoint":1138,"id":null,"parameterSlots":0,"returnSlots":1},"copy_array_from_storage_to_memory_array_uint":{"entryPoint":1206,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1030,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_2219":{"entryPoint":1002,"id":null,"parameterSlots":1,"returnSlots":0},"read_from_storage_reference_type_struct_EGCT":{"entryPoint":1094,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Point":{"entryPoint":1064,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8062fdd58e14610203578063a865d5b2146100cc5763cbf1304d1461003c57600080fd5b346100c75760403660031901126100c7576001600160a01b0361005d6102fb565b166000526000602052604060002060243560005260205260c0604060002061008481610446565b9060066005820154910154906100bb6040518094602080606092818151805187520151828601520151805160408501520151910152565b608083015260a0820152f35b600080fd5b346100c75760203660031901126100c75760406100e76102fb565b6100ef610472565b5060e0908183516101008282610406565b36903760009161010e610472565b50835161011b8282610406565b3690376001600160a01b03168152602081815282822082805290522060058101546006820154600e8301929061015082610446565b9184549067ffffffffffffffff82116101ed576040519161017760208260051b0184610406565b80835260208301966000526020600020966000905b8282106101b857505050906101a760076101b49493016104b6565b9060405195869586610311565b0390f35b600860206001926040516101cb816103ea565b6101d48d6104b6565b815260078d01548382015281520199019101909761018c565b634e487b7160e01b600052604160045260246000fd5b346100c75760403660031901126100c757604061021e6102fb565b600090610229610472565b5060e083516102388282610406565b3690376001600160a01b031681526020818152828220602435835290522060058101546006820154600e8301929061026f82610446565b9184549067ffffffffffffffff82116101ed576040519161029660208260051b0184610406565b80835260208301966000526020600020966000905b8282106102c657505050906101a760076101b49493016104b6565b600860206001926040516102d9816103ea565b6102e28d6104b6565b815260078d0154838201528152019901910190976102ab565b600435906001600160a01b03821682036100c757565b929195949395610344846101c0810193602080606092818151805187520151828601520151805160408501520151910152565b60808401526101c060a0840152815180915260206101e0840192019060005b81811061039e575050509360c082016000905b60078210610388575050506101a00152565b6020806001928551815201930191019091610376565b9091928351805182906000915b600783106103d45750505061010060019260208093015160e08201520194019101919091610363565b60208060019284518152019201920191906103ab565b6040810190811067ffffffffffffffff8211176101ed57604052565b90601f8019910116810190811067ffffffffffffffff8211176101ed57604052565b90604051610435816103ea565b602060018294805484520154910152565b90604051610453816103ea565b602061046d6002839561046581610428565b855201610428565b910152565b6040519061047f826103ea565b8160405161048c816103ea565b600081526000602082015281526020604051916104a8836103ea565b600083526000828401520152565b60405191906000835b600782106104d7575050506104d560e083610406565b565b60016020819285548152019301910190916104bf56fea2646970667358221220ee71062fd9ccea35ef7679aabe68e5bf271a6ba409fc2be2fd737c55c05f69dc64736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xA865D5B2 EQ PUSH2 0xCC JUMPI PUSH4 0xCBF1304D EQ PUSH2 0x3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5D PUSH2 0x2FB JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xC0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x84 DUP2 PUSH2 0x446 JUMP JUMPDEST SWAP1 PUSH1 0x6 PUSH1 0x5 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0xBB PUSH1 0x40 MLOAD DUP1 SWAP5 PUSH1 0x20 DUP1 PUSH1 0x60 SWAP3 DUP2 DUP2 MLOAD DUP1 MLOAD DUP8 MSTORE ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC7 JUMPI PUSH1 0x40 PUSH2 0xE7 PUSH2 0x2FB JUMP JUMPDEST PUSH2 0xEF PUSH2 0x472 JUMP JUMPDEST POP PUSH1 0xE0 SWAP1 DUP2 DUP4 MLOAD PUSH2 0x100 DUP3 DUP3 PUSH2 0x406 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x0 SWAP2 PUSH2 0x10E PUSH2 0x472 JUMP JUMPDEST POP DUP4 MLOAD PUSH2 0x11B DUP3 DUP3 PUSH2 0x406 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP3 DUP1 MSTORE SWAP1 MSTORE KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xE DUP4 ADD SWAP3 SWAP1 PUSH2 0x150 DUP3 PUSH2 0x446 JUMP JUMPDEST SWAP2 DUP5 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1ED JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x177 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x406 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP7 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1B8 JUMPI POP POP POP SWAP1 PUSH2 0x1A7 PUSH1 0x7 PUSH2 0x1B4 SWAP5 SWAP4 ADD PUSH2 0x4B6 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 PUSH2 0x311 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1CB DUP2 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x1D4 DUP14 PUSH2 0x4B6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP14 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP10 ADD SWAP2 ADD SWAP1 SWAP8 PUSH2 0x18C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC7 JUMPI PUSH1 0x40 PUSH2 0x21E PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x229 PUSH2 0x472 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 MLOAD PUSH2 0x238 DUP3 DUP3 PUSH2 0x406 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP4 MSTORE SWAP1 MSTORE KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xE DUP4 ADD SWAP3 SWAP1 PUSH2 0x26F DUP3 PUSH2 0x446 JUMP JUMPDEST SWAP2 DUP5 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1ED JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x296 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x406 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP7 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2C6 JUMPI POP POP POP SWAP1 PUSH2 0x1A7 PUSH1 0x7 PUSH2 0x1B4 SWAP5 SWAP4 ADD PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x2D9 DUP2 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x2E2 DUP14 PUSH2 0x4B6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP14 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP10 ADD SWAP2 ADD SWAP1 SWAP8 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC7 JUMPI JUMP JUMPDEST SWAP3 SWAP2 SWAP6 SWAP5 SWAP4 SWAP6 PUSH2 0x344 DUP5 PUSH2 0x1C0 DUP2 ADD SWAP4 PUSH1 0x20 DUP1 PUSH1 0x60 SWAP3 DUP2 DUP2 MLOAD DUP1 MLOAD DUP8 MSTORE ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1C0 PUSH1 0xA0 DUP5 ADD MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH2 0x1E0 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x39E JUMPI POP POP POP SWAP4 PUSH1 0xC0 DUP3 ADD PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x7 DUP3 LT PUSH2 0x388 JUMPI POP POP POP PUSH2 0x1A0 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP6 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x376 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP4 MLOAD DUP1 MLOAD DUP3 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x7 DUP4 LT PUSH2 0x3D4 JUMPI POP POP POP PUSH2 0x100 PUSH1 0x1 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP5 MLOAD DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x435 DUP2 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x453 DUP2 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x20 PUSH2 0x46D PUSH1 0x2 DUP4 SWAP6 PUSH2 0x465 DUP2 PUSH2 0x428 JUMP JUMPDEST DUP6 MSTORE ADD PUSH2 0x428 JUMP JUMPDEST SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x47F DUP3 PUSH2 0x3EA JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH2 0x48C DUP2 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x4A8 DUP4 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH1 0x0 DUP3 DUP5 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x7 DUP3 LT PUSH2 0x4D7 JUMPI POP POP POP PUSH2 0x4D5 PUSH1 0xE0 DUP4 PUSH2 0x406 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x4BF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH18 0x62FD9CCEA35EF7679AABE68E5BF271A6BA4 MULMOD 0xFC 0x2B 0xE2 REVERT PUSH20 0x7C55C05F69DC64736F6C634300081B0033000000 ","sourceMap":"864:11350:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;864:11350:11;;;;-1:-1:-1;;;;;864:11350:11;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1215:101;;;:::i;:::-;;;;;;864:11350;1215:101;;864:11350;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;864:11350:11;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2306:18;864:11350;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;864:11350:11;;;;;;;;;;;;;;;;;3251:13;;864:11350;3342:24;;;864:11350;3278:18;;;;864:11350;;;;:::i;:::-;3204:172;864:11350;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3204:172;;;;864:11350;;;3204:172;;3310:18;864:11350;:::i;:::-;3204:172;864:11350;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;864:11350:11;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;864:11350:11;;;;;;;;;;;;;;;;;;3251:13;;864:11350;3342:24;;;864:11350;3278:18;;;;864:11350;;;;:::i;:::-;3204:172;864:11350;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3204:172;;;;864:11350;;;3204:172;;3310:18;864:11350;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;864:11350:11;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;864:11350:11;;-1:-1:-1;864:11350:11;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;864:11350:11;;-1:-1:-1;864:11350:11;;;;;;:::o;:::-;;;;;-1:-1:-1;864:11350:11;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfStandalone(address)":"a865d5b2","balances(address,uint256)":"cbf1304d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c2\",\"type\":\"tuple\"}],\"internalType\":\"struct EGCT\",\"name\":\"eGCT\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[7]\",\"name\":\"pct\",\"type\":\"uint256[7]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct AmountPCT[]\",\"name\":\"amountPCTs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[7]\",\"name\":\"balancePCT\",\"type\":\"uint256[7]\"},{\"internalType\":\"uint256\",\"name\":\"transactionIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOfStandalone\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c2\",\"type\":\"tuple\"}],\"internalType\":\"struct EGCT\",\"name\":\"eGCT\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[7]\",\"name\":\"pct\",\"type\":\"uint256[7]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct AmountPCT[]\",\"name\":\"amountPCTs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[7]\",\"name\":\"balancePCT\",\"type\":\"uint256[7]\"},{\"internalType\":\"uint256\",\"name\":\"transactionIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"balances\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c2\",\"type\":\"tuple\"}],\"internalType\":\"struct EGCT\",\"name\":\"eGCT\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transactionIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract handles:      1. Storage and retrieval of encrypted balances      2. Balance history tracking for transaction validation      3. Cryptographic operations on encrypted balances The contract uses ElGamal encryption (EGCT) to store balances privately, allowing users to prove they have sufficient funds without revealing the actual amount.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"tokenId\":\"The ID of the token\",\"user\":\"The address of the user\"},\"returns\":{\"amountPCTs\":\"Array of amount PCT\",\"balancePCT\":\"The current balance PCT\",\"eGCT\":\"The ElGamal ciphertext representing the encrypted balance\",\"nonce\":\"The current nonce used for balance validation\",\"transactionIndex\":\"The current transaction index\"}},\"balanceOfStandalone(address)\":{\"details\":\"Since in standalone mode, the tokenId is always 0\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"amountPCTs\":\"Array of amount PCT\",\"balancePCT\":\"The current balance PCT\",\"eGCT\":\"The ElGamal ciphertext representing the encrypted balance\",\"nonce\":\"The current nonce used for balance validation\",\"transactionIndex\":\"The current transaction index\"}}},\"stateVariables\":{\"balances\":{\"details\":\"Structure: user => tokenId => EncryptedBalance\"}},\"title\":\"EncryptedUserBalances\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Returns the encrypted balance for a user's specified token\"},\"balanceOfStandalone(address)\":{\"notice\":\"Returns the encrypted balance for a user's standalone token\"},\"balances(address,uint256)\":{\"notice\":\"Mapping of user addresses to their encrypted balances for each token\"}},\"notice\":\"Contract for managing encrypted user balances in the privacy-preserving ERC system\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/EncryptedUserBalances.sol\":\"EncryptedUserBalances\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/EncryptedUserBalances.sol\":{\"keccak256\":\"0xa0b353a7d23b88bf260cf412e05177c7af018ec01f0e7d97ac6940f854a40fea\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://9d9ab0dbf41de6dc7f14b25b95ee7c871300a1fee6adf4423f08bc656f982acf\",\"dweb:/ipfs/QmcVChKwopVNTtadwCrFWLEqj93F2ErMYabpKbEz3ugJVg\"]},\"contracts/errors/Errors.sol\":{\"keccak256\":\"0x927b7cc1dd72c518b300006a54c1803151c039a1529da8eedf59650059a21774\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://fe443cd55953c874054a3f0875b1eef9e3856a0c5e9905def44c5ea975cf1f91\",\"dweb:/ipfs/QmbVsF2ChKaxu4rPctxt3u6UQHCSg47uK7e7RmAHnRqxi6\"]},\"contracts/libraries/BabyJubJub.sol\":{\"keccak256\":\"0xe657ab2a822a54ed0150af4c68e5b753ec7df27dc8470d607e6ae3b27de944a7\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://7e0802650f9ceeee43ac48377e5ff92dd5c698f6b4bfe75e23fc9061d4104d10\",\"dweb:/ipfs/QmcL8Pwd1HXc35kBpfKjABw6zAFdB46cvgVM4h4Jam92qK\"]},\"contracts/types/Types.sol\":{\"keccak256\":\"0x2327a499d5e63c8dad204c0d13b17cb8d3f913578a9a889b640be7276f42384d\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://c74b01811db798e34e30d6f65e072a6e5acfe0c28e9f98404be8a30ac43782b4\",\"dweb:/ipfs/QmdfTgJhnLE2frgUHoRTovG1CZWNZWmmzR2fnwvzEUVvw3\"]}},\"version\":1}"}},"contracts/core/Registrar.sol":{"Registrar":{"abi":[{"inputs":[{"internalType":"address","name":"registrationVerifier_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidChainId","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[],"name":"InvalidRegistrationHash","type":"error"},{"inputs":[],"name":"InvalidSender","type":"error"},{"inputs":[],"name":"UserAlreadyRegistered","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"indexed":false,"internalType":"struct Point","name":"publicKey","type":"tuple"}],"name":"Register","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserPublicKey","outputs":[{"internalType":"uint256[2]","name":"publicKey","type":"uint256[2]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"registrationHash","type":"uint256"}],"name":"isRegistered","outputs":[{"internalType":"bool","name":"isRegistered","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isUserRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"}],"internalType":"struct ProofPoints","name":"proofPoints","type":"tuple"},{"internalType":"uint256[5]","name":"publicSignals","type":"uint256[5]"}],"internalType":"struct RegisterProof","name":"proof","type":"tuple"}],"name":"register","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registrationVerifier","outputs":[{"internalType":"contract IRegistrationVerifier","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"userPublicKeys","outputs":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608034607057601f61072638819003918201601f19168301916001600160401b03831184841017607557808492602094604052833981010312607057516001600160a01b03811690819003607057600080546001600160a01b03191691909117905560405161069a908161008c8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806311231fe0146104f8578063163f7522146104bf57806337729b5c146101045780634cd1f470146100bd578063579a69881461008c576392d05a851461005e57600080fd5b34610087576000366003190112610087576000546040516001600160a01b039091168152602090f35b600080fd5b34610087576020366003190112610087576004356000526002602052602060ff604060002054166040519015158152f35b34610087576020366003190112610087576004356001600160a01b038116908190036100875760005260016020526040806000206001815491015482519182526020820152f35b34610087576101a036600319011261008757600061012136610628565b60408101516001600160a01b031690338290036104b057606081015146036104a1576080810151907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182101561049257818452600260205260ff60408520541680610483575b61047457600260051b9160405161019e84826105ca565b8036604411610470576004905b604482106104605750506040938451906101c586836105ca565b813660c4116103ce576000906044905b60c482106103e65750506103d2576101ef865191826105ca565b8036610104116103ce5760c4905b61010482106103be5750509161023b9261021636610628565b9060018060a01b038a54169388519586946334baeab960e01b86526004860190610570565b8a604485015b600282106103775750505061025a9060c4840190610570565b8861010483015b6005821061035d575050506101a4816020935afa908115610353578691610314575b501561030557907fa29f706235c83d457380cf21ecc4ba909fa846879eea28d1b12e4e3b82aa7590929160208251920151908351926102c184610598565b8352602083019182528587526001602052838720835181556001835191015586526002602052828620600160ff19825416179055825191518252516020820152a280f35b6309bde33960e01b8552600485fd5b90506020813d60201161034b575b8161032f602093836105ca565b81010312610347575180151581036103475786610283565b8580fd5b3d9150610322565b84513d88823e3d90fd5b829350602080916001939451815201930191018492610261565b9091929394508983518d839190915b600283106103a557505050602090600192019301910186949392610241565b815181528d935060019092019160209182019101610386565b81358152602091820191016101fd565b8880fd5b634e487b7160e01b88526041600452602488fd5b36601f8301121561045c578261044857885161040285826105ca565b808a840136811161044457918b9285949294905b80821061042e575050815292019160200190506101d5565b813586526020958601958e955090910190610416565b8d80fd5b634e487b7160e01b8b52604160045260248bfd5b8a80fd5b81358152602091820191016101ab565b8680fd5b634f2532fb60e11b8452600484fd5b5061048d836105ec565b610187565b638c45c0ad60e01b8452600484fd5b633d23e4d160e11b8352600483fd5b636edaef2f60e11b8352600483fd5b34610087576020366003190112610087576004356001600160a01b0381168103610087576104ee6020916105ec565b6040519015158152f35b34610087576020366003190112610087576004356001600160a01b038116908190036100875760409081805161052e82826105ca565b36903781519061053d82610598565b8060005260016020528260002054825260005260016020526001826000200154602082015261056e82518092610570565bf35b906000905b6002821061058257505050565b6020806001928551815201930191019091610575565b6040810190811067ffffffffffffffff8211176105b457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176105b457604052565b6001600160a01b031660008181526001602052604090205415159081610610575090565b90506000526001602052600160406000200154151590565b906040519161063860a0846105ca565b82906101a41161008757610104905b6101a48210610654575050565b813581526020918201910161064756fea264697066735822122050a2695e28c333823ec10ecf9e4147e058f8193705ecacee7ba8f183d668f73764736f6c634300081b0033","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0x70 JUMPI PUSH1 0x1F PUSH2 0x726 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0x75 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0x70 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0x70 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x69A SWAP1 DUP2 PUSH2 0x8C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11231FE0 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x163F7522 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x37729B5C EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x4CD1F470 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x579A6988 EQ PUSH2 0x8C JUMPI PUSH4 0x92D05A85 EQ PUSH2 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x87 JUMPI PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x1A0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x0 PUSH2 0x121 CALLDATASIZE PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER DUP3 SWAP1 SUB PUSH2 0x4B0 JUMPI PUSH1 0x60 DUP2 ADD MLOAD CHAINID SUB PUSH2 0x4A1 JUMPI PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP3 LT ISZERO PUSH2 0x492 JUMPI DUP2 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND DUP1 PUSH2 0x483 JUMPI JUMPDEST PUSH2 0x474 JUMPI PUSH1 0x2 PUSH1 0x5 SHL SWAP2 PUSH1 0x40 MLOAD PUSH2 0x19E DUP5 DUP3 PUSH2 0x5CA JUMP JUMPDEST DUP1 CALLDATASIZE PUSH1 0x44 GT PUSH2 0x470 JUMPI PUSH1 0x4 SWAP1 JUMPDEST PUSH1 0x44 DUP3 LT PUSH2 0x460 JUMPI POP POP PUSH1 0x40 SWAP4 DUP5 MLOAD SWAP1 PUSH2 0x1C5 DUP7 DUP4 PUSH2 0x5CA JUMP JUMPDEST DUP2 CALLDATASIZE PUSH1 0xC4 GT PUSH2 0x3CE JUMPI PUSH1 0x0 SWAP1 PUSH1 0x44 SWAP1 JUMPDEST PUSH1 0xC4 DUP3 LT PUSH2 0x3E6 JUMPI POP POP PUSH2 0x3D2 JUMPI PUSH2 0x1EF DUP7 MLOAD SWAP2 DUP3 PUSH2 0x5CA JUMP JUMPDEST DUP1 CALLDATASIZE PUSH2 0x104 GT PUSH2 0x3CE JUMPI PUSH1 0xC4 SWAP1 JUMPDEST PUSH2 0x104 DUP3 LT PUSH2 0x3BE JUMPI POP POP SWAP2 PUSH2 0x23B SWAP3 PUSH2 0x216 CALLDATASIZE PUSH2 0x628 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 SLOAD AND SWAP4 DUP9 MLOAD SWAP6 DUP7 SWAP5 PUSH4 0x34BAEAB9 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD SWAP1 PUSH2 0x570 JUMP JUMPDEST DUP11 PUSH1 0x44 DUP6 ADD JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x377 JUMPI POP POP POP PUSH2 0x25A SWAP1 PUSH1 0xC4 DUP5 ADD SWAP1 PUSH2 0x570 JUMP JUMPDEST DUP9 PUSH2 0x104 DUP4 ADD JUMPDEST PUSH1 0x5 DUP3 LT PUSH2 0x35D JUMPI POP POP POP PUSH2 0x1A4 DUP2 PUSH1 0x20 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x353 JUMPI DUP7 SWAP2 PUSH2 0x314 JUMPI JUMPDEST POP ISZERO PUSH2 0x305 JUMPI SWAP1 PUSH32 0xA29F706235C83D457380CF21ECC4BA909FA846879EEA28D1B12E4E3B82AA7590 SWAP3 SWAP2 PUSH1 0x20 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH2 0x2C1 DUP5 PUSH2 0x598 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE DUP6 DUP8 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP4 DUP8 KECCAK256 DUP4 MLOAD DUP2 SSTORE PUSH1 0x1 DUP4 MLOAD SWAP2 ADD SSTORE DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 MLOAD SWAP2 MLOAD DUP3 MSTORE MLOAD PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH4 0x9BDE339 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x34B JUMPI JUMPDEST DUP2 PUSH2 0x32F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x5CA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x347 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x347 JUMPI DUP7 PUSH2 0x283 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x322 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 SWAP4 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x1 SWAP4 SWAP5 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD DUP5 SWAP3 PUSH2 0x261 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP10 DUP4 MLOAD DUP14 DUP4 SWAP2 SWAP1 SWAP2 JUMPDEST PUSH1 0x2 DUP4 LT PUSH2 0x3A5 JUMPI POP POP POP PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP3 ADD SWAP4 ADD SWAP2 ADD DUP7 SWAP5 SWAP4 SWAP3 PUSH2 0x241 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE DUP14 SWAP4 POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x386 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1FD JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST CALLDATASIZE PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x45C JUMPI DUP3 PUSH2 0x448 JUMPI DUP9 MLOAD PUSH2 0x402 DUP6 DUP3 PUSH2 0x5CA JUMP JUMPDEST DUP1 DUP11 DUP5 ADD CALLDATASIZE DUP2 GT PUSH2 0x444 JUMPI SWAP2 DUP12 SWAP3 DUP6 SWAP5 SWAP3 SWAP5 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x42E JUMPI POP POP DUP2 MSTORE SWAP3 ADD SWAP2 PUSH1 0x20 ADD SWAP1 POP PUSH2 0x1D5 JUMP JUMPDEST DUP2 CALLDATALOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 DUP15 SWAP6 POP SWAP1 SWAP2 ADD SWAP1 PUSH2 0x416 JUMP JUMPDEST DUP14 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1AB JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH4 0x4F2532FB PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP PUSH2 0x48D DUP4 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST PUSH4 0x8C45C0AD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST PUSH4 0x3D23E4D1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x6EDAEF2F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x87 JUMPI PUSH2 0x4EE PUSH1 0x20 SWAP2 PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x87 JUMPI PUSH1 0x40 SWAP1 DUP2 DUP1 MLOAD PUSH2 0x52E DUP3 DUP3 PUSH2 0x5CA JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY DUP2 MLOAD SWAP1 PUSH2 0x53D DUP3 PUSH2 0x598 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 KECCAK256 SLOAD DUP3 MSTORE PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 DUP3 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x56E DUP3 MLOAD DUP1 SWAP3 PUSH2 0x570 JUMP JUMPDEST RETURN JUMPDEST SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x582 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP6 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 DUP2 PUSH2 0x610 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x638 PUSH1 0xA0 DUP5 PUSH2 0x5CA JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x1A4 GT PUSH2 0x87 JUMPI PUSH2 0x104 SWAP1 JUMPDEST PUSH2 0x1A4 DUP3 LT PUSH2 0x654 JUMPI POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x647 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP LOG2 PUSH10 0x5E28C333823EC10ECF9E COINBASE SELFBALANCE 0xE0 PC 0xF8 NOT CALLDATACOPY SDIV 0xEC 0xAC 0xEE PUSH28 0xA8F183D668F73764736F6C634300081B003300000000000000000000 ","sourceMap":"873:5863:12:-:0;;;;;;;;;;;;;-1:-1:-1;;873:5863:12;;;;-1:-1:-1;;;;;873:5863:12;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;873:5863:12;;;;;;;;-1:-1:-1;873:5863:12;;-1:-1:-1;;;;;;873:5863:12;;;;;;;;;;;;;;;;;-1:-1:-1;873:5863:12;;;;;;-1:-1:-1;873:5863:12;;;;;-1:-1:-1;873:5863:12"},"deployedBytecode":{"functionDebugData":{"abi_decode_available_length_array_uint256":{"entryPoint":1576,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_array_uint256":{"entryPoint":1392,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation":{"entryPoint":1482,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_5319":{"entryPoint":1432,"id":null,"parameterSlots":1,"returnSlots":0},"fun_isUserRegistered":{"entryPoint":1516,"id":1811,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806311231fe0146104f8578063163f7522146104bf57806337729b5c146101045780634cd1f470146100bd578063579a69881461008c576392d05a851461005e57600080fd5b34610087576000366003190112610087576000546040516001600160a01b039091168152602090f35b600080fd5b34610087576020366003190112610087576004356000526002602052602060ff604060002054166040519015158152f35b34610087576020366003190112610087576004356001600160a01b038116908190036100875760005260016020526040806000206001815491015482519182526020820152f35b34610087576101a036600319011261008757600061012136610628565b60408101516001600160a01b031690338290036104b057606081015146036104a1576080810151907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182101561049257818452600260205260ff60408520541680610483575b61047457600260051b9160405161019e84826105ca565b8036604411610470576004905b604482106104605750506040938451906101c586836105ca565b813660c4116103ce576000906044905b60c482106103e65750506103d2576101ef865191826105ca565b8036610104116103ce5760c4905b61010482106103be5750509161023b9261021636610628565b9060018060a01b038a54169388519586946334baeab960e01b86526004860190610570565b8a604485015b600282106103775750505061025a9060c4840190610570565b8861010483015b6005821061035d575050506101a4816020935afa908115610353578691610314575b501561030557907fa29f706235c83d457380cf21ecc4ba909fa846879eea28d1b12e4e3b82aa7590929160208251920151908351926102c184610598565b8352602083019182528587526001602052838720835181556001835191015586526002602052828620600160ff19825416179055825191518252516020820152a280f35b6309bde33960e01b8552600485fd5b90506020813d60201161034b575b8161032f602093836105ca565b81010312610347575180151581036103475786610283565b8580fd5b3d9150610322565b84513d88823e3d90fd5b829350602080916001939451815201930191018492610261565b9091929394508983518d839190915b600283106103a557505050602090600192019301910186949392610241565b815181528d935060019092019160209182019101610386565b81358152602091820191016101fd565b8880fd5b634e487b7160e01b88526041600452602488fd5b36601f8301121561045c578261044857885161040285826105ca565b808a840136811161044457918b9285949294905b80821061042e575050815292019160200190506101d5565b813586526020958601958e955090910190610416565b8d80fd5b634e487b7160e01b8b52604160045260248bfd5b8a80fd5b81358152602091820191016101ab565b8680fd5b634f2532fb60e11b8452600484fd5b5061048d836105ec565b610187565b638c45c0ad60e01b8452600484fd5b633d23e4d160e11b8352600483fd5b636edaef2f60e11b8352600483fd5b34610087576020366003190112610087576004356001600160a01b0381168103610087576104ee6020916105ec565b6040519015158152f35b34610087576020366003190112610087576004356001600160a01b038116908190036100875760409081805161052e82826105ca565b36903781519061053d82610598565b8060005260016020528260002054825260005260016020526001826000200154602082015261056e82518092610570565bf35b906000905b6002821061058257505050565b6020806001928551815201930191019091610575565b6040810190811067ffffffffffffffff8211176105b457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176105b457604052565b6001600160a01b031660008181526001602052604090205415159081610610575090565b90506000526001602052600160406000200154151590565b906040519161063860a0846105ca565b82906101a41161008757610104905b6101a48210610654575050565b813581526020918201910161064756fea264697066735822122050a2695e28c333823ec10ecf9e4147e058f8193705ecacee7ba8f183d668f73764736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11231FE0 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x163F7522 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x37729B5C EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x4CD1F470 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x579A6988 EQ PUSH2 0x8C JUMPI PUSH4 0x92D05A85 EQ PUSH2 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x87 JUMPI PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH2 0x1A0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x0 PUSH2 0x121 CALLDATASIZE PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER DUP3 SWAP1 SUB PUSH2 0x4B0 JUMPI PUSH1 0x60 DUP2 ADD MLOAD CHAINID SUB PUSH2 0x4A1 JUMPI PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP3 LT ISZERO PUSH2 0x492 JUMPI DUP2 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND DUP1 PUSH2 0x483 JUMPI JUMPDEST PUSH2 0x474 JUMPI PUSH1 0x2 PUSH1 0x5 SHL SWAP2 PUSH1 0x40 MLOAD PUSH2 0x19E DUP5 DUP3 PUSH2 0x5CA JUMP JUMPDEST DUP1 CALLDATASIZE PUSH1 0x44 GT PUSH2 0x470 JUMPI PUSH1 0x4 SWAP1 JUMPDEST PUSH1 0x44 DUP3 LT PUSH2 0x460 JUMPI POP POP PUSH1 0x40 SWAP4 DUP5 MLOAD SWAP1 PUSH2 0x1C5 DUP7 DUP4 PUSH2 0x5CA JUMP JUMPDEST DUP2 CALLDATASIZE PUSH1 0xC4 GT PUSH2 0x3CE JUMPI PUSH1 0x0 SWAP1 PUSH1 0x44 SWAP1 JUMPDEST PUSH1 0xC4 DUP3 LT PUSH2 0x3E6 JUMPI POP POP PUSH2 0x3D2 JUMPI PUSH2 0x1EF DUP7 MLOAD SWAP2 DUP3 PUSH2 0x5CA JUMP JUMPDEST DUP1 CALLDATASIZE PUSH2 0x104 GT PUSH2 0x3CE JUMPI PUSH1 0xC4 SWAP1 JUMPDEST PUSH2 0x104 DUP3 LT PUSH2 0x3BE JUMPI POP POP SWAP2 PUSH2 0x23B SWAP3 PUSH2 0x216 CALLDATASIZE PUSH2 0x628 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 SLOAD AND SWAP4 DUP9 MLOAD SWAP6 DUP7 SWAP5 PUSH4 0x34BAEAB9 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD SWAP1 PUSH2 0x570 JUMP JUMPDEST DUP11 PUSH1 0x44 DUP6 ADD JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x377 JUMPI POP POP POP PUSH2 0x25A SWAP1 PUSH1 0xC4 DUP5 ADD SWAP1 PUSH2 0x570 JUMP JUMPDEST DUP9 PUSH2 0x104 DUP4 ADD JUMPDEST PUSH1 0x5 DUP3 LT PUSH2 0x35D JUMPI POP POP POP PUSH2 0x1A4 DUP2 PUSH1 0x20 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x353 JUMPI DUP7 SWAP2 PUSH2 0x314 JUMPI JUMPDEST POP ISZERO PUSH2 0x305 JUMPI SWAP1 PUSH32 0xA29F706235C83D457380CF21ECC4BA909FA846879EEA28D1B12E4E3B82AA7590 SWAP3 SWAP2 PUSH1 0x20 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP4 MLOAD SWAP3 PUSH2 0x2C1 DUP5 PUSH2 0x598 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE DUP6 DUP8 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP4 DUP8 KECCAK256 DUP4 MLOAD DUP2 SSTORE PUSH1 0x1 DUP4 MLOAD SWAP2 ADD SSTORE DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 MLOAD SWAP2 MLOAD DUP3 MSTORE MLOAD PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH4 0x9BDE339 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x34B JUMPI JUMPDEST DUP2 PUSH2 0x32F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x5CA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x347 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x347 JUMPI DUP7 PUSH2 0x283 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x322 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 SWAP4 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x1 SWAP4 SWAP5 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD DUP5 SWAP3 PUSH2 0x261 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP10 DUP4 MLOAD DUP14 DUP4 SWAP2 SWAP1 SWAP2 JUMPDEST PUSH1 0x2 DUP4 LT PUSH2 0x3A5 JUMPI POP POP POP PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP3 ADD SWAP4 ADD SWAP2 ADD DUP7 SWAP5 SWAP4 SWAP3 PUSH2 0x241 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE DUP14 SWAP4 POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x386 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1FD JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST CALLDATASIZE PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x45C JUMPI DUP3 PUSH2 0x448 JUMPI DUP9 MLOAD PUSH2 0x402 DUP6 DUP3 PUSH2 0x5CA JUMP JUMPDEST DUP1 DUP11 DUP5 ADD CALLDATASIZE DUP2 GT PUSH2 0x444 JUMPI SWAP2 DUP12 SWAP3 DUP6 SWAP5 SWAP3 SWAP5 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x42E JUMPI POP POP DUP2 MSTORE SWAP3 ADD SWAP2 PUSH1 0x20 ADD SWAP1 POP PUSH2 0x1D5 JUMP JUMPDEST DUP2 CALLDATALOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 DUP15 SWAP6 POP SWAP1 SWAP2 ADD SWAP1 PUSH2 0x416 JUMP JUMPDEST DUP14 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1AB JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH4 0x4F2532FB PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP PUSH2 0x48D DUP4 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST PUSH4 0x8C45C0AD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST PUSH4 0x3D23E4D1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x6EDAEF2F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x87 JUMPI PUSH2 0x4EE PUSH1 0x20 SWAP2 PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x87 JUMPI PUSH1 0x40 SWAP1 DUP2 DUP1 MLOAD PUSH2 0x52E DUP3 DUP3 PUSH2 0x5CA JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY DUP2 MLOAD SWAP1 PUSH2 0x53D DUP3 PUSH2 0x598 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 KECCAK256 SLOAD DUP3 MSTORE PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 DUP3 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x56E DUP3 MLOAD DUP1 SWAP3 PUSH2 0x570 JUMP JUMPDEST RETURN JUMPDEST SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x582 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP6 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 DUP2 PUSH2 0x610 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x638 PUSH1 0xA0 DUP5 PUSH2 0x5CA JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x1A4 GT PUSH2 0x87 JUMPI PUSH2 0x104 SWAP1 JUMPDEST PUSH2 0x1A4 DUP3 LT PUSH2 0x654 JUMPI POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x647 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP LOG2 PUSH10 0x5E28C333823EC10ECF9E COINBASE SELFBALANCE 0xE0 PC 0xF8 NOT CALLDATACOPY SDIV 0xEC 0xAC 0xEE PUSH28 0xA8F183D668F73764736F6C634300081B003300000000000000000000 ","sourceMap":"873:5863:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;873:5863:12;;;;;;;;-1:-1:-1;;;;;873:5863:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;873:5863:12;;;;;;;;1464:74;873:5863;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;873:5863:12;;;;;;-1:-1:-1;;;;;873:5863:12;;;;;;;;;;1261:73;873:5863;;;;;;1261:73;873:5863;;1261:73;;873:5863;;;;;;;;;;;;;;;;;-1:-1:-1;;873:5863:12;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;873:5863:12;;3480:10;:21;;;3476:74;;873:5863;;;;3605:13;:25;3601:79;;873:5863;;;;3790:32;474:77:22;3790:32:12;;;3786:95;;873:5863;;;3397:1;873:5863;;;;;;474:77:22;873:5863:12;3946:59;;;873:5863;3942:120;;3397:1;873:5863;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3327:19;873:5863;;;;;;3327:19;873:5863;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6531:124;;873:5863;6531:124;;873:5863;;:::i;:::-;;;;;;3397:1;873:5863;;;;;;;;;;;;;;:::i;:::-;;3327:19;873:5863;;;;;;;;6531:124;;;;;873:5863;6531:124;;;;;;;;;;;;873:5863;6670:10;;6666:62;;873:5863;5839:25;873:5863;;;;;;;;;;;;;;;:::i;:::-;;;;4149:33;;873:5863;;;;;;;;;;;;;;;;;;;;;;;;3397:1;873:5863;;;;;;;;;;;;;;;;;;;;;;;;;5839:25;873:5863;;6666:62;-1:-1:-1;;;6703:14:12;;873:5863;6703:14;;6531:124;;;873:5863;6531:124;;873:5863;6531:124;;;;;;873:5863;6531:124;;;:::i;:::-;;;873:5863;;;;;;;;;;;;6531:124;;;873:5863;;;;6531:124;;;-1:-1:-1;6531:124:12;;;873:5863;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3397:1;873:5863;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;873:5863:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;873:5863:12;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;873:5863:12;;;;;;;;-1:-1:-1;873:5863:12;;;;;;;;;;;;;;-1:-1:-1;873:5863:12;;;;;;;;;;;-1:-1:-1;;;873:5863:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3942:120;-1:-1:-1;;;4028:23:12;;873:5863;4028:23;;3946:59;3980:25;;;;:::i;:::-;3946:59;;3786:95;-1:-1:-1;;;3845:25:12;;873:5863;3845:25;;3601:79;-1:-1:-1;;;3653:16:12;;873:5863;3653:16;;3476:74;-1:-1:-1;;;3524:15:12;;873:5863;3524:15;;873:5863;;;;;;-1:-1:-1;;873:5863:12;;;;;;-1:-1:-1;;;;;873:5863:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;873:5863:12;;;;;;-1:-1:-1;;;;;873:5863:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;5009:14;873:5863;;;;;;;;;;5009:14;873:5863;;5009:14;873:5863;;;5033:22;873:5863;;5008:48;;873:5863;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;873:5863:12;;;;;-1:-1:-1;873:5863:12;;;;;;;;;;;;;;;;;;;;;;:::o;4488:149::-;-1:-1:-1;;;;;873:5863:12;-1:-1:-1;873:5863:12;;;;;;;;;;4572:27;;;;:58;;4565:65;4488:149;:::o;4572:58::-;873:5863;;-1:-1:-1;873:5863:12;4572:14;873:5863;;4572:14;873:5863;-1:-1:-1;873:5863:12;4603:22;873:5863;4603:27;;4488:149;:::o;873:5863::-;;;;;;;;;:::i;:::-;;;;;;;3327:19;873:5863;;;;;;;;;:::o;:::-;;;;;;;;;;;;"},"methodIdentifiers":{"getUserPublicKey(address)":"11231fe0","isRegistered(uint256)":"579a6988","isUserRegistered(address)":"163f7522","register(((uint256[2],uint256[2][2],uint256[2]),uint256[5]))":"37729b5c","registrationVerifier()":"92d05a85","userPublicKeys(address)":"4cd1f470"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrationVerifier_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRegistrationHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Point\",\"name\":\"publicKey\",\"type\":\"tuple\"}],\"name\":\"Register\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserPublicKey\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"publicKey\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"registrationHash\",\"type\":\"uint256\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ProofPoints\",\"name\":\"proofPoints\",\"type\":\"tuple\"},{\"internalType\":\"uint256[5]\",\"name\":\"publicSignals\",\"type\":\"uint256[5]\"}],\"internalType\":\"struct RegisterProof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrationVerifier\",\"outputs\":[{\"internalType\":\"contract IRegistrationVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"userPublicKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract handles:      1. User registration with public keys      2. Verification of registration proofs The Registrar is a critical component that: - Associates Ethereum addresses with public keys for encrypted operations\",\"events\":{\"Register(address,(uint256,uint256))\":{\"params\":{\"publicKey\":\"Public key of the user\",\"user\":\"Address of the user\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"registrationVerifier_\":\"Address of the registration verifier contract\"}},\"getUserPublicKey(address)\":{\"details\":\"Returns the x and y coordinates of the user's public key\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"publicKey\":\"The public key of the user as a uint256 array\"}},\"isUserRegistered(address)\":{\"details\":\"A user is considered registered if their public key is not the zero point (0,0)\",\"params\":{\"user\":\"The address of the user to check\"},\"returns\":{\"_0\":\"bool True if the user is registered, false otherwise\"}},\"register(((uint256[2],uint256[2][2],uint256[2]),uint256[5]))\":{\"details\":\"This function:      1. Verifies the sender matches the account in the proof      2. Checks the chain ID matches      3. Validates the registration hash      4. Verifies the zero-knowledge proof      5. Registers the user with their public key Requirements: - Sender must match the account in the proof - Chain ID must match - Registration hash must be valid - User must not be already registered - Proof must be valid\",\"params\":{\"proof\":\"The zero-knowledge proof proving the validity of the registration\"}}},\"stateVariables\":{\"isRegistered\":{\"details\":\"Used to prevent duplicate registrations\"}},\"title\":\"Registrar\",\"version\":1},\"userdoc\":{\"events\":{\"Register(address,(uint256,uint256))\":{\"notice\":\"Emitted when a user is registered\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the Registrar contract\"},\"getUserPublicKey(address)\":{\"notice\":\"Gets the public key of a user\"},\"isRegistered(uint256)\":{\"notice\":\"Mapping of registration hashes to registration status\"},\"isUserRegistered(address)\":{\"notice\":\"Checks if a user is registered\"},\"register(((uint256[2],uint256[2][2],uint256[2]),uint256[5]))\":{\"notice\":\"Registers a user with their public key\"},\"registrationVerifier()\":{\"notice\":\"The verifier contract used to validate registration proofs\"},\"userPublicKeys(address)\":{\"notice\":\"Mapping of user addresses to their public keys\"}},\"notice\":\"Contract for managing user registration in the privacy-preserving ERC system\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Registrar.sol\":\"Registrar\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/Registrar.sol\":{\"keccak256\":\"0xed2afe0ff7d95e56be921ba99268bd03e4fd72808ed9fc1b056716aab9879f05\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://caaac9891ab849fe7083280981774cb15330f45eb1153e0258753e9f30356a3b\",\"dweb:/ipfs/QmSFV1KLPvnkfwT4zhmwr5htGbsRTHjPFEzEVe3NCCVuMg\"]},\"contracts/errors/Errors.sol\":{\"keccak256\":\"0x927b7cc1dd72c518b300006a54c1803151c039a1529da8eedf59650059a21774\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://fe443cd55953c874054a3f0875b1eef9e3856a0c5e9905def44c5ea975cf1f91\",\"dweb:/ipfs/QmbVsF2ChKaxu4rPctxt3u6UQHCSg47uK7e7RmAHnRqxi6\"]},\"contracts/interfaces/verifiers/IRegistrationVerifier.sol\":{\"keccak256\":\"0x72d8be956ae7e0ceae22812bc6acb9ca8bf382a72f6513402dfb5a1f26a21a88\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://ca63f4a97578afc54012327aa4ac4508836d39a53cbeea19559423c86b6b714f\",\"dweb:/ipfs/QmTs7qwwpMdAoYz1AAZeufqE14P95s4A7WbYzxCGhnSkVU\"]},\"contracts/libraries/BabyJubJub.sol\":{\"keccak256\":\"0xe657ab2a822a54ed0150af4c68e5b753ec7df27dc8470d607e6ae3b27de944a7\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://7e0802650f9ceeee43ac48377e5ff92dd5c698f6b4bfe75e23fc9061d4104d10\",\"dweb:/ipfs/QmcL8Pwd1HXc35kBpfKjABw6zAFdB46cvgVM4h4Jam92qK\"]},\"contracts/types/Types.sol\":{\"keccak256\":\"0x2327a499d5e63c8dad204c0d13b17cb8d3f913578a9a889b640be7276f42384d\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://c74b01811db798e34e30d6f65e072a6e5acfe0c28e9f98404be8a30ac43782b4\",\"dweb:/ipfs/QmdfTgJhnLE2frgUHoRTovG1CZWNZWmmzR2fnwvzEUVvw3\"]}},\"version\":1}"}},"contracts/core/TokenTracker.sol":{"TokenTracker":{"abi":[{"inputs":[{"internalType":"bool","name":"isConverter_","type":"bool"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"blacklistedTokens","outputs":[{"internalType":"bool","name":"isBlacklisted","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isConverter","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bool","name":"blacklisted","type":"bool"}],"name":"setTokenBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenAddresses","outputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"tokenIds","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803460d457601f61064a38819003918201601f19168301916001600160401b0383118484101760d95780849260209460405283398101031260d4575180151580910360d457331560be57600180546001600160a01b03199081169091556000805433928116831782556040519392916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600160025560ff80196003541691161760035561055a90816100f08239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80631ff0769a146104a45780634f64b2be146104495780635c8b5f441461040a57806361832767146103e7578063715018a61461038257806375794a3c1461036457806379ba5097146102db5780638da5cb5b146102b2578063aa6ca808146101bb578063e30c397814610192578063e5df8b841461015e578063f2fde38b146100ea5763fc97a303146100ab57600080fd5b346100e55760203660031901126100e5576001600160a01b036100cc6104fa565b1660005260046020526020604060002054604051908152f35b600080fd5b346100e55760203660031901126100e5576101036104fa565b61010b610510565b60018060a01b0316806bffffffffffffffffffffffff60a01b600154161760015560018060a01b03600054167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700600080a3005b346100e55760203660031901126100e5576004356000526005602052602060018060a01b0360406000205416604051908152f35b346100e55760003660031901126100e5576001546040516001600160a01b039091168152602090f35b346100e55760003660031901126100e5576040518060206006549182815201809160066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9060005b81811061029357505050829003601f01601f191682019167ffffffffffffffff83118184101761027d57908291826040526020830190602084525180915260408301919060005b81811061025b575050500390f35b82516001600160a01b031684528594506020938401939092019160010161024d565b634e487b7160e01b600052604160045260246000fd5b82546001600160a01b0316845260209093019260019283019201610206565b346100e55760003660031901126100e5576000546040516001600160a01b039091168152602090f35b346100e55760003660031901126100e557600154336001600160a01b039091160361034f57600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b63118cdaa760e01b6000523360045260246000fd5b346100e55760003660031901126100e5576020600254604051908152f35b346100e55760003660031901126100e55761039b610510565b600180546001600160a01b0319908116909155600080549182168155906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100e55760003660031901126100e557602060ff600354166040519015158152f35b346100e55760203660031901126100e5576001600160a01b0361042b6104fa565b166000526007602052602060ff604060002054166040519015158152f35b346100e55760203660031901126100e5576004356006548110156100e55760066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01546040516001600160a01b039091168152602090f35b346100e55760403660031901126100e5576104bd6104fa565b602435908115158092036100e5576104d3610510565b60018060a01b0316600052600760205260406000209060ff80198354169116179055600080f35b600435906001600160a01b03821682036100e557565b6000546001600160a01b0316330361034f5756fea2646970667358221220ce4c904dabb2a0dd91d47a4ae0988ca0dc11bc0eaefc4e9d87de50500f7187b264736f6c634300081b0033","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0xD4 JUMPI PUSH1 0x1F PUSH2 0x64A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xD9 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xD4 JUMPI MLOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH1 0xD4 JUMPI CALLER ISZERO PUSH1 0xBE JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD CALLER SWAP3 DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 PUSH1 0x2 SSTORE PUSH1 0xFF DUP1 NOT PUSH1 0x3 SLOAD AND SWAP2 AND OR PUSH1 0x3 SSTORE PUSH2 0x55A SWAP1 DUP2 PUSH2 0xF0 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FF0769A EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x5C8B5F44 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x61832767 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xE5DF8B84 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEA JUMPI PUSH4 0xFC97A303 EQ PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCC PUSH2 0x4FA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x103 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x10B PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD DUP1 SWAP2 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x293 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x27D JUMPI SWAP1 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x25B JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x24D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x206 JUMP JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x34F JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD CALLER SWAP3 DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x39B PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP2 DUP3 AND DUP2 SSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x42B PUSH2 0x4FA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xE5 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x4BD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0xE5 JUMPI PUSH2 0x4D3 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE5 JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x34F JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0x4C SWAP1 0x4D 0xAB 0xB2 LOG0 0xDD SWAP2 0xD4 PUSH27 0x4AE0988CA0DC11BC0EAEFC4E9D87DE50500F7187B264736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"778:4183:13:-:0;;;;;;;;;;;;;-1:-1:-1;;778:4183:13;;;;-1:-1:-1;;;;;778:4183:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3290:10;1273:26:0;1269:95;;778:4183:13;;;-1:-1:-1;;;;;;778:4183:13;;;;;;-1:-1:-1;778:4183:13;;3290:10;778:4183;;;;;;;;;;;3290:10;-1:-1:-1;;;;;778:4183:13;;;;3052:40:0;;-1:-1:-1;3052:40:0;2093:20:1;1144:1:13;778:4183;;;;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;778:4183:13;;-1:-1:-1;1322:31:0;778:4183:13;-1:-1:-1;778:4183:13;;;;;;-1:-1:-1;778:4183:13;;;;;-1:-1:-1;778:4183:13"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1274,"id":null,"parameterSlots":0,"returnSlots":1},"fun_checkOwner":{"entryPoint":1296,"id":84,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c80631ff0769a146104a45780634f64b2be146104495780635c8b5f441461040a57806361832767146103e7578063715018a61461038257806375794a3c1461036457806379ba5097146102db5780638da5cb5b146102b2578063aa6ca808146101bb578063e30c397814610192578063e5df8b841461015e578063f2fde38b146100ea5763fc97a303146100ab57600080fd5b346100e55760203660031901126100e5576001600160a01b036100cc6104fa565b1660005260046020526020604060002054604051908152f35b600080fd5b346100e55760203660031901126100e5576101036104fa565b61010b610510565b60018060a01b0316806bffffffffffffffffffffffff60a01b600154161760015560018060a01b03600054167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700600080a3005b346100e55760203660031901126100e5576004356000526005602052602060018060a01b0360406000205416604051908152f35b346100e55760003660031901126100e5576001546040516001600160a01b039091168152602090f35b346100e55760003660031901126100e5576040518060206006549182815201809160066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9060005b81811061029357505050829003601f01601f191682019167ffffffffffffffff83118184101761027d57908291826040526020830190602084525180915260408301919060005b81811061025b575050500390f35b82516001600160a01b031684528594506020938401939092019160010161024d565b634e487b7160e01b600052604160045260246000fd5b82546001600160a01b0316845260209093019260019283019201610206565b346100e55760003660031901126100e5576000546040516001600160a01b039091168152602090f35b346100e55760003660031901126100e557600154336001600160a01b039091160361034f57600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b63118cdaa760e01b6000523360045260246000fd5b346100e55760003660031901126100e5576020600254604051908152f35b346100e55760003660031901126100e55761039b610510565b600180546001600160a01b0319908116909155600080549182168155906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100e55760003660031901126100e557602060ff600354166040519015158152f35b346100e55760203660031901126100e5576001600160a01b0361042b6104fa565b166000526007602052602060ff604060002054166040519015158152f35b346100e55760203660031901126100e5576004356006548110156100e55760066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01546040516001600160a01b039091168152602090f35b346100e55760403660031901126100e5576104bd6104fa565b602435908115158092036100e5576104d3610510565b60018060a01b0316600052600760205260406000209060ff80198354169116179055600080f35b600435906001600160a01b03821682036100e557565b6000546001600160a01b0316330361034f5756fea2646970667358221220ce4c904dabb2a0dd91d47a4ae0988ca0dc11bc0eaefc4e9d87de50500f7187b264736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FF0769A EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x5C8B5F44 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x61832767 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xE5DF8B84 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEA JUMPI PUSH4 0xFC97A303 EQ PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCC PUSH2 0x4FA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x103 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x10B PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD DUP1 SWAP2 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x293 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x27D JUMPI SWAP1 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x25B JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x24D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x206 JUMP JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x34F JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD CALLER SWAP3 DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x39B PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP2 DUP3 AND DUP2 SSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x42B PUSH2 0x4FA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xE5 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x4BD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0xE5 JUMPI PUSH2 0x4D3 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE5 JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x34F JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0x4C SWAP1 0x4D 0xAB 0xB2 LOG0 0xDD SWAP2 0xD4 PUSH27 0x4AE0988CA0DC11BC0EAEFC4E9D87DE50500F7187B264736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"778:4183:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;778:4183:13;;;;-1:-1:-1;;;;;778:4183:13;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;778:4183:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;778:4183:13;;;;;;;;;;1738:24:1;778:4183:13;;;1738:24:1;778:4183:13;;;;;;;;;1777:43:1;778:4183:13;1777:43:1;;778:4183:13;;;;;;;-1:-1:-1;;778:4183:13;;;;;;;;1436:70;778:4183;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;778:4183:13;;;;;;;;-1:-1:-1;;;;;778:4183:13;;;;;;;;;;;;;;-1:-1:-1;;778:4183:13;;;;;;;;4199:6;778:4183;;;;;;;;4199:6;778:4183;;;;;;;;;;;-1:-1:-1;;;778:4183:13;;;;;-1:-1:-1;;778:4183:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;778:4183:13;;;;;-1:-1:-1;778:4183:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;778:4183:13;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;778:4183:13;;;;;;;;-1:-1:-1;;;;;778:4183:13;;;;;;;;;;;;;;-1:-1:-1;;778:4183:13;;;;;;735:10:8;-1:-1:-1;;;;;778:4183:13;;;2339:24:1;2335:96;;1311:13;778:4183:13;;-1:-1:-1;;;;;;778:4183:13;;;;;;-1:-1:-1;778:4183:13;;735:10:8;778:4183:13;;;;;;;-1:-1:-1;;;;;778:4183:13;;3052:40:0;;-1:-1:-1;3052:40:0;778:4183:13;2335:96:1;2386:34;;;778:4183:13;2386:34:1;735:10:8;778:4183:13;;;;2386:34:1;778:4183:13;;;;;;-1:-1:-1;;778:4183:13;;;;;1115:30;778:4183;;;;;;;;;;;;;-1:-1:-1;;778:4183:13;;;;1500:62:0;;:::i;:::-;2093:20:1;778:4183:13;;-1:-1:-1;;;;;;778:4183:13;;;;;;-1:-1:-1;778:4183:13;;;;;;;-1:-1:-1;;;;;;778:4183:13;3052:40:0;-1:-1:-1;;3052:40:0;778:4183:13;;;;;;;-1:-1:-1;;778:4183:13;;;;;;1225:23;778:4183;;;;;;;;;;;;;;;;-1:-1:-1;;778:4183:13;;;;-1:-1:-1;;;;;778:4183:13;;:::i;:::-;;;;1651:84;778:4183;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;778:4183:13;;;;;;1569:23;778:4183;1569:23;;;;;;778:4183;;;;;;;-1:-1:-1;;;;;778:4183:13;;;;;;;;;;;;;;-1:-1:-1;;778:4183:13;;;;;;:::i;:::-;;;;;;;;;;;;1500:62:0;;:::i;:::-;778:4183:13;;;;;;;;3881:17;778:4183;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;778:4183:13;;;;;;:::o;1796:162:0:-;1710:6;778:4183:13;-1:-1:-1;;;;;778:4183:13;735:10:8;1855:23:0;1851:101;;1796:162::o"},"methodIdentifiers":{"acceptOwnership()":"79ba5097","blacklistedTokens(address)":"5c8b5f44","getTokens()":"aa6ca808","isConverter()":"61832767","nextTokenId()":"75794a3c","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","setTokenBlacklist(address,bool)":"1ff0769a","tokenAddresses(uint256)":"e5df8b84","tokenIds(address)":"fc97a303","tokens(uint256)":"4f64b2be","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isConverter_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"blacklistedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConverter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"blacklisted\",\"type\":\"bool\"}],\"name\":\"setTokenBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"tokenIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract manages:      1. Token registration and identification      2. Token blacklisting for security      3. Contract Mode (converter vs standalone) The contract can operate in two modes: - Converter Mode: Wraps existing ERC20 tokens into encrypted tokens - Standalone Mode: Operates as a standalone encrypted token\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"constructor\":{\"details\":\"Sets the initial mode of operation and initializes the owner\",\"params\":{\"isConverter_\":\"Determines if the contract operates in converter mode\"}},\"getTokens()\":{\"details\":\"Used for enumeration and listing all supported tokens\",\"returns\":{\"_0\":\"Array of token addresses\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setTokenBlacklist(address,bool)\":{\"details\":\"Only the owner can call this function\",\"params\":{\"blacklisted\":\"True to blacklist, false to unblacklist\",\"token\":\"Address of the token to blacklist/unblacklist\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"stateVariables\":{\"nextTokenId\":{\"details\":\"Token IDs start from 1, with 0 reserved for the standalone version\"}},\"title\":\"TokenTracker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"blacklistedTokens(address)\":{\"notice\":\"Mapping to track blacklisted tokens\"},\"constructor\":{\"notice\":\"Initializes the TokenTracker contract\"},\"getTokens()\":{\"notice\":\"Returns an array of all registered token addresses\"},\"isConverter()\":{\"notice\":\"Indicates if the contract is operating in converter mode\"},\"nextTokenId()\":{\"notice\":\"The next available token ID\"},\"setTokenBlacklist(address,bool)\":{\"notice\":\"Sets the blacklist status of a token\"},\"tokenAddresses(uint256)\":{\"notice\":\"Mapping from token ID to token address\"},\"tokenIds(address)\":{\"notice\":\"Mapping from token address to token ID\"},\"tokens(uint256)\":{\"notice\":\"Array of all registered token addresses\"}},\"notice\":\"Contract for tracking ERC20 tokens in the encrypted ERC system\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/TokenTracker.sol\":\"TokenTracker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/core/TokenTracker.sol\":{\"keccak256\":\"0x52dfd22dd4fe4786a845e606862a3d3e2159470fc5ac45793ff2de89d4bd23de\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://fedb4414adba120b1ebd77aae1d27ff0b81ac80d3868f3bc3d008ae0d06a386a\",\"dweb:/ipfs/QmdzhK1Jxx5cCm3ECc5fad4c1db5KburraER85ZbqYuN5g\"]},\"contracts/errors/Errors.sol\":{\"keccak256\":\"0x927b7cc1dd72c518b300006a54c1803151c039a1529da8eedf59650059a21774\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://fe443cd55953c874054a3f0875b1eef9e3856a0c5e9905def44c5ea975cf1f91\",\"dweb:/ipfs/QmbVsF2ChKaxu4rPctxt3u6UQHCSg47uK7e7RmAHnRqxi6\"]}},\"version\":1}"}},"contracts/core/UniversalEncryptedERC.sol":{"UniversalEncryptedERC":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"registrar","type":"address"},{"internalType":"bool","name":"isConverter","type":"bool"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"address","name":"mintVerifier","type":"address"},{"internalType":"address","name":"withdrawVerifier","type":"address"},{"internalType":"address","name":"transferVerifier","type":"address"},{"internalType":"address","name":"burnVerifier","type":"address"}],"internalType":"struct CreateEncryptedERCParams","name":"params","type":"tuple"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidChainId","type":"error"},{"inputs":[],"name":"InvalidNullifier","type":"error"},{"inputs":[],"name":"InvalidOperation","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"inputs":[],"name":"UnknownToken","type":"error"},{"inputs":[],"name":"UserNotRegistered","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAuditor","type":"address"},{"indexed":true,"internalType":"address","name":"newAuditor","type":"address"}],"name":"AuditorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"dust","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"enum UniversalEncryptedERC.TokenType","name":"tokenType","type":"uint8"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"NativeDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"NativeWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[7]","name":"auditorPCT","type":"uint256[7]"},{"indexed":true,"internalType":"address","name":"auditorAddress","type":"address"}],"name":"PrivateBurn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[7]","name":"auditorPCT","type":"uint256[7]"},{"indexed":true,"internalType":"address","name":"auditorAddress","type":"address"}],"name":"PrivateMint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[7]","name":"auditorPCT","type":"uint256[7]"},{"indexed":true,"internalType":"address","name":"auditorAddress","type":"address"}],"name":"PrivateTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256[7]","name":"auditorPCT","type":"uint256[7]"},{"indexed":true,"internalType":"address","name":"auditorAddress","type":"address"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"mintNullifier","type":"uint256"}],"name":"alreadyMinted","outputs":[{"internalType":"bool","name":"isUsed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"auditor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"auditorPublicKey","outputs":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"balanceOf","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c1","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c2","type":"tuple"}],"internalType":"struct EGCT","name":"eGCT","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"components":[{"internalType":"uint256[7]","name":"pct","type":"uint256[7]"},{"internalType":"uint256","name":"index","type":"uint256"}],"internalType":"struct AmountPCT[]","name":"amountPCTs","type":"tuple[]"},{"internalType":"uint256[7]","name":"balancePCT","type":"uint256[7]"},{"internalType":"uint256","name":"transactionIndex","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"balanceOfStandalone","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c1","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c2","type":"tuple"}],"internalType":"struct EGCT","name":"eGCT","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"components":[{"internalType":"uint256[7]","name":"pct","type":"uint256[7]"},{"internalType":"uint256","name":"index","type":"uint256"}],"internalType":"struct AmountPCT[]","name":"amountPCTs","type":"tuple[]"},{"internalType":"uint256[7]","name":"balancePCT","type":"uint256[7]"},{"internalType":"uint256","name":"transactionIndex","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"balances","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c1","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c2","type":"tuple"}],"internalType":"struct EGCT","name":"eGCT","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"transactionIndex","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"blacklistedTokens","outputs":[{"internalType":"bool","name":"isBlacklisted","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"burnVerifier","outputs":[{"internalType":"contract IBurnVerifier","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256[7]","name":"amountPCT","type":"uint256[7]"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"getBalanceFromTokenAddress","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c1","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c2","type":"tuple"}],"internalType":"struct EGCT","name":"eGCT","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"components":[{"internalType":"uint256[7]","name":"pct","type":"uint256[7]"},{"internalType":"uint256","name":"index","type":"uint256"}],"internalType":"struct AmountPCT[]","name":"amountPCTs","type":"tuple[]"},{"internalType":"uint256[7]","name":"balancePCT","type":"uint256[7]"},{"internalType":"uint256","name":"transactionIndex","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNativeBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isAuditorKeySet","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isConverter","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintVerifier","outputs":[{"internalType":"contract IMintVerifier","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nativeBalances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"}],"internalType":"struct ProofPoints","name":"proofPoints","type":"tuple"},{"internalType":"uint256[19]","name":"publicSignals","type":"uint256[19]"}],"internalType":"struct BurnProof","name":"proof","type":"tuple"},{"internalType":"uint256[7]","name":"balancePCT","type":"uint256[7]"}],"name":"privateBurn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"components":[{"components":[{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"}],"internalType":"struct ProofPoints","name":"proofPoints","type":"tuple"},{"internalType":"uint256[24]","name":"publicSignals","type":"uint256[24]"}],"internalType":"struct MintProof","name":"proof","type":"tuple"}],"name":"privateMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"enum UniversalEncryptedERC.TokenType","name":"tokenType","type":"uint8"}],"name":"registerTokenType","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registrar","outputs":[{"internalType":"contract IRegistrar","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"setAuditorPublicKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bool","name":"blacklisted","type":"bool"}],"name":"setTokenBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenAddresses","outputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"tokenIds","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenTypes","outputs":[{"internalType":"enum UniversalEncryptedERC.TokenType","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"components":[{"components":[{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"}],"internalType":"struct ProofPoints","name":"proofPoints","type":"tuple"},{"internalType":"uint256[32]","name":"publicSignals","type":"uint256[32]"}],"internalType":"struct TransferProof","name":"proof","type":"tuple"},{"internalType":"uint256[7]","name":"balancePCT","type":"uint256[7]"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferVerifier","outputs":[{"internalType":"contract ITransferVerifier","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"components":[{"components":[{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"}],"internalType":"struct ProofPoints","name":"proofPoints","type":"tuple"},{"internalType":"uint256[16]","name":"publicSignals","type":"uint256[16]"}],"internalType":"struct WithdrawProof","name":"proof","type":"tuple"},{"internalType":"uint256[7]","name":"balancePCT","type":"uint256[7]"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawVerifier","outputs":[{"internalType":"contract IWithdrawVerifier","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":1603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":1623,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1566,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{"contracts/libraries/BabyJubJub.sol":{"BabyJubJub":[{"length":20,"start":2949},{"length":20,"start":8299},{"length":20,"start":9968},{"length":20,"start":13994},{"length":20,"start":14547},{"length":20,"start":15440},{"length":20,"start":16586},{"length":20,"start":17690}]}},"object":"60a06040523461061957614824803803806100198161061e565b928339810190602081830312610619578051906001600160401b038211610619570161012081830312610619576040519161012083016001600160401b038111848210176104b35760405261006d82610643565b835260208201518015158103610619576020840190815260408301516001600160401b03811161061957826100a3918501610657565b60408501908152606084015190926001600160401b038211610619576100ca918501610657565b936060810194855260808401519360ff8516850361061957608082019485526100f560a08201610643565b60a0830190815261010860c08301610643565b9060c0840191825261013061010061012260e08601610643565b9460e0870195865201610643565b93610100810194855285511515331561060357600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600160025560ff80196003541691161760035560018060a01b0319600954166009556040516040810181811060018060401b038211176104b35760405260008082526020909101819052600a819055600b5580516001600160a01b03161580156105f1575b80156105df575b80156105cd575b80156105bb575b6105aa5751600c80546001600160a01b03199081166001600160a01b03938416179091559151600d805484169183169190911790559151600e805483169184169190911790559151600f80548416918316919091179055915160108054909216921691909117905551156102e3575b815160ff166080526000805260146020527f4f26c3876aa9f4b92579780beea1161a61f87ebf1ec6ee865b299e447ecba99c805460ff1916600117905560405161416190816106c382396080518181816113df015281816130470152818161395e0152613d950152f35b5180519092906001600160401b0381116104b357601154600181811c911680156105a0575b602082101461049357601f811161053b575b506020601f82116001146104d457819293946000926104c9575b50508160011b916000199060031b1c1916176011555b51805191906001600160401b0383116104b357601254600181811c911680156104a9575b602082101461049357601f811161042e575b50602090601f84116001146103c35760ff9391600091836103b8575b50508160011b916000199060031b1c1916176012555b38610279565b01519050388061039c565b90601f198416916012600052816000209260005b818110610416575091600193918660ff9794106103fd575b505050811b016012556103b2565b015160001960f88460031b161c191690553880806103ef565b929360206001819287860151815501950193016103d7565b60126000527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444601f850160051c81019160208610610489575b601f0160051c01905b81811061047d5750610380565b60008155600101610470565b9091508190610467565b634e487b7160e01b600052602260045260246000fd5b90607f169061036e565b634e487b7160e01b600052604160045260246000fd5b015190503880610334565b601f198216906011600052806000209160005b8181106105235750958360019596971061050a575b505050811b0160115561034a565b015160001960f88460031b161c191690553880806104fc565b9192602060018192868b0151815501940192016104e7565b60116000527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68601f830160051c81019160208410610596575b601f0160051c01905b81811061058a575061031a565b6000815560010161057d565b9091508190610574565b90607f1690610308565b63d92e233d60e01b60005260046000fd5b5084516001600160a01b03161561020a565b5083516001600160a01b031615610203565b5082516001600160a01b0316156101fc565b5081516001600160a01b0316156101f5565b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176104b357604052565b51906001600160a01b038216820361061957565b81601f82011215610619578051906001600160401b0382116104b357610686601f8301601f191660200161061e565b92828452602083830101116106195760005b8281106106ad57505060206000918301015290565b8060208092840101518282870101520161069856fe608080604052600436101561001357600080fd5b60003560e01c908162b0938d1461256757508062fdd58e1461253f578063034a1c181461250957806306fdde031461244a57806313a4f0db146122eb57806314dda7fd1461227b5780631ff0769a14612224578063204ac7cc14611c345780632b20e39714611c0b5780632d94761014611403578063313ce567146113c55780633ec045a61461139c5780634f64b2be1461135a5780635c8b5f441461131b57806361832767146112f8578063715018a61461129357806375794a3c1461127557806379ba5097146111ec57806382f09ea214611114578063864eb164146110eb5780638da5cb5b146110c25780638daed5281461109957806391584d491461107457806395ad89e61461098957806395d89b4114610f6d578063a5566e2514610da5578063a865d5b214610c82578063aa6ca80814610bb6578063b39f252d14610b5a578063b7365f1f14610b29578063ba48747314610ad4578063c3a716eb14610aab578063cbf1304d14610a20578063e30c3978146109f7578063e5df8b84146109c3578063efd8be6214610989578063f2fde38b1461091a578063f4b2be44146102095763fc97a303146101ca57600080fd5b34610204576020366003190112610204576001600160a01b036101eb61258b565b1660005260046020526020604060002054604051908152f35b600080fd5b346102045736600319016104408112610204576103601361020457366104441161020457600a5415158061090d575b61024190612a05565b600954610258906001600160a01b03161515612a51565b60ff600354166108fc57600c54604051630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa9081156108a6576000916108dd575b50156108cc576102c76040516102b28161269e565b610104358152610124356020820152336133a7565b6102ea6040516102d68161269e565b610244358152610264356020820152613430565b601054604080516379f9173960e11b8152916001600160a01b03169060048084013781604460008183015b600282106108b25750505061036481602093604060c480840137610260610104808401375afa9081156108a657600091610877575b50156108665760405161035c8161269e565b6101443581526101643560208201526040516103778161269e565b6101843581526101a4356020820152604051916103938361269e565b825260208201526040516103a68161269e565b6101c43581526101e4356020820152604051906103c28261269e565b610204358252610224356020830152604051906103de8261269e565b815260208101918252604051906103f660e0836126d6565b600093610364835b6104448210610840575050610412906140ae565b3385526008602052604085208580526020526005604086200154604051906020820192835260408201526040815261044b6060826126d6565b519020903385526008602052604085208580526020526004604086200182865260205260ff6001604087200154169133865260086020526040862086805260205260046040872001908652602052604085205491156108315733855260086020526040852085805260205260408520936104f1604073__$3599097dbd61087c0ceb2349e224575c52$__93518151809381926327d3c56d60e11b83528a600484016137f8565b0381865af49081156108265787916107dd575b508051865560200151600186015551604080516327d3c56d60e11b81529260028701928491908290819061053c9087600484016137f8565b03915af49081156107d2578691610791575b6020925081519055015160038401553384526008602052604084208480526020526040842090600e82018054805b610678575050506005016105908154613907565b905561059c8333613fa3565b825b6007811061066157836040516105b560e0826126d6565b60e0368237815b60078110610607575060018060a01b0360095416906105de60405180926125b7565b7f047fabd75c92ead101dbbb10dd37a09c205f633da9db8ce7078c2f33e84710e560e03392a380f35b80600c0180600c1161064d576013811015610639579060019160051b61010401356106328285612aa0565b52016105bc565b634e487b7160e01b84526032600452602484fd5b634e487b7160e01b84526011600452602484fd5b60019060208351930192600782860101550161059e565b600019810181811161077d578360076106918386613881565b50015411156106c0575b5080156106ac57600019018061057c565b634e487b7160e01b87526011600452602487fd5b82546000198101908111610769576106db6106e39185613881565b509184613881565b9190916107275780820361074f575b50508154801561073b576000190161070a8184613881565b610727578061071e60078b9301809261389d565b5582558761069b565b634e487b7160e01b89526004899052602489fd5b634e487b7160e01b88526031600452602488fd5b60078161075d8293856140f3565b015491015587806106f2565b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b88526011600452602488fd5b905060403d6040116107cb575b6107a881846126d6565b8201916040818403126107c7576020926107c191613465565b9061054e565b8680fd5b503d61079e565b6040513d88823e3d90fd5b905060403d60401161081f575b6107f481836126d6565b81019260408285031261081b57602061081261053c95604094613465565b92505092610504565b8780fd5b503d6107ea565b6040513d89823e3d90fd5b6309bde33960e01b8552600485fd5b81358152602091820191016103fe565b634e487b7160e01b600052604160045260246000fd5b6309bde33960e01b60005260046000fd5b610899915060203d60201161089f575b61089181836126d6565b81019061299e565b8161034a565b503d610887565b6040513d6000823e3d90fd5b829350604081816001949581943701930191018492610315565b632163950f60e01b60005260046000fd5b6108f6915060203d60201161089f5761089181836126d6565b8161029d565b631cc6a69960e11b60005260046000fd5b50600b5460011415610238565b346102045760203660031901126102045761093361258b565b61093b613393565b60018060a01b0316806001600160601b0360a01b600154161760015560018060a01b03600054167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700600080a3005b34610204576020366003190112610204576001600160a01b036109aa61258b565b1660005260156020526020604060002054604051908152f35b34610204576020366003190112610204576004356000526005602052602060018060a01b0360406000205416604051908152f35b34610204576000366003190112610204576001546040516001600160a01b039091168152602090f35b34610204576040366003190112610204576001600160a01b03610a4161258b565b166000526008602052604060002060243560005260205260c06040600020610a6881612814565b906006600582015491015490610a9f6040518094602080606092818151805187520151828601520151805160408501520151910152565b608083015260a0820152f35b34610204576000366003190112610204576010546040516001600160a01b039091168152602090f35b3461020457604036600319011261020457610aed61258b565b60243590600382101561020457610b02613393565b60018060a01b0316600052601460205260406000209060ff80198354169116179055600080f35b34610204576020366003190112610204576004356000526013602052602060ff604060002054166040519015158152f35b34610204576020366003190112610204576001600160a01b03610b7b61258b565b16600052601460205260ff604060002054166040516003821015610ba0576020918152f35b634e487b7160e01b600052602160045260246000fd5b34610204576000366003190112610204576040518060206006549283815201809260066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9060005b818110610c635750505081610c179103826126d6565b6040519182916020830190602084525180915260408301919060005b818110610c41575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610c33565b82546001600160a01b0316845260209093019260019283019201610c01565b34610204576020366003190112610204576040610c9d61258b565b610ca5612840565b5060e090818351610cb682826126d6565b369037600091610cc4612840565b508351610cd182826126d6565b3690376001600160a01b031681526008602090815282822082805290522060058101546006820154600e83019290610d0882612814565b9184549067ffffffffffffffff82116108505760405191610d2f60208260051b01846126d6565b80835260208301966000526020600020966000905b828210610d705750505090610d5f6007610d6c949301612884565b90604051958695866125df565b0390f35b60086020600192604051610d838161269e565b610d8c8d612884565b815260078d015483820152815201990191019097610d44565b346102045761040036600319011261020457366023190161030081126102045761010060405191610dd58361269e565b1261020457604051610de6816126ba565b610df136602461277d565b81523660831215610204576040908151610e0b83826126d6565b803660e41161020457836064915b60e48310610f53575050506020820152610e343660e461277d565b828201528252366101431215610204578051610e52610200826126d6565b80366103241161020457610124905b6103248210610f43575050602083015236610343121561020457610e8736610324612741565b90600a54151580610f36575b610e9c90612a05565b600954610eb3906001600160a01b03161515612a51565b60ff60035416156108fc57600c548151630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa918215610f2c5750600091610f0d575b50156108cc57610f0b91600435612e38565b005b610f26915060203d60201161089f5761089181836126d6565b83610ef9565b513d6000823e3d90fd5b50600b5460011415610e93565b8135815260209182019101610e61565b602090610f60368561277d565b8152019101908490610e19565b346102045760003660031901126102045760006040519080601254908160011c9160018116801561106a575b6020841081146110565783865290811561102f5750600114610fd2575b610d6c84610fc6818603826126d6565b604051918291826126f8565b601281527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444939250905b80821061101557509091508101602001610fc682610fb6565b919260018160209254838588010152019101909291610ffc565b60ff191660208087019190915292151560051b85019092019250610fc69150839050610fb6565b634e487b7160e01b83526022600452602483fd5b92607f1692610f99565b34610204576000366003190112610204576040600a54600b5482519182526020820152f35b3461020457600036600319011261020457600f546040516001600160a01b039091168152602090f35b34610204576000366003190112610204576000546040516001600160a01b039091168152602090f35b3461020457600036600319011261020457600e546040516001600160a01b039091168152602090f35b610120366003190112610204576111296125a1565b36606312156102045761113d366044612741565b600a541515806111df575b61115190612a05565b600954611168906001600160a01b03161515612a51565b60ff60035416156108fc57600c54604051630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa9081156108a6576000916111c0575b50156108cc57610f0b91600435612b1a565b6111d9915060203d60201161089f5761089181836126d6565b836111ae565b50600b5460011415611148565b3461020457600036600319011261020457600154336001600160a01b039091160361126057600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b63118cdaa760e01b6000523360045260246000fd5b34610204576000366003190112610204576020600254604051908152f35b34610204576000366003190112610204576112ac613393565b600180546001600160a01b0319908116909155600080549182168155906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461020457600036600319011261020457602060ff600354166040519015158152f35b34610204576020366003190112610204576001600160a01b0361133c61258b565b166000526007602052602060ff604060002054166040519015158152f35b3461020457602036600319011261020457600435600654811015610204576113836020916127c5565b905460405160039290921b1c6001600160a01b03168152f35b34610204576000366003190112610204576009546040516001600160a01b039091168152602090f35b3461020457600036600319011261020457602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610204576106203660031901126102045761141d61258b565b6024359036604319016105008112610204576101006040519161143f8361269e565b126102045760405191611451836126ba565b61145c36604461277d565b83523660a3121561020457604092835161147685826126d6565b80366101041161020457856084915b6101048310611bf15750505060208201526114a23661010461277d565b8482015282523661016312156102045782516114c0610400826126d6565b80366105441161020457610144905b6105448210611be157505060208301908152366106241161020457600a54151580611bd4575b6114fe90612a05565b600954611515906001600160a01b03161515612a51565b600c548451630b1fba9160e11b81523360048201526001600160a01b039091169390602081602481885afa908115611baa57600091611bb5575b50156108cc578451630b1fba9160e11b81526001600160a01b0384166004820181905294602090829060249082905afa908115611baa57600091611b8b575b50156108cc57816115e46116459351946115c088516115ac8161269e565b8751815260208801516020820152336133a7565b8751906115cc8261269e565b610140870151825261016087015160208301526133a7565b61160a86516115f28161269e565b6102e086015181526103008601516020820152613430565b60018060a01b03600f5416915161165981519261164f8960208501519401519151938a51978896630f3022c960e21b88526004880190612ac2565b6044860190612aea565b60c4840190612ac2565b600061010483015b60208210611b7157505050610504816020935afa908115611b6657600091611b47575b50156108665782516080810181811067ffffffffffffffff8211176108505784526116ad612840565b815260208101946116bc612840565b8652848201906116ca612840565b82526060830160e09387516116df86826126d6565b8536823782528786015160608701518951916116fa8361269e565b82526020820152608087015160a08801518a51916117178361269e565b8252602082015289519161172a8361269e565b82526020820152815260c0860151858701518951916117488361269e565b825260208201526101008701516101208801518a51916117678361269e565b8252602082015289519161177a8361269e565b8252602082015289526101808601516101a087015189519161179b8361269e565b825260208201526101c08701516101e08801518a51916117ba8361269e565b825260208201528951916117cd8361269e565b82526020820152845260005b60078110611b05575051975192519051928751906117f860e0836126d6565b600099610544835b6106248210611af557505090611818929185336134e3565b85885260086020528688208289526020528688209081541580611ae9575b156119a657602080828160039451805187550151600186015501518051600285015501519101555b848752600860205285872090875260205261191385872091600e600584015461188e61188986612814565b6140ae565b90895190602082019283528a8201528981526118ab6060826126d6565b519020936118f88a600160068401978c8954938151946118ca8661269e565b85526020850192848452815260048701602052209251835551151591019060ff801983541691151516179055565b84548951936119068561269e565b84526020840152016138b4565b61191d8154613907565b905583519161192c82846126d6565b81368437855b6007811061197b5750507f1fe42c57a12ee7d4848276c111f82c24fe213a94a603b21da88785cd882c9ccf9061197560018060a01b0360095416955180946125b7565b3392a480f35b806019018060191161077d579061199460019284612ab1565b5161199f8287612aa0565b5201611932565b73__$3599097dbd61087c0ceb2349e224575c52$__90886119dd818351815180938192637bb10bcb60e01b835289600484016137f8565b0381875af4908115611adf578c91611a9b575b5092602084611a2895518755015160018601556020600286019301519082518080968194637bb10bcb60e01b835287600484016137f8565b03915af4918215611a91578a92611a4f575b5081602091600393519055015191015561185e565b9150883d8a11611a8a575b611a6481846126d6565b8201908983830312611a8657611a7e602092600394613465565b925090611a3a565b8a80fd5b503d611a5a565b89513d8c823e3d90fd5b9190503d8b11611ad8575b611ab081836126d6565b8101928a82850312611ad4576020611acc611a28958d94613465565b9194506119f0565b8b80fd5b503d611aa6565b82513d8e823e3d90fd5b50600182015415611836565b8135815260209182019101611800565b806010019081601011611b3157611b1e60019289612ab1565b51611b2a828651612aa0565b52016117d9565b634e487b7160e01b600052601160045260246000fd5b611b60915060203d60201161089f5761089181836126d6565b85611684565b84513d6000823e3d90fd5b829350602080916001939451815201930191018492611661565b611ba4915060203d60201161089f5761089181836126d6565b8761158e565b86513d6000823e3d90fd5b611bce915060203d60201161089f5761089181836126d6565b8761154f565b50600b54600114156114f5565b81358152602091820191016114cf565b602090611bfe368561277d565b8152019101908690611485565b3461020457600036600319011261020457600c546040516001600160a01b039091168152602090f35b346102045761042036600319011261020457611c4e61258b565b61040036602319011261020457611c63613393565b600a54151580612217575b611c7790612a05565b600954611c8e906001600160a01b03161515612a51565b60ff600354166108fc57600c54604051630b1fba9160e11b81526001600160a01b03838116600483018190529260209183916024918391165afa9081156108a6576000916121f8575b50156108cc5760405191611ced610300846126d6565b82366104241161020457610124905b61042482106121e8575050825146036121d757604051611d3591611d1f8261269e565b60408501518252606085015160208301526133a7565b611d5c604051611d448161269e565b6101e084015181526102008401516020820152613430565b60208201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110156121c65780600052601360205260ff6040600020541661086657600d54604080516302680e2d60e51b8152916001600160a01b031690602460048401378160646000604483015b600282106121ac5750505061040481602093604060e460c48401376103006101246101048401375afa9081156108a65760009161218d575b50156108665760808301519060a084015160405192611e228461269e565b8352602083015260c08401519160e085015160405193611e418561269e565b8452602084015260405190611e558261269e565b81526020810192835260e09260405191611e6f85846126d6565b8436843760005b60078110612162575085600052600860205260406000206000805260205260406000209182541580612156575b156120265760209081600393518051865501516001850155518051600285015501519101555b836000526008602052604060002060008052602052611f7a604060002091600e6005840154611efa61188986612814565b906040519060208201928352604082015260408152611f1a6060826126d6565b51902093611f6b6006820195600187549160405192611f388461269e565b835260208301908282526000526004850160205260406000209251835551151591019060ff801983541691151516179055565b8454604051936119068561269e565b611f848154613907565b905560005260136020526040600020600160ff1982541617905560405192611fac82856126d6565b8136853760005b60078110611ffb5750507f0d78494055b7f1585d1e50d778838efd294162edeaf41569996739183722254b9060018060a01b036009541693611ff860405180926125b7565ba3005b806011019081601111611b315761201460019284612a8f565b5161201f8288612aa0565b5201611fb3565b61205c604073__$3599097dbd61087c0ceb2349e224575c52$$3599097dbd61087c0ceb2349e224575c52$__5af49081156108a6576130179360009261318c575b5087336134e3565b60405163313ce56760e01b815290602082600481845afa9182156108a6576130999260ff9160009161315d575b507f000000000000000000000000000000000000000000000000000000000000000060ff169116858282111561312b57506130856130909261308a92613458565b613f95565b85613844565b905b3390613f55565b6040519060e06130a981846126d6565b36833760005b600781106131005750506009546040516001600160a01b039091169333937fae09dce9b789cf9600e6765940d134d8247429396faf72db0f7b33ed5ca8294c9383926130fb92846134c4565b0390a3565b806009019081600911611b315761311960019284612e27565b516131248286612aa0565b52016130af565b929180821061313c575b5050613092565b61315592935061314f9161308591613458565b85613857565b903880613135565b61317f915060203d602011613185575b61317781836126d6565b810190613d43565b38613044565b503d61316d565b6131af91925060803d6080116131b6575b6131a781836126d6565b81019061348d565b903861300f565b503d61319d565b638698bf3760e01b60005260046000fd5b60809061320c94929360608701519383880151604051956131ee8761269e565b8652602086015260a088015160c089015160405191612f818361269e565b038173__$3599097dbd61087c0ceb2349e224575c52$__5af49081156108a65761324093600092613339575b5086336134e3565b3360005260156020526040600020613259838254613458565b90558160008115613330575b600080809381933390f1156108a6576040519060e061328481846126d6565b36833760005b600781106133055750507fae09dce9b789cf9600e6765940d134d8247429396faf72db0f7b33ed5ca8294c906040518381528460208201527f02a25615d4309b997a752e7e0e81a331709124ed95ead4d561a1cd277785b54160403392a260018060a01b0360095416936130fb6040519283923396846134c4565b806009019081600911611b315761331e60019284612e27565b516133298286612aa0565b520161328a565b506108fc613265565b61335391925060803d6080116131b6576131a781836126d6565b9038613238565b613373915060203d60201161089f5761089181836126d6565b38612f00565b829350602080916001939451815201930191018492612edd565b6000546001600160a01b0316330361126057565b600c5460408051628918ff60e51b81526001600160a01b0393841660048201529392909184916024918391165afa9182156108a65760009261340f575b508151815114918215926133fb575b505061086657565b6020919250810151910151141538806133f3565b61342991925060403d6040116124245761241681836126d6565b90386133e4565b600a5481511490811591613446575b5061086657565b90506020600b5491015114153861343f565b91908203918211611b3157565b91908260409103126102045760405161347d8161269e565b6020808294805184520151910152565b90608082820312610204576134bc9060408051936134aa8561269e565b6134b48382613465565b855201613465565b602082015290565b6040906128a393959492956101208201968252602082015201906125b7565b90916134f1909493946140ae565b60018060a01b0382169081600052600860205260406000208460005260205260056040600020015460405190602082019283526040820152604081526135386060826126d6565b51902060008281526008602090815260408083208784528252808320938352600490930190522060018101549054919060ff16156108665780600052600860205260406000208460005260205260406000209573__$3599097dbd61087c0ceb2349e224575c52$__906135c2604082518151809381926327d3c56d60e11b83528d600484016137f8565b0381865af49081156108a6576000916137b3575b5061361092602082604093518c55015160018b0155602060028b0193015190825180809681946327d3c56d60e11b835287600484016137f8565b03915af49081156108a657600091613776575b6020925081519055015160038701556000526008602052604060002083600052602052604060002090600e82018054805b61369c5750505090600561367593920161366e8154613907565b9055613fa3565b60005b6007811061368557505050565b600190602083519301926007828601015501613678565b6000198101818111611b31578360076136b58386613881565b50015411156136d0575b508015611b31576000190180613654565b82546000198101908111611b31576106db6136eb9185613881565b9190916137305780820361375c575b50508154801561374657600019016137128184613881565b6137305780613727600760009301809261389d565b558255386136bf565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60078161376a8293856140f3565b015491015538806136fa565b905060403d6040116137ac575b61378d81846126d6565b820191604081840312610204576020926137a691613465565b90613623565b503d613783565b905060403d6040116137f1575b6137ca81836126d6565b8101926040828503126102045760206137e861361095604094613465565b925050926135d6565b503d6137c0565b90929160206060916001608085019680548652015482850152805160408501520151910152565b9060ff8091169116039060ff8211611b3157565b60ff16604d8111611b3157600a0a90565b81810292918115918404141715611b3157565b8115613861570490565b634e487b7160e01b600052601260045260246000fd5b8115613861570690565b80548210156127e05760005260206000209060031b0190600090565b8181106138a8575050565b6000815560010161389d565b8054600160401b811015610850576138d191600182018155613881565b91909161373057805160005b600781106138f357505060206007910151910155565b6001906020835193019281860155016138dd565b6000198114611b315760010190565b90929160008052600460205260406000205415613cbb575b600080805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec5494907f000000000000000000000000000000000000000000000000000000000000000060ff1690826012831015613c7957505060120360ff8111611b31576139a46139b491613833565b6139ae8184613857565b92613877565b925b8115613c7257600c5460408051628918ff60e51b81526001600160a01b038481166004830181905291959391929186916024918391165afa9182156108a657613a6694600093613c4e575b5060809073__$3599097dbd61087c0ceb2349e224575c52$__936020815191015160405191613a2f8361269e565b825260208201908152604051630203469d60e11b815291516004830152516024820152604481019190915294859081906064820190565b0381855af49081156108a6578894600092613c2d575b50600052600860205260406000208460005260205260406000209182541580613c21575b15613af05750612965946020808381613ae695518051885501516001870155015180516002860155015160038401555b600e60068401938454604051936119068561269e565b61366e8154613907565b9350613b1360408251815180938192637bb10bcb60e01b835287600484016137f8565b0381885af49081156108a657600091613bdc575b50613b6194602082604093518655015160018501556020600285019301519082518080988194637bb10bcb60e01b835287600484016137f8565b03915af49081156108a6578894600092613b91575b508151905560200151600382015561296593613ae690613ad0565b9150935060403d604011613bd5575b613baa81836126d6565b8101946040828703126102045760208995613bcb61296598613ae695613465565b9350919650613b76565b503d613ba0565b905060403d604011613c1a575b613bf381836126d6565b810194604082870312610204576020613c11613b6197604094613465565b92505094613b27565b503d613be9565b50600183015415613aa0565b613c4791925060803d6080116131b6576131a781836126d6565b9038613a7c565b6080919350613c6b9060403d6040116124245761241681836126d6565b9290613a01565b5050509190565b9290949180601210613c8d575b50506139b6565b9194509150601119019060ff8211611b3157613cab613cb192613833565b90613844565b6000923880613c86565b6002547f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec819055600090815260056020526040902080546001600160a01b0319169055600654600160401b81101561085057806001613d1d92016006556127c5565b81549060018060a01b039060031b1b19169055613d3b600254613907565b60025561392e565b90816020910312610204575160ff811681036102045790565b60405163313ce56760e01b81529094936001600160a01b03909316929190602081600481875afa9081156108a657600091613f36575b507f00000000000000000000000000000000000000000000000000000000000000009060008360ff80851690841681811115613f005750505050613ddc613de1926139a49261381f565b613833565b925b80600052600460205260406000205415613e7f575b6000526004602052604060002054948115613c7257600c5460408051628918ff60e51b81526001600160a01b038481166004830181905291959391929186916024918391165afa9182156108a657613a6694600093613c4e575060809073__$3599097dbd61087c0ceb2349e224575c52$__936020815191015160405191613a2f8361269e565b6002548160005260046020528060406000205560005260056020526040600020816001600160601b0360a01b825416179055600654600160401b81101561085057806001613ed092016006556127c5565b81546001600160a01b0360039290921b91821b19169083901b179055600254613ef890613907565b600255613df8565b9794919593929710613f15575b505050613de3565b613cab92939650613f2b945090613ddc9161381f565b600092388080613f0d565b613f4f915060203d6020116131855761317781836126d6565b38613d92565b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044808301939093529181526128a391613f906064836126d6565b614053565b604d8111611b3157600a0a90565b60018060a01b0316600052600860205260406000209060005260205260406000206140456005820154613fd861188984612814565b906040519060208201928352604082015260408152613ff86060826126d6565b51902091600160068201936004855493604051946140158661269e565b855260208501928484526000520160205260406000209251835551151591019060ff801983541691151516179055565b61404f8154613907565b9055565b906000602091828151910182855af1156108a6576000513d6140a557506001600160a01b0381163b155b6140845750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b6001141561407d565b805190602080835193015191015160208151910151906040519260208401948552604084015260608301526080820152608081526140ed60a0826126d6565b51902090565b9080821461412757908154906000915b600783106141115750505050565b6001809194019283549481840155019192614103565b505056fea264697066735822122085e0f42827e944e9ef4a5a757b2a583ff2eb317904066941e27efd3645e8430b64736f6c634300081b0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x619 JUMPI PUSH2 0x4824 DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x61E JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x619 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x619 JUMPI ADD PUSH2 0x120 DUP2 DUP4 SUB SLT PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x120 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP5 DUP3 LT OR PUSH2 0x4B3 JUMPI PUSH1 0x40 MSTORE PUSH2 0x6D DUP3 PUSH2 0x643 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x619 JUMPI PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x619 JUMPI DUP3 PUSH2 0xA3 SWAP2 DUP6 ADD PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP5 ADD MLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x619 JUMPI PUSH2 0xCA SWAP2 DUP6 ADD PUSH2 0x657 JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD SWAP5 DUP6 MSTORE PUSH1 0x80 DUP5 ADD MLOAD SWAP4 PUSH1 0xFF DUP6 AND DUP6 SUB PUSH2 0x619 JUMPI PUSH1 0x80 DUP3 ADD SWAP5 DUP6 MSTORE PUSH2 0xF5 PUSH1 0xA0 DUP3 ADD PUSH2 0x643 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 DUP2 MSTORE PUSH2 0x108 PUSH1 0xC0 DUP4 ADD PUSH2 0x643 JUMP JUMPDEST SWAP1 PUSH1 0xC0 DUP5 ADD SWAP2 DUP3 MSTORE PUSH2 0x130 PUSH2 0x100 PUSH2 0x122 PUSH1 0xE0 DUP7 ADD PUSH2 0x643 JUMP JUMPDEST SWAP5 PUSH1 0xE0 DUP8 ADD SWAP6 DUP7 MSTORE ADD PUSH2 0x643 JUMP JUMPDEST SWAP4 PUSH2 0x100 DUP2 ADD SWAP5 DUP6 MSTORE DUP6 MLOAD ISZERO ISZERO CALLER ISZERO PUSH2 0x603 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD CALLER SWAP3 DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 PUSH1 0x2 SSTORE PUSH1 0xFF DUP1 NOT PUSH1 0x3 SLOAD AND SWAP2 AND OR PUSH1 0x3 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x9 SLOAD AND PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x4B3 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xB SSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x5F1 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x5DF JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x5CD JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x5BB JUMPI JUMPDEST PUSH2 0x5AA JUMPI MLOAD PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0xD DUP1 SLOAD DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0xE DUP1 SLOAD DUP4 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0xF DUP1 SLOAD DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x10 DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD ISZERO PUSH2 0x2E3 JUMPI JUMPDEST DUP2 MLOAD PUSH1 0xFF AND PUSH1 0x80 MSTORE PUSH1 0x0 DUP1 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH32 0x4F26C3876AA9F4B92579780BEEA1161A61F87EBF1EC6EE865B299E447ECBA99C DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x4161 SWAP1 DUP2 PUSH2 0x6C3 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x13DF ADD MSTORE DUP2 DUP2 PUSH2 0x3047 ADD MSTORE DUP2 DUP2 PUSH2 0x395E ADD MSTORE PUSH2 0x3D95 ADD MSTORE RETURN JUMPDEST MLOAD DUP1 MLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4B3 JUMPI PUSH1 0x11 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x5A0 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x493 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x53B JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x4D4 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x4C9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x11 SSTORE JUMPDEST MLOAD DUP1 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x4B3 JUMPI PUSH1 0x12 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x4A9 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x493 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x42E JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x3C3 JUMPI PUSH1 0xFF SWAP4 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3B8 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x12 SSTORE JUMPDEST CODESIZE PUSH2 0x279 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x39C JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP2 PUSH1 0x12 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x416 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH1 0xFF SWAP8 SWAP5 LT PUSH2 0x3FD JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x12 SSTORE PUSH2 0x3B2 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3EF JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 MSTORE PUSH32 0xBB8A6A4669BA250D26CD7A459ECA9D215F8307E33AEBE50379BC5A3617EC3444 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x489 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x47D JUMPI POP PUSH2 0x380 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x470 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH1 0x11 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x523 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x50A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x11 SSTORE PUSH2 0x34A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x4FC JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x0 MSTORE PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x596 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x58A JUMPI POP PUSH2 0x31A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x57D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x574 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x308 JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x20A JUMP JUMPDEST POP DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x203 JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1FC JUMP JUMPDEST POP DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1F5 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x4B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x619 JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x619 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4B3 JUMPI PUSH2 0x686 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x61E JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x619 JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x6AD JUMPI POP POP PUSH1 0x20 PUSH1 0x0 SWAP2 DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x698 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xB0938D EQ PUSH2 0x2567 JUMPI POP DUP1 PUSH3 0xFDD58E EQ PUSH2 0x253F JUMPI DUP1 PUSH4 0x34A1C18 EQ PUSH2 0x2509 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x244A JUMPI DUP1 PUSH4 0x13A4F0DB EQ PUSH2 0x22EB JUMPI DUP1 PUSH4 0x14DDA7FD EQ PUSH2 0x227B JUMPI DUP1 PUSH4 0x1FF0769A EQ PUSH2 0x2224 JUMPI DUP1 PUSH4 0x204AC7CC EQ PUSH2 0x1C34 JUMPI DUP1 PUSH4 0x2B20E397 EQ PUSH2 0x1C0B JUMPI DUP1 PUSH4 0x2D947610 EQ PUSH2 0x1403 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C5 JUMPI DUP1 PUSH4 0x3EC045A6 EQ PUSH2 0x139C JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x135A JUMPI DUP1 PUSH4 0x5C8B5F44 EQ PUSH2 0x131B JUMPI DUP1 PUSH4 0x61832767 EQ PUSH2 0x12F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1293 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x1275 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x11EC JUMPI DUP1 PUSH4 0x82F09EA2 EQ PUSH2 0x1114 JUMPI DUP1 PUSH4 0x864EB164 EQ PUSH2 0x10EB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10C2 JUMPI DUP1 PUSH4 0x8DAED528 EQ PUSH2 0x1099 JUMPI DUP1 PUSH4 0x91584D49 EQ PUSH2 0x1074 JUMPI DUP1 PUSH4 0x95AD89E6 EQ PUSH2 0x989 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xF6D JUMPI DUP1 PUSH4 0xA5566E25 EQ PUSH2 0xDA5 JUMPI DUP1 PUSH4 0xA865D5B2 EQ PUSH2 0xC82 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0xBB6 JUMPI DUP1 PUSH4 0xB39F252D EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0xB7365F1F EQ PUSH2 0xB29 JUMPI DUP1 PUSH4 0xBA487473 EQ PUSH2 0xAD4 JUMPI DUP1 PUSH4 0xC3A716EB EQ PUSH2 0xAAB JUMPI DUP1 PUSH4 0xCBF1304D EQ PUSH2 0xA20 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x9F7 JUMPI DUP1 PUSH4 0xE5DF8B84 EQ PUSH2 0x9C3 JUMPI DUP1 PUSH4 0xEFD8BE62 EQ PUSH2 0x989 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x91A JUMPI DUP1 PUSH4 0xF4B2BE44 EQ PUSH2 0x209 JUMPI PUSH4 0xFC97A303 EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1EB PUSH2 0x258B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x204 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x440 DUP2 SLT PUSH2 0x204 JUMPI PUSH2 0x360 SGT PUSH2 0x204 JUMPI CALLDATASIZE PUSH2 0x444 GT PUSH2 0x204 JUMPI PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0x90D JUMPI JUMPDEST PUSH2 0x241 SWAP1 PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH2 0x8FC JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x8DD JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI PUSH2 0x2C7 PUSH1 0x40 MLOAD PUSH2 0x2B2 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD DUP2 MSTORE PUSH2 0x124 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x2EA PUSH1 0x40 MLOAD PUSH2 0x2D6 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x244 CALLDATALOAD DUP2 MSTORE PUSH2 0x264 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3430 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79F91739 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x4 DUP1 DUP5 ADD CALLDATACOPY DUP2 PUSH1 0x44 PUSH1 0x0 DUP2 DUP4 ADD JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x8B2 JUMPI POP POP POP PUSH2 0x364 DUP2 PUSH1 0x20 SWAP4 PUSH1 0x40 PUSH1 0xC4 DUP1 DUP5 ADD CALLDATACOPY PUSH2 0x260 PUSH2 0x104 DUP1 DUP5 ADD CALLDATACOPY GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x877 JUMPI JUMPDEST POP ISZERO PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH2 0x35C DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD DUP2 MSTORE PUSH2 0x164 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x377 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x184 CALLDATALOAD DUP2 MSTORE PUSH2 0x1A4 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x393 DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3A6 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x1C4 CALLDATALOAD DUP2 MSTORE PUSH2 0x1E4 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3C2 DUP3 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x204 CALLDATALOAD DUP3 MSTORE PUSH2 0x224 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3DE DUP3 PUSH2 0x269E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3F6 PUSH1 0xE0 DUP4 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x364 DUP4 JUMPDEST PUSH2 0x444 DUP3 LT PUSH2 0x840 JUMPI POP POP PUSH2 0x412 SWAP1 PUSH2 0x40AE JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP6 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP2 MSTORE PUSH2 0x44B PUSH1 0x60 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 CALLER DUP6 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP6 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP7 KECCAK256 ADD DUP3 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 DUP8 KECCAK256 ADD SLOAD AND SWAP2 CALLER DUP7 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP7 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP8 KECCAK256 ADD SWAP1 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP2 ISZERO PUSH2 0x831 JUMPI CALLER DUP6 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP6 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP4 PUSH2 0x4F1 PUSH1 0x40 PUSH20 0x0 SWAP4 MLOAD DUP2 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x27D3C56D PUSH1 0xE1 SHL DUP4 MSTORE DUP11 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB DUP2 DUP7 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x826 JUMPI DUP8 SWAP2 PUSH2 0x7DD JUMPI JUMPDEST POP DUP1 MLOAD DUP7 SSTORE PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x27D3C56D PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 PUSH1 0x2 DUP8 ADD SWAP3 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x53C SWAP1 DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB SWAP2 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x7D2 JUMPI DUP7 SWAP2 PUSH2 0x791 JUMPI JUMPDEST PUSH1 0x20 SWAP3 POP DUP2 MLOAD SWAP1 SSTORE ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE CALLER DUP5 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP5 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 PUSH1 0xE DUP3 ADD DUP1 SLOAD DUP1 JUMPDEST PUSH2 0x678 JUMPI POP POP POP PUSH1 0x5 ADD PUSH2 0x590 DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x59C DUP4 CALLER PUSH2 0x3FA3 JUMP JUMPDEST DUP3 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x661 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH2 0x5B5 PUSH1 0xE0 DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0xE0 CALLDATASIZE DUP3 CALLDATACOPY DUP2 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x607 JUMPI POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND SWAP1 PUSH2 0x5DE PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x25B7 JUMP JUMPDEST PUSH32 0x47FABD75C92EAD101DBBB10DD37A09C205F633DA9DB8CE7078C2F33E84710E5 PUSH1 0xE0 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST DUP1 PUSH1 0xC ADD DUP1 PUSH1 0xC GT PUSH2 0x64D JUMPI PUSH1 0x13 DUP2 LT ISZERO PUSH2 0x639 JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH1 0x5 SHL PUSH2 0x104 ADD CALLDATALOAD PUSH2 0x632 DUP3 DUP6 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x5BC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 PUSH1 0x7 DUP3 DUP7 ADD ADD SSTORE ADD PUSH2 0x59E JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x77D JUMPI DUP4 PUSH1 0x7 PUSH2 0x691 DUP4 DUP7 PUSH2 0x3881 JUMP JUMPDEST POP ADD SLOAD GT ISZERO PUSH2 0x6C0 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 NOT ADD DUP1 PUSH2 0x57C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x769 JUMPI PUSH2 0x6DB PUSH2 0x6E3 SWAP2 DUP6 PUSH2 0x3881 JUMP JUMPDEST POP SWAP2 DUP5 PUSH2 0x3881 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x727 JUMPI DUP1 DUP3 SUB PUSH2 0x74F JUMPI JUMPDEST POP POP DUP2 SLOAD DUP1 ISZERO PUSH2 0x73B JUMPI PUSH1 0x0 NOT ADD PUSH2 0x70A DUP2 DUP5 PUSH2 0x3881 JUMP JUMPDEST PUSH2 0x727 JUMPI DUP1 PUSH2 0x71E PUSH1 0x7 DUP12 SWAP4 ADD DUP1 SWAP3 PUSH2 0x389D JUMP JUMPDEST SSTORE DUP3 SSTORE DUP8 PUSH2 0x69B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x4 DUP10 SWAP1 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x7 DUP2 PUSH2 0x75D DUP3 SWAP4 DUP6 PUSH2 0x40F3 JUMP JUMPDEST ADD SLOAD SWAP2 ADD SSTORE DUP8 DUP1 PUSH2 0x6F2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x7CB JUMPI JUMPDEST PUSH2 0x7A8 DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x7C7 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x7C1 SWAP2 PUSH2 0x3465 JUMP JUMPDEST SWAP1 PUSH2 0x54E JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x79E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x81F JUMPI JUMPDEST PUSH2 0x7F4 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP3 PUSH1 0x40 DUP3 DUP6 SUB SLT PUSH2 0x81B JUMPI PUSH1 0x20 PUSH2 0x812 PUSH2 0x53C SWAP6 PUSH1 0x40 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP POP SWAP3 PUSH2 0x504 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x9BDE339 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x9BDE339 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x899 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI JUMPDEST PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x299E JUMP JUMPDEST DUP2 PUSH2 0x34A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 SWAP4 POP PUSH1 0x40 DUP2 DUP2 PUSH1 0x1 SWAP5 SWAP6 DUP2 SWAP5 CALLDATACOPY ADD SWAP4 ADD SWAP2 ADD DUP5 SWAP3 PUSH2 0x315 JUMP JUMPDEST PUSH4 0x2163950F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8F6 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 PUSH2 0x29D JUMP JUMPDEST PUSH4 0x1CC6A699 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x238 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x933 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x93B PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9AA PUSH2 0x258B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA41 PUSH2 0x258B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xC0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xA68 DUP2 PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH1 0x6 PUSH1 0x5 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0xA9F PUSH1 0x40 MLOAD DUP1 SWAP5 PUSH1 0x20 DUP1 PUSH1 0x60 SWAP3 DUP2 DUP2 MLOAD DUP1 MLOAD DUP8 MSTORE ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0xAED PUSH2 0x258B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x204 JUMPI PUSH2 0xB02 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB7B PUSH2 0x258B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x20 SWAP2 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC63 JUMPI POP POP POP DUP2 PUSH2 0xC17 SWAP2 SUB DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC41 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC33 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xC01 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x40 PUSH2 0xC9D PUSH2 0x258B JUMP JUMPDEST PUSH2 0xCA5 PUSH2 0x2840 JUMP JUMPDEST POP PUSH1 0xE0 SWAP1 DUP2 DUP4 MLOAD PUSH2 0xCB6 DUP3 DUP3 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x0 SWAP2 PUSH2 0xCC4 PUSH2 0x2840 JUMP JUMPDEST POP DUP4 MLOAD PUSH2 0xCD1 DUP3 DUP3 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP3 DUP1 MSTORE SWAP1 MSTORE KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xE DUP4 ADD SWAP3 SWAP1 PUSH2 0xD08 DUP3 PUSH2 0x2814 JUMP JUMPDEST SWAP2 DUP5 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xD2F PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP7 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xD70 JUMPI POP POP POP SWAP1 PUSH2 0xD5F PUSH1 0x7 PUSH2 0xD6C SWAP5 SWAP4 ADD PUSH2 0x2884 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 PUSH2 0x25DF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0xD83 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0xD8C DUP14 PUSH2 0x2884 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP14 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP10 ADD SWAP2 ADD SWAP1 SWAP8 PUSH2 0xD44 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH2 0x400 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI CALLDATASIZE PUSH1 0x23 NOT ADD PUSH2 0x300 DUP2 SLT PUSH2 0x204 JUMPI PUSH2 0x100 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xDD5 DUP4 PUSH2 0x269E JUMP JUMPDEST SLT PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH2 0xDE6 DUP2 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0xDF1 CALLDATASIZE PUSH1 0x24 PUSH2 0x277D JUMP JUMPDEST DUP2 MSTORE CALLDATASIZE PUSH1 0x83 SLT ISZERO PUSH2 0x204 JUMPI PUSH1 0x40 SWAP1 DUP2 MLOAD PUSH2 0xE0B DUP4 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP1 CALLDATASIZE PUSH1 0xE4 GT PUSH2 0x204 JUMPI DUP4 PUSH1 0x64 SWAP2 JUMPDEST PUSH1 0xE4 DUP4 LT PUSH2 0xF53 JUMPI POP POP POP PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xE34 CALLDATASIZE PUSH1 0xE4 PUSH2 0x277D JUMP JUMPDEST DUP3 DUP3 ADD MSTORE DUP3 MSTORE CALLDATASIZE PUSH2 0x143 SLT ISZERO PUSH2 0x204 JUMPI DUP1 MLOAD PUSH2 0xE52 PUSH2 0x200 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP1 CALLDATASIZE PUSH2 0x324 GT PUSH2 0x204 JUMPI PUSH2 0x124 SWAP1 JUMPDEST PUSH2 0x324 DUP3 LT PUSH2 0xF43 JUMPI POP POP PUSH1 0x20 DUP4 ADD MSTORE CALLDATASIZE PUSH2 0x343 SLT ISZERO PUSH2 0x204 JUMPI PUSH2 0xE87 CALLDATASIZE PUSH2 0x324 PUSH2 0x2741 JUMP JUMPDEST SWAP1 PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0xF36 JUMPI JUMPDEST PUSH2 0xE9C SWAP1 PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xEB3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD AND ISZERO PUSH2 0x8FC JUMPI PUSH1 0xC SLOAD DUP2 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xF2C JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0xF0D JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI PUSH2 0xF0B SWAP2 PUSH1 0x4 CALLDATALOAD PUSH2 0x2E38 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF26 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP4 PUSH2 0xEF9 JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0xE93 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0xF60 CALLDATASIZE DUP6 PUSH2 0x277D JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 DUP5 SWAP1 PUSH2 0xE19 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x12 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x106A JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1056 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x102F JUMPI POP PUSH1 0x1 EQ PUSH2 0xFD2 JUMPI JUMPDEST PUSH2 0xD6C DUP5 PUSH2 0xFC6 DUP2 DUP7 SUB DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x26F8 JUMP JUMPDEST PUSH1 0x12 DUP2 MSTORE PUSH32 0xBB8A6A4669BA250D26CD7A459ECA9D215F8307E33AEBE50379BC5A3617EC3444 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1015 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xFC6 DUP3 PUSH2 0xFB6 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0xFC6 SWAP2 POP DUP4 SWAP1 POP PUSH2 0xFB6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xF99 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x40 PUSH1 0xA SLOAD PUSH1 0xB SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x1129 PUSH2 0x25A1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x63 SLT ISZERO PUSH2 0x204 JUMPI PUSH2 0x113D CALLDATASIZE PUSH1 0x44 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0x11DF JUMPI JUMPDEST PUSH2 0x1151 SWAP1 PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1168 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD AND ISZERO PUSH2 0x8FC JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x11C0 JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI PUSH2 0xF0B SWAP2 PUSH1 0x4 CALLDATALOAD PUSH2 0x2B1A JUMP JUMPDEST PUSH2 0x11D9 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP4 PUSH2 0x11AE JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x1148 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x1260 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD CALLER SWAP3 DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x12AC PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP2 DUP3 AND DUP2 SSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x133C PUSH2 0x258B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x204 JUMPI PUSH2 0x1383 PUSH1 0x20 SWAP2 PUSH2 0x27C5 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH2 0x620 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x141D PUSH2 0x258B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATASIZE PUSH1 0x43 NOT ADD PUSH2 0x500 DUP2 SLT PUSH2 0x204 JUMPI PUSH2 0x100 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x143F DUP4 PUSH2 0x269E JUMP JUMPDEST SLT PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1451 DUP4 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x145C CALLDATASIZE PUSH1 0x44 PUSH2 0x277D JUMP JUMPDEST DUP4 MSTORE CALLDATASIZE PUSH1 0xA3 SLT ISZERO PUSH2 0x204 JUMPI PUSH1 0x40 SWAP3 DUP4 MLOAD PUSH2 0x1476 DUP6 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP1 CALLDATASIZE PUSH2 0x104 GT PUSH2 0x204 JUMPI DUP6 PUSH1 0x84 SWAP2 JUMPDEST PUSH2 0x104 DUP4 LT PUSH2 0x1BF1 JUMPI POP POP POP PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x14A2 CALLDATASIZE PUSH2 0x104 PUSH2 0x277D JUMP JUMPDEST DUP5 DUP3 ADD MSTORE DUP3 MSTORE CALLDATASIZE PUSH2 0x163 SLT ISZERO PUSH2 0x204 JUMPI DUP3 MLOAD PUSH2 0x14C0 PUSH2 0x400 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP1 CALLDATASIZE PUSH2 0x544 GT PUSH2 0x204 JUMPI PUSH2 0x144 SWAP1 JUMPDEST PUSH2 0x544 DUP3 LT PUSH2 0x1BE1 JUMPI POP POP PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE CALLDATASIZE PUSH2 0x624 GT PUSH2 0x204 JUMPI PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0x1BD4 JUMPI JUMPDEST PUSH2 0x14FE SWAP1 PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1515 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0xC SLOAD DUP5 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1BAA JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1BB5 JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI DUP5 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP5 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1BAA JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1B8B JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI DUP2 PUSH2 0x15E4 PUSH2 0x1645 SWAP4 MLOAD SWAP5 PUSH2 0x15C0 DUP9 MLOAD PUSH2 0x15AC DUP2 PUSH2 0x269E JUMP JUMPDEST DUP8 MLOAD DUP2 MSTORE PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH2 0x33A7 JUMP JUMPDEST DUP8 MLOAD SWAP1 PUSH2 0x15CC DUP3 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x140 DUP8 ADD MLOAD DUP3 MSTORE PUSH2 0x160 DUP8 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x160A DUP7 MLOAD PUSH2 0x15F2 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x2E0 DUP7 ADD MLOAD DUP2 MSTORE PUSH2 0x300 DUP7 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3430 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xF SLOAD AND SWAP2 MLOAD PUSH2 0x1659 DUP2 MLOAD SWAP3 PUSH2 0x164F DUP10 PUSH1 0x20 DUP6 ADD MLOAD SWAP5 ADD MLOAD SWAP2 MLOAD SWAP4 DUP11 MLOAD SWAP8 DUP9 SWAP7 PUSH4 0xF3022C9 PUSH1 0xE2 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD SWAP1 PUSH2 0x2AC2 JUMP JUMPDEST PUSH1 0x44 DUP7 ADD SWAP1 PUSH2 0x2AEA JUMP JUMPDEST PUSH1 0xC4 DUP5 ADD SWAP1 PUSH2 0x2AC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104 DUP4 ADD JUMPDEST PUSH1 0x20 DUP3 LT PUSH2 0x1B71 JUMPI POP POP POP PUSH2 0x504 DUP2 PUSH1 0x20 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1B66 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1B47 JUMPI JUMPDEST POP ISZERO PUSH2 0x866 JUMPI DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x850 JUMPI DUP5 MSTORE PUSH2 0x16AD PUSH2 0x2840 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 PUSH2 0x16BC PUSH2 0x2840 JUMP JUMPDEST DUP7 MSTORE DUP5 DUP3 ADD SWAP1 PUSH2 0x16CA PUSH2 0x2840 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x60 DUP4 ADD PUSH1 0xE0 SWAP4 DUP8 MLOAD PUSH2 0x16DF DUP7 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP6 CALLDATASIZE DUP3 CALLDATACOPY DUP3 MSTORE DUP8 DUP7 ADD MLOAD PUSH1 0x60 DUP8 ADD MLOAD DUP10 MLOAD SWAP2 PUSH2 0x16FA DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0xA0 DUP9 ADD MLOAD DUP11 MLOAD SWAP2 PUSH2 0x1717 DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP10 MLOAD SWAP2 PUSH2 0x172A DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0xC0 DUP7 ADD MLOAD DUP6 DUP8 ADD MLOAD DUP10 MLOAD SWAP2 PUSH2 0x1748 DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x100 DUP8 ADD MLOAD PUSH2 0x120 DUP9 ADD MLOAD DUP11 MLOAD SWAP2 PUSH2 0x1767 DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP10 MLOAD SWAP2 PUSH2 0x177A DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP10 MSTORE PUSH2 0x180 DUP7 ADD MLOAD PUSH2 0x1A0 DUP8 ADD MLOAD DUP10 MLOAD SWAP2 PUSH2 0x179B DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1C0 DUP8 ADD MLOAD PUSH2 0x1E0 DUP9 ADD MLOAD DUP11 MLOAD SWAP2 PUSH2 0x17BA DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP10 MLOAD SWAP2 PUSH2 0x17CD DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x1B05 JUMPI POP MLOAD SWAP8 MLOAD SWAP3 MLOAD SWAP1 MLOAD SWAP3 DUP8 MLOAD SWAP1 PUSH2 0x17F8 PUSH1 0xE0 DUP4 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x0 SWAP10 PUSH2 0x544 DUP4 JUMPDEST PUSH2 0x624 DUP3 LT PUSH2 0x1AF5 JUMPI POP POP SWAP1 PUSH2 0x1818 SWAP3 SWAP2 DUP6 CALLER PUSH2 0x34E3 JUMP JUMPDEST DUP6 DUP9 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP7 DUP9 KECCAK256 DUP3 DUP10 MSTORE PUSH1 0x20 MSTORE DUP7 DUP9 KECCAK256 SWAP1 DUP2 SLOAD ISZERO DUP1 PUSH2 0x1AE9 JUMPI JUMPDEST ISZERO PUSH2 0x19A6 JUMPI PUSH1 0x20 DUP1 DUP3 DUP2 PUSH1 0x3 SWAP5 MLOAD DUP1 MLOAD DUP8 SSTORE ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMPDEST DUP5 DUP8 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP6 DUP8 KECCAK256 SWAP1 DUP8 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1913 DUP6 DUP8 KECCAK256 SWAP2 PUSH1 0xE PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x188E PUSH2 0x1889 DUP7 PUSH2 0x2814 JUMP JUMPDEST PUSH2 0x40AE JUMP JUMPDEST SWAP1 DUP10 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE DUP11 DUP3 ADD MSTORE DUP10 DUP2 MSTORE PUSH2 0x18AB PUSH1 0x60 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0x18F8 DUP11 PUSH1 0x1 PUSH1 0x6 DUP5 ADD SWAP8 DUP13 DUP10 SLOAD SWAP4 DUP2 MLOAD SWAP5 PUSH2 0x18CA DUP7 PUSH2 0x269E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 DUP5 DUP5 MSTORE DUP2 MSTORE PUSH1 0x4 DUP8 ADD PUSH1 0x20 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP5 SLOAD DUP10 MLOAD SWAP4 PUSH2 0x1906 DUP6 PUSH2 0x269E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE ADD PUSH2 0x38B4 JUMP JUMPDEST PUSH2 0x191D DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP1 SSTORE DUP4 MLOAD SWAP2 PUSH2 0x192C DUP3 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP2 CALLDATASIZE DUP5 CALLDATACOPY DUP6 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x197B JUMPI POP POP PUSH32 0x1FE42C57A12EE7D4848276C111F82C24FE213A94A603B21DA88785CD882C9CCF SWAP1 PUSH2 0x1975 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND SWAP6 MLOAD DUP1 SWAP5 PUSH2 0x25B7 JUMP JUMPDEST CALLER SWAP3 LOG4 DUP1 RETURN JUMPDEST DUP1 PUSH1 0x19 ADD DUP1 PUSH1 0x19 GT PUSH2 0x77D JUMPI SWAP1 PUSH2 0x1994 PUSH1 0x1 SWAP3 DUP5 PUSH2 0x2AB1 JUMP JUMPDEST MLOAD PUSH2 0x199F DUP3 DUP8 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x1932 JUMP JUMPDEST PUSH20 0x0 SWAP1 DUP9 PUSH2 0x19DD DUP2 DUP4 MLOAD DUP2 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP4 MSTORE DUP10 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB DUP2 DUP8 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x1ADF JUMPI DUP13 SWAP2 PUSH2 0x1A9B JUMPI JUMPDEST POP SWAP3 PUSH1 0x20 DUP5 PUSH2 0x1A28 SWAP6 MLOAD DUP8 SSTORE ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE PUSH1 0x20 PUSH1 0x2 DUP7 ADD SWAP4 ADD MLOAD SWAP1 DUP3 MLOAD DUP1 DUP1 SWAP7 DUP2 SWAP5 PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB SWAP2 GAS DELEGATECALL SWAP2 DUP3 ISZERO PUSH2 0x1A91 JUMPI DUP11 SWAP3 PUSH2 0x1A4F JUMPI JUMPDEST POP DUP2 PUSH1 0x20 SWAP2 PUSH1 0x3 SWAP4 MLOAD SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x185E JUMP JUMPDEST SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x1A8A JUMPI JUMPDEST PUSH2 0x1A64 DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 ADD SWAP1 DUP10 DUP4 DUP4 SUB SLT PUSH2 0x1A86 JUMPI PUSH2 0x1A7E PUSH1 0x20 SWAP3 PUSH1 0x3 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP SWAP1 PUSH2 0x1A3A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1A5A JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP RETURNDATASIZE DUP12 GT PUSH2 0x1AD8 JUMPI JUMPDEST PUSH2 0x1AB0 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP3 DUP11 DUP3 DUP6 SUB SLT PUSH2 0x1AD4 JUMPI PUSH1 0x20 PUSH2 0x1ACC PUSH2 0x1A28 SWAP6 DUP14 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP2 SWAP5 POP PUSH2 0x19F0 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1AA6 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP3 ADD SLOAD ISZERO PUSH2 0x1836 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1800 JUMP JUMPDEST DUP1 PUSH1 0x10 ADD SWAP1 DUP2 PUSH1 0x10 GT PUSH2 0x1B31 JUMPI PUSH2 0x1B1E PUSH1 0x1 SWAP3 DUP10 PUSH2 0x2AB1 JUMP JUMPDEST MLOAD PUSH2 0x1B2A DUP3 DUP7 MLOAD PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x17D9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B60 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP6 PUSH2 0x1684 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 SWAP4 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x1 SWAP4 SWAP5 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD DUP5 SWAP3 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1BA4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP8 PUSH2 0x158E JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1BCE SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP8 PUSH2 0x154F JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x14F5 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1BFE CALLDATASIZE DUP6 PUSH2 0x277D JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 DUP7 SWAP1 PUSH2 0x1485 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH2 0x420 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x1C4E PUSH2 0x258B JUMP JUMPDEST PUSH2 0x400 CALLDATASIZE PUSH1 0x23 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x1C63 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0x2217 JUMPI JUMPDEST PUSH2 0x1C77 SWAP1 PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1C8E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH2 0x8FC JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x21F8 JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1CED PUSH2 0x300 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 CALLDATASIZE PUSH2 0x424 GT PUSH2 0x204 JUMPI PUSH2 0x124 SWAP1 JUMPDEST PUSH2 0x424 DUP3 LT PUSH2 0x21E8 JUMPI POP POP DUP3 MLOAD CHAINID SUB PUSH2 0x21D7 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1D35 SWAP2 PUSH2 0x1D1F DUP3 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD DUP3 MSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x1D5C PUSH1 0x40 MLOAD PUSH2 0x1D44 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x1E0 DUP5 ADD MLOAD DUP2 MSTORE PUSH2 0x200 DUP5 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3430 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP2 LT ISZERO PUSH2 0x21C6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x866 JUMPI PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2680E2D PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x24 PUSH1 0x4 DUP5 ADD CALLDATACOPY DUP2 PUSH1 0x64 PUSH1 0x0 PUSH1 0x44 DUP4 ADD JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x21AC JUMPI POP POP POP PUSH2 0x404 DUP2 PUSH1 0x20 SWAP4 PUSH1 0x40 PUSH1 0xE4 PUSH1 0xC4 DUP5 ADD CALLDATACOPY PUSH2 0x300 PUSH2 0x124 PUSH2 0x104 DUP5 ADD CALLDATACOPY GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x218D JUMPI JUMPDEST POP ISZERO PUSH2 0x866 JUMPI PUSH1 0x80 DUP4 ADD MLOAD SWAP1 PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E22 DUP5 PUSH2 0x269E JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1E41 DUP6 PUSH2 0x269E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1E55 DUP3 PUSH2 0x269E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0xE0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1E6F DUP6 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP5 CALLDATASIZE DUP5 CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x2162 JUMPI POP DUP6 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD ISZERO DUP1 PUSH2 0x2156 JUMPI JUMPDEST ISZERO PUSH2 0x2026 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 SWAP4 MLOAD DUP1 MLOAD DUP7 SSTORE ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1F7A PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xE PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x1EFA PUSH2 0x1889 DUP7 PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP2 MSTORE PUSH2 0x1F1A PUSH1 0x60 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0x1F6B PUSH1 0x6 DUP3 ADD SWAP6 PUSH1 0x1 DUP8 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1F38 DUP5 PUSH2 0x269E JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 DUP3 DUP3 MSTORE PUSH1 0x0 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1906 DUP6 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x1F84 DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1FAC DUP3 DUP6 PUSH2 0x26D6 JUMP JUMPDEST DUP2 CALLDATASIZE DUP6 CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x1FFB JUMPI POP POP PUSH32 0xD78494055B7F1585D1E50D778838EFD294162EDEAF41569996739183722254B SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND SWAP4 PUSH2 0x1FF8 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x25B7 JUMP JUMPDEST LOG3 STOP JUMPDEST DUP1 PUSH1 0x11 ADD SWAP1 DUP2 PUSH1 0x11 GT PUSH2 0x1B31 JUMPI PUSH2 0x2014 PUSH1 0x1 SWAP3 DUP5 PUSH2 0x2A8F JUMP JUMPDEST MLOAD PUSH2 0x201F DUP3 DUP9 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x1FB3 JUMP JUMPDEST PUSH2 0x205C PUSH1 0x40 PUSH20 0x0 SWAP4 MLOAD DUP2 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB DUP2 DUP7 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2111 JUMPI JUMPDEST POP DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x20A8 SWAP1 DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB SWAP2 GAS DELEGATECALL SWAP2 DUP3 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x20D0 JUMPI JUMPDEST POP DUP2 PUSH1 0x20 SWAP2 PUSH1 0x3 SWAP4 MLOAD SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x1EC9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x210A JUMPI JUMPDEST PUSH2 0x20E7 DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 ADD SWAP1 PUSH1 0x40 DUP4 DUP4 SUB SLT PUSH2 0x204 JUMPI PUSH2 0x2102 PUSH1 0x20 SWAP3 PUSH1 0x3 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP SWAP1 PUSH2 0x20BB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x20DD JUMP JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x214F JUMPI JUMPDEST PUSH2 0x2128 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP3 PUSH1 0x40 DUP3 DUP6 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH2 0x2146 PUSH2 0x20A8 SWAP6 PUSH1 0x40 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP POP SWAP3 PUSH2 0x2070 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x211E JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD ISZERO PUSH2 0x1EA3 JUMP JUMPDEST DUP1 PUSH1 0x8 ADD SWAP1 DUP2 PUSH1 0x8 GT PUSH2 0x1B31 JUMPI PUSH2 0x217B PUSH1 0x1 SWAP3 DUP11 PUSH2 0x2A8F JUMP JUMPDEST MLOAD PUSH2 0x2186 DUP3 DUP8 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x1E76 JUMP JUMPDEST PUSH2 0x21A6 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP5 PUSH2 0x1E04 JUMP JUMPDEST DUP3 SWAP4 POP PUSH1 0x40 DUP2 DUP2 PUSH1 0x1 SWAP5 SWAP6 DUP2 SWAP5 CALLDATACOPY ADD SWAP4 ADD SWAP2 ADD DUP5 SWAP3 PUSH2 0x1DCC JUMP JUMPDEST PUSH4 0x2EC82659 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x3D23E4D1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0x2211 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP4 PUSH2 0x1CD7 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x1C6E JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x223D PUSH2 0x258B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x204 JUMPI PUSH2 0xF0B SWAP2 PUSH2 0x2255 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0xD6C PUSH2 0x22DB PUSH2 0x229A PUSH2 0x258B JUMP JUMPDEST PUSH2 0x22A2 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x22AA PUSH2 0x2840 JUMP JUMPDEST POP PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0x22BA DUP3 DUP3 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x28BB JUMP JUMPDEST SWAP2 PUSH1 0x40 SWAP6 SWAP4 SWAP6 MLOAD SWAP6 DUP7 SWAP6 DUP7 PUSH2 0x25DF JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x2304 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x230C PUSH2 0x3393 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x242B JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI PUSH1 0x40 PUSH1 0x24 SWAP2 DUP2 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH3 0x8918FF PUSH1 0xE5 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x23FC JUMPI JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 DUP3 ISZERO PUSH2 0x23EB JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 AND OR PUSH1 0x9 SSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD SWAP1 DUP2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x23B0 DUP2 PUSH2 0x269E JUMP JUMPDEST DUP4 DUP2 MSTORE ADD MSTORE PUSH1 0xA SSTORE PUSH1 0xB SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDBEEB2970745C839058876B084C0D772566FF6B5AAA47938C394CD171A38C24C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x241E SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x2424 JUMPI JUMPDEST PUSH2 0x2416 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29B6 JUMP JUMPDEST DUP3 PUSH2 0x237C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x240C JUMP JUMPDEST PUSH2 0x2444 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP4 PUSH2 0x234B JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x11 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x24FF JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1056 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x102F JUMPI POP PUSH1 0x1 EQ PUSH2 0x24A2 JUMPI PUSH2 0xD6C DUP5 PUSH2 0xFC6 DUP2 DUP7 SUB DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x11 DUP2 MSTORE PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x24E5 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xFC6 DUP3 PUSH2 0xFB6 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x24CC JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x2476 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0x2532 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x2525 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0xD6C PUSH2 0x22DB PUSH2 0x255E PUSH2 0x258B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x28BB JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x204 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x204 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x7 DUP3 LT PUSH2 0x25C9 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP6 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x25BC JUMP JUMPDEST SWAP3 SWAP2 SWAP6 SWAP5 SWAP4 SWAP6 PUSH2 0x2612 DUP5 PUSH2 0x1C0 DUP2 ADD SWAP4 PUSH1 0x20 DUP1 PUSH1 0x60 SWAP3 DUP2 DUP2 MLOAD DUP1 MLOAD DUP8 MSTORE ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1C0 PUSH1 0xA0 DUP5 ADD MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH2 0x1E0 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2652 JUMPI POP POP POP SWAP1 PUSH2 0x264E PUSH2 0x1A0 SWAP3 SWAP6 PUSH1 0xC0 DUP4 ADD SWAP1 PUSH2 0x25B7 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP4 MLOAD DUP1 MLOAD DUP3 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x7 DUP4 LT PUSH2 0x2688 JUMPI POP POP POP PUSH2 0x100 PUSH1 0x1 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP5 MLOAD DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x265F JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x850 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x850 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x850 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x272B JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x270A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2752 PUSH1 0xE0 DUP6 PUSH2 0x26D6 JUMP JUMPDEST DUP4 SWAP1 PUSH1 0xE0 DUP2 ADD SWAP3 DUP4 GT PUSH2 0x204 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x276D JUMPI POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2761 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x204 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 PUSH2 0x2799 SWAP1 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 SWAP1 PUSH1 0x40 DUP2 ADD SWAP3 DUP4 GT PUSH2 0x204 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x27B5 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x27A8 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2803 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2821 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 PUSH2 0x283B PUSH1 0x2 DUP4 SWAP6 PUSH2 0x2833 DUP2 PUSH2 0x27F6 JUMP JUMPDEST DUP6 MSTORE ADD PUSH2 0x27F6 JUMP JUMPDEST SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x284D DUP3 PUSH2 0x269E JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH2 0x285A DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2876 DUP4 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH1 0x0 DUP3 DUP5 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x7 DUP3 LT PUSH2 0x28A5 JUMPI POP POP POP PUSH2 0x28A3 PUSH1 0xE0 DUP4 PUSH2 0x26D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x288D JUMP JUMPDEST PUSH2 0x28C3 PUSH2 0x2840 JUMP JUMPDEST POP PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0x28D3 DUP3 DUP3 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD SLOAD SWAP2 PUSH1 0xE DUP2 ADD SWAP2 PUSH1 0x6 DUP3 ADD SLOAD SWAP1 PUSH2 0x2912 DUP4 PUSH2 0x2814 JUMP JUMPDEST SWAP5 SWAP4 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2939 PUSH1 0x20 DUP4 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2969 JUMPI POP POP POP POP PUSH1 0x7 PUSH2 0x2965 SWAP2 SWAP5 ADD PUSH2 0x2884 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x297C DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x2985 DUP7 PUSH2 0x2884 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x294D JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x204 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x204 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP3 DUP3 SUB SLT PUSH2 0x204 JUMPI DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x204 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP3 PUSH2 0x29DB DUP3 DUP6 PUSH2 0x26D6 JUMP JUMPDEST DUP4 SWAP2 DUP2 ADD SWAP3 DUP4 GT PUSH2 0x204 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x29F5 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x29E8 JUMP JUMPDEST ISZERO PUSH2 0x2A0C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756469746F72207075626C6963206B6579206E6F7420736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A58 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105D591A5D1BDC881B9BDD081CD95D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x18 DUP2 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x2AD4 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP6 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x2AC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x2AFC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP3 PUSH2 0x2B0E PUSH1 0x1 SWAP5 DUP8 MLOAD PUSH2 0x2AC2 JUMP JUMPDEST ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x2AEF JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x2D04 JUMPI DUP3 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2CC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2C96 JUMPI JUMPDEST POP PUSH2 0x2BA9 PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP7 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0x2BA3 PUSH1 0x84 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP6 PUSH2 0x4053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x8A6 JUMPI DUP7 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x2C5D JUMPI JUMPDEST POP SWAP1 PUSH2 0x2BE1 SWAP2 PUSH2 0x3458 JUMP JUMPDEST SUB PUSH2 0x2C4C JUMPI PUSH2 0x2BF1 SWAP2 DUP5 CALLER PUSH2 0x3D5C JUMP JUMPDEST SWAP2 DUP2 DUP1 PUSH2 0x2C3A JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xD3B8ABEDF9B219788CE9C4431056D7D4B83973B9F7072AC174E1FE2479D1A2E7 PUSH1 0x80 CALLER SWAP3 LOG2 JUMP JUMPDEST PUSH2 0x2C45 SWAP2 CALLER SWAP1 PUSH2 0x3F55 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x2BF9 JUMP JUMPDEST PUSH4 0x12171D83 PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP3 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2C8E JUMPI JUMPDEST DUP2 PUSH2 0x2C7A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x204 JUMPI MLOAD DUP6 SWAP2 SWAP1 PUSH2 0x2BE1 PUSH2 0x2BD6 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2C6D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2CC0 JUMPI JUMPDEST DUP2 PUSH2 0x2CB1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x204 JUMPI MLOAD CODESIZE PUSH2 0x2B6E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B881A5CC8189B1858DADB1A5CDD1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP DUP2 CALLVALUE LT PUSH2 0x2DE2 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP4 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B31 JUMPI PUSH2 0x2D35 SWAP3 SSTORE DUP3 CALLER PUSH2 0x3916 JUMP JUMPDEST SWAP1 DUP3 CALLVALUE GT PUSH2 0x2DAF JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2D45CF213B0878E6582A0BDDC676C202F8F57ED3CD74E8CCF8955CE1359BD427 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xD3B8ABEDF9B219788CE9C4431056D7D4B83973B9F7072AC174E1FE2479D1A2E7 PUSH1 0x80 CALLER SWAP3 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x2DBE DUP8 CALLVALUE PUSH2 0x3458 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x2DD9 JUMPI JUMPDEST CALLER SWAP1 CALL PUSH2 0x2D3E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206E617469766520746F6B656E2073656E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 DUP2 ADD DUP1 MLOAD SWAP2 DUP3 MLOAD SWAP4 PUSH2 0x1645 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2E54 DUP5 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 DUP7 ADD SWAP5 DUP6 MLOAD DUP6 MSTORE PUSH2 0x2E72 PUSH1 0x40 DUP9 ADD SWAP6 DUP7 MLOAD PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x2E98 PUSH1 0x40 MLOAD PUSH2 0x2E81 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH1 0xE0 DUP10 ADD MLOAD DUP2 MSTORE PUSH2 0x100 DUP10 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3430 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xE SLOAD AND SWAP2 MLOAD PUSH2 0x2ED5 DUP2 MLOAD SWAP3 PUSH2 0x164F PUSH1 0x40 PUSH1 0x20 DUP6 ADD MLOAD SWAP5 ADD MLOAD SWAP2 MLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 PUSH4 0xC82FEBF5 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD SWAP1 PUSH2 0x2AC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104 DUP4 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x3379 JUMPI POP POP POP PUSH2 0x304 DUP2 PUSH1 0x20 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x335A JUMPI JUMPDEST POP ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x31CE JUMPI POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x31BD JUMPI PUSH1 0x80 DUP7 PUSH2 0x2FE3 SWAP5 PUSH1 0x60 DUP9 ADD MLOAD SWAP4 DUP4 DUP10 ADD MLOAD PUSH1 0x40 MLOAD SWAP6 PUSH2 0x2F63 DUP8 PUSH2 0x269E JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA0 DUP10 ADD MLOAD PUSH1 0xC0 DUP11 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2F81 DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP6 PUSH2 0x2F95 DUP8 PUSH2 0x269E JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE MLOAD SWAP1 MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2FAC DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH4 0x203469D PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 MLOAD PUSH1 0x4 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 DUP5 SWAP1 DUP2 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 PUSH20 0x0 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x3017 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x318C JUMPI JUMPDEST POP DUP8 CALLER PUSH2 0x34E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x3099 SWAP3 PUSH1 0xFF SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x315D JUMPI JUMPDEST POP PUSH32 0x0 PUSH1 0xFF AND SWAP2 AND DUP6 DUP3 DUP3 GT ISZERO PUSH2 0x312B JUMPI POP PUSH2 0x3085 PUSH2 0x3090 SWAP3 PUSH2 0x308A SWAP3 PUSH2 0x3458 JUMP JUMPDEST PUSH2 0x3F95 JUMP JUMPDEST DUP6 PUSH2 0x3844 JUMP JUMPDEST SWAP1 JUMPDEST CALLER SWAP1 PUSH2 0x3F55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 PUSH2 0x30A9 DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3100 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 CALLER SWAP4 PUSH32 0xAE09DCE9B789CF9600E6765940D134D8247429396FAF72DB0F7B33ED5CA8294C SWAP4 DUP4 SWAP3 PUSH2 0x30FB SWAP3 DUP5 PUSH2 0x34C4 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST DUP1 PUSH1 0x9 ADD SWAP1 DUP2 PUSH1 0x9 GT PUSH2 0x1B31 JUMPI PUSH2 0x3119 PUSH1 0x1 SWAP3 DUP5 PUSH2 0x2E27 JUMP JUMPDEST MLOAD PUSH2 0x3124 DUP3 DUP7 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x30AF JUMP JUMPDEST SWAP3 SWAP2 DUP1 DUP3 LT PUSH2 0x313C JUMPI JUMPDEST POP POP PUSH2 0x3092 JUMP JUMPDEST PUSH2 0x3155 SWAP3 SWAP4 POP PUSH2 0x314F SWAP2 PUSH2 0x3085 SWAP2 PUSH2 0x3458 JUMP JUMPDEST DUP6 PUSH2 0x3857 JUMP JUMPDEST SWAP1 CODESIZE DUP1 PUSH2 0x3135 JUMP JUMPDEST PUSH2 0x317F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3185 JUMPI JUMPDEST PUSH2 0x3177 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3D43 JUMP JUMPDEST CODESIZE PUSH2 0x3044 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x316D JUMP JUMPDEST PUSH2 0x31AF SWAP2 SWAP3 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x31B6 JUMPI JUMPDEST PUSH2 0x31A7 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x348D JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x300F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x319D JUMP JUMPDEST PUSH4 0x8698BF37 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH2 0x320C SWAP5 SWAP3 SWAP4 PUSH1 0x60 DUP8 ADD MLOAD SWAP4 DUP4 DUP9 ADD MLOAD PUSH1 0x40 MLOAD SWAP6 PUSH2 0x31EE DUP8 PUSH2 0x269E JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2F81 DUP4 PUSH2 0x269E JUMP JUMPDEST SUB DUP2 PUSH20 0x0 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x3240 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x3339 JUMPI JUMPDEST POP DUP7 CALLER PUSH2 0x34E3 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3259 DUP4 DUP3 SLOAD PUSH2 0x3458 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH1 0x0 DUP2 ISZERO PUSH2 0x3330 JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 PUSH2 0x3284 DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3305 JUMPI POP POP PUSH32 0xAE09DCE9B789CF9600E6765940D134D8247429396FAF72DB0F7B33ED5CA8294C SWAP1 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2A25615D4309B997A752E7E0E81A331709124ED95EAD4D561A1CD277785B541 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND SWAP4 PUSH2 0x30FB PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH2 0x34C4 JUMP JUMPDEST DUP1 PUSH1 0x9 ADD SWAP1 DUP2 PUSH1 0x9 GT PUSH2 0x1B31 JUMPI PUSH2 0x331E PUSH1 0x1 SWAP3 DUP5 PUSH2 0x2E27 JUMP JUMPDEST MLOAD PUSH2 0x3329 DUP3 DUP7 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x328A JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x3353 SWAP2 SWAP3 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x31B6 JUMPI PUSH2 0x31A7 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3238 JUMP JUMPDEST PUSH2 0x3373 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST CODESIZE PUSH2 0x2F00 JUMP JUMPDEST DUP3 SWAP4 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x1 SWAP4 SWAP5 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD DUP5 SWAP3 PUSH2 0x2EDD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1260 JUMPI JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH3 0x8918FF PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x340F JUMPI JUMPDEST POP DUP2 MLOAD DUP2 MLOAD EQ SWAP2 DUP3 ISZERO SWAP3 PUSH2 0x33FB JUMPI JUMPDEST POP POP PUSH2 0x866 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP3 POP DUP2 ADD MLOAD SWAP2 ADD MLOAD EQ ISZERO CODESIZE DUP1 PUSH2 0x33F3 JUMP JUMPDEST PUSH2 0x3429 SWAP2 SWAP3 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x2424 JUMPI PUSH2 0x2416 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 MLOAD EQ SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x3446 JUMPI JUMPDEST POP PUSH2 0x866 JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x20 PUSH1 0xB SLOAD SWAP2 ADD MLOAD EQ ISZERO CODESIZE PUSH2 0x343F JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1B31 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH2 0x347D DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 SWAP5 DUP1 MLOAD DUP5 MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x204 JUMPI PUSH2 0x34BC SWAP1 PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH2 0x34AA DUP6 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x34B4 DUP4 DUP3 PUSH2 0x3465 JUMP JUMPDEST DUP6 MSTORE ADD PUSH2 0x3465 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x28A3 SWAP4 SWAP6 SWAP5 SWAP3 SWAP6 PUSH2 0x120 DUP3 ADD SWAP7 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x25B7 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x34F1 SWAP1 SWAP5 SWAP4 SWAP5 PUSH2 0x40AE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP2 MSTORE PUSH2 0x3538 PUSH1 0x60 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x866 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP6 PUSH20 0x0 SWAP1 PUSH2 0x35C2 PUSH1 0x40 DUP3 MLOAD DUP2 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x27D3C56D PUSH1 0xE1 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB DUP2 DUP7 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x37B3 JUMPI JUMPDEST POP PUSH2 0x3610 SWAP3 PUSH1 0x20 DUP3 PUSH1 0x40 SWAP4 MLOAD DUP13 SSTORE ADD MLOAD PUSH1 0x1 DUP12 ADD SSTORE PUSH1 0x20 PUSH1 0x2 DUP12 ADD SWAP4 ADD MLOAD SWAP1 DUP3 MLOAD DUP1 DUP1 SWAP7 DUP2 SWAP5 PUSH4 0x27D3C56D PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB SWAP2 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3776 JUMPI JUMPDEST PUSH1 0x20 SWAP3 POP DUP2 MLOAD SWAP1 SSTORE ADD MLOAD PUSH1 0x3 DUP8 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xE DUP3 ADD DUP1 SLOAD DUP1 JUMPDEST PUSH2 0x369C JUMPI POP POP POP SWAP1 PUSH1 0x5 PUSH2 0x3675 SWAP4 SWAP3 ADD PUSH2 0x366E DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x3FA3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3685 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 PUSH1 0x7 DUP3 DUP7 ADD ADD SSTORE ADD PUSH2 0x3678 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x1B31 JUMPI DUP4 PUSH1 0x7 PUSH2 0x36B5 DUP4 DUP7 PUSH2 0x3881 JUMP JUMPDEST POP ADD SLOAD GT ISZERO PUSH2 0x36D0 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1B31 JUMPI PUSH1 0x0 NOT ADD DUP1 PUSH2 0x3654 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1B31 JUMPI PUSH2 0x6DB PUSH2 0x36EB SWAP2 DUP6 PUSH2 0x3881 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x3730 JUMPI DUP1 DUP3 SUB PUSH2 0x375C JUMPI JUMPDEST POP POP DUP2 SLOAD DUP1 ISZERO PUSH2 0x3746 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x3712 DUP2 DUP5 PUSH2 0x3881 JUMP JUMPDEST PUSH2 0x3730 JUMPI DUP1 PUSH2 0x3727 PUSH1 0x7 PUSH1 0x0 SWAP4 ADD DUP1 SWAP3 PUSH2 0x389D JUMP JUMPDEST SSTORE DUP3 SSTORE CODESIZE PUSH2 0x36BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 DUP2 PUSH2 0x376A DUP3 SWAP4 DUP6 PUSH2 0x40F3 JUMP JUMPDEST ADD SLOAD SWAP2 ADD SSTORE CODESIZE DUP1 PUSH2 0x36FA JUMP JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x37AC JUMPI JUMPDEST PUSH2 0x378D DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x37A6 SWAP2 PUSH2 0x3465 JUMP JUMPDEST SWAP1 PUSH2 0x3623 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3783 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x37F1 JUMPI JUMPDEST PUSH2 0x37CA DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP3 PUSH1 0x40 DUP3 DUP6 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH2 0x37E8 PUSH2 0x3610 SWAP6 PUSH1 0x40 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP POP SWAP3 PUSH2 0x35D6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x37C0 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x20 PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x80 DUP6 ADD SWAP7 DUP1 SLOAD DUP7 MSTORE ADD SLOAD DUP3 DUP6 ADD MSTORE DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 SWAP2 AND SWAP2 AND SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x1B31 JUMPI JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x1B31 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1B31 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x3861 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x3861 JUMPI MOD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x38A8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x389D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x850 JUMPI PUSH2 0x38D1 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x3881 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x3730 JUMPI DUP1 MLOAD PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x38F3 JUMPI POP POP PUSH1 0x20 PUSH1 0x7 SWAP2 ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 DUP7 ADD SSTORE ADD PUSH2 0x38DD JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1B31 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x0 DUP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x3CBB JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC SLOAD SWAP5 SWAP1 PUSH32 0x0 PUSH1 0xFF AND SWAP1 DUP3 PUSH1 0x12 DUP4 LT ISZERO PUSH2 0x3C79 JUMPI POP POP PUSH1 0x12 SUB PUSH1 0xFF DUP2 GT PUSH2 0x1B31 JUMPI PUSH2 0x39A4 PUSH2 0x39B4 SWAP2 PUSH2 0x3833 JUMP JUMPDEST PUSH2 0x39AE DUP2 DUP5 PUSH2 0x3857 JUMP JUMPDEST SWAP3 PUSH2 0x3877 JUMP JUMPDEST SWAP3 JUMPDEST DUP2 ISZERO PUSH2 0x3C72 JUMPI PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH3 0x8918FF PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP6 SWAP4 SWAP2 SWAP3 SWAP2 DUP7 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x3A66 SWAP5 PUSH1 0x0 SWAP4 PUSH2 0x3C4E JUMPI JUMPDEST POP PUSH1 0x80 SWAP1 PUSH20 0x0 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3A2F DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH4 0x203469D PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 MLOAD PUSH1 0x4 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 DUP6 SWAP1 DUP2 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP6 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI DUP9 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3C2D JUMPI JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD ISZERO DUP1 PUSH2 0x3C21 JUMPI JUMPDEST ISZERO PUSH2 0x3AF0 JUMPI POP PUSH2 0x2965 SWAP5 PUSH1 0x20 DUP1 DUP4 DUP2 PUSH2 0x3AE6 SWAP6 MLOAD DUP1 MLOAD DUP9 SSTORE ADD MLOAD PUSH1 0x1 DUP8 ADD SSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x2 DUP7 ADD SSTORE ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE JUMPDEST PUSH1 0xE PUSH1 0x6 DUP5 ADD SWAP4 DUP5 SLOAD PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1906 DUP6 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x366E DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP4 POP PUSH2 0x3B13 PUSH1 0x40 DUP3 MLOAD DUP2 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB DUP2 DUP9 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3BDC JUMPI JUMPDEST POP PUSH2 0x3B61 SWAP5 PUSH1 0x20 DUP3 PUSH1 0x40 SWAP4 MLOAD DUP7 SSTORE ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x20 PUSH1 0x2 DUP6 ADD SWAP4 ADD MLOAD SWAP1 DUP3 MLOAD DUP1 DUP1 SWAP9 DUP2 SWAP5 PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB SWAP2 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI DUP9 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3B91 JUMPI JUMPDEST POP DUP2 MLOAD SWAP1 SSTORE PUSH1 0x20 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x2965 SWAP4 PUSH2 0x3AE6 SWAP1 PUSH2 0x3AD0 JUMP JUMPDEST SWAP2 POP SWAP4 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x3BD5 JUMPI JUMPDEST PUSH2 0x3BAA DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP5 PUSH1 0x40 DUP3 DUP8 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x20 DUP10 SWAP6 PUSH2 0x3BCB PUSH2 0x2965 SWAP9 PUSH2 0x3AE6 SWAP6 PUSH2 0x3465 JUMP JUMPDEST SWAP4 POP SWAP2 SWAP7 POP PUSH2 0x3B76 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3BA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x3C1A JUMPI JUMPDEST PUSH2 0x3BF3 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP5 PUSH1 0x40 DUP3 DUP8 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH2 0x3C11 PUSH2 0x3B61 SWAP8 PUSH1 0x40 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP POP SWAP5 PUSH2 0x3B27 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3BE9 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD ISZERO PUSH2 0x3AA0 JUMP JUMPDEST PUSH2 0x3C47 SWAP2 SWAP3 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x31B6 JUMPI PUSH2 0x31A7 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3A7C JUMP JUMPDEST PUSH1 0x80 SWAP2 SWAP4 POP PUSH2 0x3C6B SWAP1 PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x2424 JUMPI PUSH2 0x2416 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x3A01 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP5 SWAP2 DUP1 PUSH1 0x12 LT PUSH2 0x3C8D JUMPI JUMPDEST POP POP PUSH2 0x39B6 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH1 0x11 NOT ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x1B31 JUMPI PUSH2 0x3CAB PUSH2 0x3CB1 SWAP3 PUSH2 0x3833 JUMP JUMPDEST SWAP1 PUSH2 0x3844 JUMP JUMPDEST PUSH1 0x0 SWAP3 CODESIZE DUP1 PUSH2 0x3C86 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x850 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3D1D SWAP3 ADD PUSH1 0x6 SSTORE PUSH2 0x27C5 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH2 0x3D3B PUSH1 0x2 SLOAD PUSH2 0x3907 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x392E JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x204 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x204 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3F36 JUMPI JUMPDEST POP PUSH32 0x0 SWAP1 PUSH1 0x0 DUP4 PUSH1 0xFF DUP1 DUP6 AND SWAP1 DUP5 AND DUP2 DUP2 GT ISZERO PUSH2 0x3F00 JUMPI POP POP POP POP PUSH2 0x3DDC PUSH2 0x3DE1 SWAP3 PUSH2 0x39A4 SWAP3 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x3833 JUMP JUMPDEST SWAP3 JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x3E7F JUMPI JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP5 DUP2 ISZERO PUSH2 0x3C72 JUMPI PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH3 0x8918FF PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP6 SWAP4 SWAP2 SWAP3 SWAP2 DUP7 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x3A66 SWAP5 PUSH1 0x0 SWAP4 PUSH2 0x3C4E JUMPI POP PUSH1 0x80 SWAP1 PUSH20 0x0 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3A2F DUP4 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x850 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3ED0 SWAP3 ADD PUSH1 0x6 SSTORE PUSH2 0x27C5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP4 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0x3EF8 SWAP1 PUSH2 0x3907 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x3DF8 JUMP JUMPDEST SWAP8 SWAP5 SWAP2 SWAP6 SWAP4 SWAP3 SWAP8 LT PUSH2 0x3F15 JUMPI JUMPDEST POP POP POP PUSH2 0x3DE3 JUMP JUMPDEST PUSH2 0x3CAB SWAP3 SWAP4 SWAP7 POP PUSH2 0x3F2B SWAP5 POP SWAP1 PUSH2 0x3DDC SWAP2 PUSH2 0x381F JUMP JUMPDEST PUSH1 0x0 SWAP3 CODESIZE DUP1 DUP1 PUSH2 0x3F0D JUMP JUMPDEST PUSH2 0x3F4F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3185 JUMPI PUSH2 0x3177 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST CODESIZE PUSH2 0x3D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x28A3 SWAP2 PUSH2 0x3F90 PUSH1 0x64 DUP4 PUSH2 0x26D6 JUMP JUMPDEST PUSH2 0x4053 JUMP JUMPDEST PUSH1 0x4D DUP2 GT PUSH2 0x1B31 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x4045 PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x3FD8 PUSH2 0x1889 DUP5 PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP2 MSTORE PUSH2 0x3FF8 PUSH1 0x60 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0x6 DUP3 ADD SWAP4 PUSH1 0x4 DUP6 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x4015 DUP7 PUSH2 0x269E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 DUP5 DUP5 MSTORE PUSH1 0x0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x404F DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x40A5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x4084 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x407D JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP4 ADD MLOAD SWAP2 ADD MLOAD PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x40ED PUSH1 0xA0 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 DUP1 DUP3 EQ PUSH2 0x4127 JUMPI SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x7 DUP4 LT PUSH2 0x4111 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SWAP2 SWAP5 ADD SWAP3 DUP4 SLOAD SWAP5 DUP2 DUP5 ADD SSTORE ADD SWAP2 SWAP3 PUSH2 0x4103 JUMP JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xE0 DELEGATECALL 0x28 0x27 0xE9 PREVRANDAO 0xE9 0xEF BLOBBASEFEE GAS PUSH22 0x7B2A583FF2EB317904066941E27EFD3645E8430B6473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"2840:39307:14:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3290:10:13;1273:26:0;1269:95;;2840:39307:14;;;-1:-1:-1;;;;;;2840:39307:14;;;;;;-1:-1:-1;2840:39307:14;;3290:10:13;2840:39307:14;;;;;;;-1:-1:-1;;;;;2840:39307:14;;3052:40:0;;-1:-1:-1;3052:40:0;2093:20:1;1144:1:13;2840:39307:14;;;;;;;;;;;;;;;;;;1163:10:10;2840:39307:14;;1163:10:10;2840:39307:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2840:39307:14;;;;1448:19:10;;;2840:39307:14;;;1448:19:10;2840:39307:14;;;;;;;-1:-1:-1;;;;;2840:39307:14;8879:30;:79;;;;-1:-1:-1;8879:132:14;;;;-1:-1:-1;8879:185:14;;;;-1:-1:-1;8879:234:14;;;;-1:-1:-1;8862:307:14;;2840:39307;9211:40;2840:39307;;-1:-1:-1;;;;;;2840:39307:14;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;9261:49;2840:39307;;;;;;;;;;;;;;;9320:61;2840:39307;;;;;;;;;;;;;;;9391:61;2840:39307;;;;;;;;;;;;;;;9462:49;2840:39307;;;;;;;;;;;;;;;9594:104;;-1:-1:-1;2840:39307:14;;;;;9708:26;-1:-1:-1;2840:39307:14;;9816:10;2840:39307;;;;;-1:-1:-1;;2840:39307:14;2093:20:1;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9594:104;9640:11;2840:39307;;9640:11;;2840:39307;-1:-1:-1;;;;;2840:39307:14;;;;9633:18;2840:39307;2093:20:1;2840:39307:14;;;;;;;;;9594:104;2840:39307;;;;;;;;;;;9594:104;2840:39307;;;;;;;;;;;;;-1:-1:-1;2840:39307:14;;;;;;;2093:20:1;2840:39307:14;;;;;;;;;;;9633:18;2840:39307;;9674:13;2840:39307;;;;-1:-1:-1;;;;;2840:39307:14;;;;9665:22;2840:39307;2093:20:1;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;2093:20:1;2840:39307:14;;;;;;;;;;;9665:22;2840:39307;;9594:104;;;2840:39307;;;;-1:-1:-1;2840:39307:14;;;;;;;;;;;9665:22;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;;;;;2093:20:1;2840:39307:14;;;;;;;;;;;;;;;;9665:22;2840:39307;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:20:1;2840:39307:14;;;;;;;;;;;;;;;;9665:22;-1:-1:-1;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2840:39307:14;;2093:20:1;2840:39307:14;;;;;;-1:-1:-1;2840:39307:14;;;;;;;;-1:-1:-1;2840:39307:14;;;;;-1:-1:-1;2840:39307:14;;;;;;;;;;;;-1:-1:-1;2840:39307:14;;;;;-1:-1:-1;2840:39307:14;;;;;-1:-1:-1;2840:39307:14;;;;;;;;;;9633:18;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;;;;;;2093:20:1;2840:39307:14;;;;;;;;;;;;;9633:18;2840:39307;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:20:1;2840:39307:14;;;;;;;;;;;;;;;;9633:18;-1:-1:-1;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2840:39307:14;;2093:20:1;2840:39307:14;;;;;;-1:-1:-1;2840:39307:14;;;;;;;;;;;8862:307;9145:13;;;-1:-1:-1;9145:13:14;;-1:-1:-1;9145:13:14;8879:234;-1:-1:-1;2840:39307:14;;-1:-1:-1;;;;;2840:39307:14;9080:33;8879:234;;:185;-1:-1:-1;2840:39307:14;;-1:-1:-1;;;;;2840:39307:14;9027:37;8879:185;;:132;-1:-1:-1;2840:39307:14;;-1:-1:-1;;;;;2840:39307:14;8974:37;8879:132;;:79;-1:-1:-1;2840:39307:14;;-1:-1:-1;;;;;2840:39307:14;8925:33;8879:79;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;2840:39307:14;;-1:-1:-1;1322:31:0;2840:39307:14;-1:-1:-1;2840:39307:14;;;;;;;;;-1:-1:-1;;2840:39307:14;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2840:39307:14;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;-1:-1:-1;;2840:39307:14;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;2840:39307:14;;;;;;;;;-1:-1:-1;2840:39307:14;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":9611,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_49524":{"entryPoint":9633,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256":{"entryPoint":10109,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_fromMemory":{"entryPoint":10678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_array_uint256":{"entryPoint":10049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":10654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_EGCT_fromMemory":{"entryPoint":13453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Point_fromMemory":{"entryPoint":13413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8_fromMemory":{"entryPoint":15683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_array_uint256":{"entryPoint":10986,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_uint256":{"entryPoint":9655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_uint256_memory_ptr":{"entryPoint":10946,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":9976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_EGCT":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_EGCT_uint256_array_struct_AmountPCT_dyn_array_uint256_uint256":{"entryPoint":9695,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_struct_Point_storage_struct_Point":{"entryPoint":14328,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_struct_Point_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_array_uint256":{"entryPoint":13508,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_and_zero_memory_struct_struct_EGCT":{"entryPoint":10304,"id":null,"parameterSlots":0,"returnSlots":1},"array_push_from_struct_AmountPCT_to_array_struct_AmountPCT_storage_dyn_ptr":{"entryPoint":14516,"id":null,"parameterSlots":2,"returnSlots":0},"checked_div_uint256":{"entryPoint":14423,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_rational_by_uint256":{"entryPoint":16277,"id":null,"parameterSlots":1,"returnSlots":1},"checked_exp_rational_by_uint8":{"entryPoint":14387,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":14404,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":13400,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint8":{"entryPoint":14367,"id":null,"parameterSlots":2,"returnSlots":1},"clear_storage_range_uint256":{"entryPoint":14493,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_array_uint":{"entryPoint":10372,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_to_storage_from_array_uint256__to_array_uint":{"entryPoint":16627,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation":{"entryPoint":9942,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_49522":{"entryPoint":9886,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49623":{"entryPoint":9914,"id":null,"parameterSlots":1,"returnSlots":0},"fun_balanceOf":{"entryPoint":10427,"id":1146,"parameterSlots":2,"returnSlots":5},"fun_callOptionalReturn":{"entryPoint":16467,"id":849,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":13203,"id":84,"parameterSlots":0,"returnSlots":0},"fun_commitUserBalance":{"entryPoint":16291,"id":1434,"parameterSlots":2,"returnSlots":0},"fun_convertFromERC20":{"entryPoint":15708,"id":4355,"parameterSlots":4,"returnSlots":2},"fun_convertFromNative":{"entryPoint":14614,"id":3854,"parameterSlots":3,"returnSlots":2},"fun_deposit_inner":{"entryPoint":11034,"id":null,"parameterSlots":3,"returnSlots":0},"fun_hashEGCT":{"entryPoint":16558,"id":1642,"parameterSlots":1,"returnSlots":1},"fun_privateBurn":{"entryPoint":13539,"id":3955,"parameterSlots":5,"returnSlots":0},"fun_safeTransfer":{"entryPoint":16213,"id":472,"parameterSlots":3,"returnSlots":0},"fun_validateAuditorPublicKey":{"entryPoint":13360,"id":4024,"parameterSlots":1,"returnSlots":0},"fun_validatePublicKey":{"entryPoint":13223,"id":3997,"parameterSlots":2,"returnSlots":0},"fun_withdraw_inner":{"entryPoint":11832,"id":null,"parameterSlots":3,"returnSlots":0},"increment_uint256":{"entryPoint":14599,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_array_uint256":{"entryPoint":10895,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_array_uint256_memory_ptr":{"entryPoint":10929,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_t_uint256":{"entryPoint":10912,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_uint256":{"entryPoint":11815,"id":null,"parameterSlots":2,"returnSlots":1},"mod_uint256":{"entryPoint":14455,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_reference_type_struct_EGCT":{"entryPoint":10260,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Point":{"entryPoint":10230,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_60a3":{"entryPoint":10833,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_be31":{"entryPoint":10757,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":10181,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_struct_AmountPCT__dyn_ptr":{"entryPoint":14465,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"2155":[{"length":32,"start":5087},{"length":32,"start":12359},{"length":32,"start":14686},{"length":32,"start":15765}]},"linkReferences":{"contracts/libraries/BabyJubJub.sol":{"BabyJubJub":[{"length":20,"start":1218},{"length":20,"start":6568},{"length":20,"start":8237},{"length":20,"start":12263},{"length":20,"start":12816},{"length":20,"start":13709},{"length":20,"start":14855},{"length":20,"start":15959}]}},"object":"608080604052600436101561001357600080fd5b60003560e01c908162b0938d1461256757508062fdd58e1461253f578063034a1c181461250957806306fdde031461244a57806313a4f0db146122eb57806314dda7fd1461227b5780631ff0769a14612224578063204ac7cc14611c345780632b20e39714611c0b5780632d94761014611403578063313ce567146113c55780633ec045a61461139c5780634f64b2be1461135a5780635c8b5f441461131b57806361832767146112f8578063715018a61461129357806375794a3c1461127557806379ba5097146111ec57806382f09ea214611114578063864eb164146110eb5780638da5cb5b146110c25780638daed5281461109957806391584d491461107457806395ad89e61461098957806395d89b4114610f6d578063a5566e2514610da5578063a865d5b214610c82578063aa6ca80814610bb6578063b39f252d14610b5a578063b7365f1f14610b29578063ba48747314610ad4578063c3a716eb14610aab578063cbf1304d14610a20578063e30c3978146109f7578063e5df8b84146109c3578063efd8be6214610989578063f2fde38b1461091a578063f4b2be44146102095763fc97a303146101ca57600080fd5b34610204576020366003190112610204576001600160a01b036101eb61258b565b1660005260046020526020604060002054604051908152f35b600080fd5b346102045736600319016104408112610204576103601361020457366104441161020457600a5415158061090d575b61024190612a05565b600954610258906001600160a01b03161515612a51565b60ff600354166108fc57600c54604051630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa9081156108a6576000916108dd575b50156108cc576102c76040516102b28161269e565b610104358152610124356020820152336133a7565b6102ea6040516102d68161269e565b610244358152610264356020820152613430565b601054604080516379f9173960e11b8152916001600160a01b03169060048084013781604460008183015b600282106108b25750505061036481602093604060c480840137610260610104808401375afa9081156108a657600091610877575b50156108665760405161035c8161269e565b6101443581526101643560208201526040516103778161269e565b6101843581526101a4356020820152604051916103938361269e565b825260208201526040516103a68161269e565b6101c43581526101e4356020820152604051906103c28261269e565b610204358252610224356020830152604051906103de8261269e565b815260208101918252604051906103f660e0836126d6565b600093610364835b6104448210610840575050610412906140ae565b3385526008602052604085208580526020526005604086200154604051906020820192835260408201526040815261044b6060826126d6565b519020903385526008602052604085208580526020526004604086200182865260205260ff6001604087200154169133865260086020526040862086805260205260046040872001908652602052604085205491156108315733855260086020526040852085805260205260408520936104f1604073__$3599097dbd61087c0ceb2349e224575c52$__93518151809381926327d3c56d60e11b83528a600484016137f8565b0381865af49081156108265787916107dd575b508051865560200151600186015551604080516327d3c56d60e11b81529260028701928491908290819061053c9087600484016137f8565b03915af49081156107d2578691610791575b6020925081519055015160038401553384526008602052604084208480526020526040842090600e82018054805b610678575050506005016105908154613907565b905561059c8333613fa3565b825b6007811061066157836040516105b560e0826126d6565b60e0368237815b60078110610607575060018060a01b0360095416906105de60405180926125b7565b7f047fabd75c92ead101dbbb10dd37a09c205f633da9db8ce7078c2f33e84710e560e03392a380f35b80600c0180600c1161064d576013811015610639579060019160051b61010401356106328285612aa0565b52016105bc565b634e487b7160e01b84526032600452602484fd5b634e487b7160e01b84526011600452602484fd5b60019060208351930192600782860101550161059e565b600019810181811161077d578360076106918386613881565b50015411156106c0575b5080156106ac57600019018061057c565b634e487b7160e01b87526011600452602487fd5b82546000198101908111610769576106db6106e39185613881565b509184613881565b9190916107275780820361074f575b50508154801561073b576000190161070a8184613881565b610727578061071e60078b9301809261389d565b5582558761069b565b634e487b7160e01b89526004899052602489fd5b634e487b7160e01b88526031600452602488fd5b60078161075d8293856140f3565b015491015587806106f2565b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b88526011600452602488fd5b905060403d6040116107cb575b6107a881846126d6565b8201916040818403126107c7576020926107c191613465565b9061054e565b8680fd5b503d61079e565b6040513d88823e3d90fd5b905060403d60401161081f575b6107f481836126d6565b81019260408285031261081b57602061081261053c95604094613465565b92505092610504565b8780fd5b503d6107ea565b6040513d89823e3d90fd5b6309bde33960e01b8552600485fd5b81358152602091820191016103fe565b634e487b7160e01b600052604160045260246000fd5b6309bde33960e01b60005260046000fd5b610899915060203d60201161089f575b61089181836126d6565b81019061299e565b8161034a565b503d610887565b6040513d6000823e3d90fd5b829350604081816001949581943701930191018492610315565b632163950f60e01b60005260046000fd5b6108f6915060203d60201161089f5761089181836126d6565b8161029d565b631cc6a69960e11b60005260046000fd5b50600b5460011415610238565b346102045760203660031901126102045761093361258b565b61093b613393565b60018060a01b0316806001600160601b0360a01b600154161760015560018060a01b03600054167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700600080a3005b34610204576020366003190112610204576001600160a01b036109aa61258b565b1660005260156020526020604060002054604051908152f35b34610204576020366003190112610204576004356000526005602052602060018060a01b0360406000205416604051908152f35b34610204576000366003190112610204576001546040516001600160a01b039091168152602090f35b34610204576040366003190112610204576001600160a01b03610a4161258b565b166000526008602052604060002060243560005260205260c06040600020610a6881612814565b906006600582015491015490610a9f6040518094602080606092818151805187520151828601520151805160408501520151910152565b608083015260a0820152f35b34610204576000366003190112610204576010546040516001600160a01b039091168152602090f35b3461020457604036600319011261020457610aed61258b565b60243590600382101561020457610b02613393565b60018060a01b0316600052601460205260406000209060ff80198354169116179055600080f35b34610204576020366003190112610204576004356000526013602052602060ff604060002054166040519015158152f35b34610204576020366003190112610204576001600160a01b03610b7b61258b565b16600052601460205260ff604060002054166040516003821015610ba0576020918152f35b634e487b7160e01b600052602160045260246000fd5b34610204576000366003190112610204576040518060206006549283815201809260066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9060005b818110610c635750505081610c179103826126d6565b6040519182916020830190602084525180915260408301919060005b818110610c41575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610c33565b82546001600160a01b0316845260209093019260019283019201610c01565b34610204576020366003190112610204576040610c9d61258b565b610ca5612840565b5060e090818351610cb682826126d6565b369037600091610cc4612840565b508351610cd182826126d6565b3690376001600160a01b031681526008602090815282822082805290522060058101546006820154600e83019290610d0882612814565b9184549067ffffffffffffffff82116108505760405191610d2f60208260051b01846126d6565b80835260208301966000526020600020966000905b828210610d705750505090610d5f6007610d6c949301612884565b90604051958695866125df565b0390f35b60086020600192604051610d838161269e565b610d8c8d612884565b815260078d015483820152815201990191019097610d44565b346102045761040036600319011261020457366023190161030081126102045761010060405191610dd58361269e565b1261020457604051610de6816126ba565b610df136602461277d565b81523660831215610204576040908151610e0b83826126d6565b803660e41161020457836064915b60e48310610f53575050506020820152610e343660e461277d565b828201528252366101431215610204578051610e52610200826126d6565b80366103241161020457610124905b6103248210610f43575050602083015236610343121561020457610e8736610324612741565b90600a54151580610f36575b610e9c90612a05565b600954610eb3906001600160a01b03161515612a51565b60ff60035416156108fc57600c548151630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa918215610f2c5750600091610f0d575b50156108cc57610f0b91600435612e38565b005b610f26915060203d60201161089f5761089181836126d6565b83610ef9565b513d6000823e3d90fd5b50600b5460011415610e93565b8135815260209182019101610e61565b602090610f60368561277d565b8152019101908490610e19565b346102045760003660031901126102045760006040519080601254908160011c9160018116801561106a575b6020841081146110565783865290811561102f5750600114610fd2575b610d6c84610fc6818603826126d6565b604051918291826126f8565b601281527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444939250905b80821061101557509091508101602001610fc682610fb6565b919260018160209254838588010152019101909291610ffc565b60ff191660208087019190915292151560051b85019092019250610fc69150839050610fb6565b634e487b7160e01b83526022600452602483fd5b92607f1692610f99565b34610204576000366003190112610204576040600a54600b5482519182526020820152f35b3461020457600036600319011261020457600f546040516001600160a01b039091168152602090f35b34610204576000366003190112610204576000546040516001600160a01b039091168152602090f35b3461020457600036600319011261020457600e546040516001600160a01b039091168152602090f35b610120366003190112610204576111296125a1565b36606312156102045761113d366044612741565b600a541515806111df575b61115190612a05565b600954611168906001600160a01b03161515612a51565b60ff60035416156108fc57600c54604051630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa9081156108a6576000916111c0575b50156108cc57610f0b91600435612b1a565b6111d9915060203d60201161089f5761089181836126d6565b836111ae565b50600b5460011415611148565b3461020457600036600319011261020457600154336001600160a01b039091160361126057600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b63118cdaa760e01b6000523360045260246000fd5b34610204576000366003190112610204576020600254604051908152f35b34610204576000366003190112610204576112ac613393565b600180546001600160a01b0319908116909155600080549182168155906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461020457600036600319011261020457602060ff600354166040519015158152f35b34610204576020366003190112610204576001600160a01b0361133c61258b565b166000526007602052602060ff604060002054166040519015158152f35b3461020457602036600319011261020457600435600654811015610204576113836020916127c5565b905460405160039290921b1c6001600160a01b03168152f35b34610204576000366003190112610204576009546040516001600160a01b039091168152602090f35b3461020457600036600319011261020457602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610204576106203660031901126102045761141d61258b565b6024359036604319016105008112610204576101006040519161143f8361269e565b126102045760405191611451836126ba565b61145c36604461277d565b83523660a3121561020457604092835161147685826126d6565b80366101041161020457856084915b6101048310611bf15750505060208201526114a23661010461277d565b8482015282523661016312156102045782516114c0610400826126d6565b80366105441161020457610144905b6105448210611be157505060208301908152366106241161020457600a54151580611bd4575b6114fe90612a05565b600954611515906001600160a01b03161515612a51565b600c548451630b1fba9160e11b81523360048201526001600160a01b039091169390602081602481885afa908115611baa57600091611bb5575b50156108cc578451630b1fba9160e11b81526001600160a01b0384166004820181905294602090829060249082905afa908115611baa57600091611b8b575b50156108cc57816115e46116459351946115c088516115ac8161269e565b8751815260208801516020820152336133a7565b8751906115cc8261269e565b610140870151825261016087015160208301526133a7565b61160a86516115f28161269e565b6102e086015181526103008601516020820152613430565b60018060a01b03600f5416915161165981519261164f8960208501519401519151938a51978896630f3022c960e21b88526004880190612ac2565b6044860190612aea565b60c4840190612ac2565b600061010483015b60208210611b7157505050610504816020935afa908115611b6657600091611b47575b50156108665782516080810181811067ffffffffffffffff8211176108505784526116ad612840565b815260208101946116bc612840565b8652848201906116ca612840565b82526060830160e09387516116df86826126d6565b8536823782528786015160608701518951916116fa8361269e565b82526020820152608087015160a08801518a51916117178361269e565b8252602082015289519161172a8361269e565b82526020820152815260c0860151858701518951916117488361269e565b825260208201526101008701516101208801518a51916117678361269e565b8252602082015289519161177a8361269e565b8252602082015289526101808601516101a087015189519161179b8361269e565b825260208201526101c08701516101e08801518a51916117ba8361269e565b825260208201528951916117cd8361269e565b82526020820152845260005b60078110611b05575051975192519051928751906117f860e0836126d6565b600099610544835b6106248210611af557505090611818929185336134e3565b85885260086020528688208289526020528688209081541580611ae9575b156119a657602080828160039451805187550151600186015501518051600285015501519101555b848752600860205285872090875260205261191385872091600e600584015461188e61188986612814565b6140ae565b90895190602082019283528a8201528981526118ab6060826126d6565b519020936118f88a600160068401978c8954938151946118ca8661269e565b85526020850192848452815260048701602052209251835551151591019060ff801983541691151516179055565b84548951936119068561269e565b84526020840152016138b4565b61191d8154613907565b905583519161192c82846126d6565b81368437855b6007811061197b5750507f1fe42c57a12ee7d4848276c111f82c24fe213a94a603b21da88785cd882c9ccf9061197560018060a01b0360095416955180946125b7565b3392a480f35b806019018060191161077d579061199460019284612ab1565b5161199f8287612aa0565b5201611932565b73__$3599097dbd61087c0ceb2349e224575c52$__90886119dd818351815180938192637bb10bcb60e01b835289600484016137f8565b0381875af4908115611adf578c91611a9b575b5092602084611a2895518755015160018601556020600286019301519082518080968194637bb10bcb60e01b835287600484016137f8565b03915af4918215611a91578a92611a4f575b5081602091600393519055015191015561185e565b9150883d8a11611a8a575b611a6481846126d6565b8201908983830312611a8657611a7e602092600394613465565b925090611a3a565b8a80fd5b503d611a5a565b89513d8c823e3d90fd5b9190503d8b11611ad8575b611ab081836126d6565b8101928a82850312611ad4576020611acc611a28958d94613465565b9194506119f0565b8b80fd5b503d611aa6565b82513d8e823e3d90fd5b50600182015415611836565b8135815260209182019101611800565b806010019081601011611b3157611b1e60019289612ab1565b51611b2a828651612aa0565b52016117d9565b634e487b7160e01b600052601160045260246000fd5b611b60915060203d60201161089f5761089181836126d6565b85611684565b84513d6000823e3d90fd5b829350602080916001939451815201930191018492611661565b611ba4915060203d60201161089f5761089181836126d6565b8761158e565b86513d6000823e3d90fd5b611bce915060203d60201161089f5761089181836126d6565b8761154f565b50600b54600114156114f5565b81358152602091820191016114cf565b602090611bfe368561277d565b8152019101908690611485565b3461020457600036600319011261020457600c546040516001600160a01b039091168152602090f35b346102045761042036600319011261020457611c4e61258b565b61040036602319011261020457611c63613393565b600a54151580612217575b611c7790612a05565b600954611c8e906001600160a01b03161515612a51565b60ff600354166108fc57600c54604051630b1fba9160e11b81526001600160a01b03838116600483018190529260209183916024918391165afa9081156108a6576000916121f8575b50156108cc5760405191611ced610300846126d6565b82366104241161020457610124905b61042482106121e8575050825146036121d757604051611d3591611d1f8261269e565b60408501518252606085015160208301526133a7565b611d5c604051611d448161269e565b6101e084015181526102008401516020820152613430565b60208201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110156121c65780600052601360205260ff6040600020541661086657600d54604080516302680e2d60e51b8152916001600160a01b031690602460048401378160646000604483015b600282106121ac5750505061040481602093604060e460c48401376103006101246101048401375afa9081156108a65760009161218d575b50156108665760808301519060a084015160405192611e228461269e565b8352602083015260c08401519160e085015160405193611e418561269e565b8452602084015260405190611e558261269e565b81526020810192835260e09260405191611e6f85846126d6565b8436843760005b60078110612162575085600052600860205260406000206000805260205260406000209182541580612156575b156120265760209081600393518051865501516001850155518051600285015501519101555b836000526008602052604060002060008052602052611f7a604060002091600e6005840154611efa61188986612814565b906040519060208201928352604082015260408152611f1a6060826126d6565b51902093611f6b6006820195600187549160405192611f388461269e565b835260208301908282526000526004850160205260406000209251835551151591019060ff801983541691151516179055565b8454604051936119068561269e565b611f848154613907565b905560005260136020526040600020600160ff1982541617905560405192611fac82856126d6565b8136853760005b60078110611ffb5750507f0d78494055b7f1585d1e50d778838efd294162edeaf41569996739183722254b9060018060a01b036009541693611ff860405180926125b7565ba3005b806011019081601111611b315761201460019284612a8f565b5161201f8288612aa0565b5201611fb3565b61205c604073__$3599097dbd61087c0ceb2349e224575c52$__9351815180938192637bb10bcb60e01b835288600484016137f8565b0381865af49081156108a657600091612111575b50805184556020015160018401555160408051637bb10bcb60e01b8152926002850192849190829081906120a89087600484016137f8565b03915af49182156108a6576000926120d0575b50816020916003935190550151910155611ec9565b915060403d60401161210a575b6120e781846126d6565b82019060408383031261020457612102602092600394613465565b9250906120bb565b503d6120dd565b905060403d60401161214f575b61212881836126d6565b8101926040828503126102045760206121466120a895604094613465565b92505092612070565b503d61211e565b50600183015415611ea3565b806008019081600811611b315761217b6001928a612a8f565b516121868287612aa0565b5201611e76565b6121a6915060203d60201161089f5761089181836126d6565b84611e04565b829350604081816001949581943701930191018492611dcc565b632ec8265960e11b60005260046000fd5b633d23e4d160e11b60005260046000fd5b8135815260209182019101611cfc565b612211915060203d60201161089f5761089181836126d6565b83611cd7565b50600b5460011415611c6e565b346102045760403660031901126102045761223d61258b565b602435801515810361020457610f0b91612255613393565b60018060a01b0316600052600760205260406000209060ff801983541691151516179055565b3461020457604036600319011261020457610d6c6122db61229a61258b565b6122a26125a1565b6122aa612840565b5060e06040516122ba82826126d6565b3690376001600160a01b0316600090815260046020526040902054906128bb565b91604095939551958695866125df565b346102045760203660031901126102045761230461258b565b61230c613393565b600c54604051630b1fba9160e11b81526001600160a01b03928316600482018190529290911690602081602481855afa9081156108a65760009161242b575b50156108cc576040602491815192838092628918ff60e51b82528660048301525afa9081156108a6576000916123fc575b506009549082156123eb57826001600160601b0360a01b83161760095560208151910151908160206040516123b08161269e565b8381520152600a55600b556001600160a01b03167fdbeeb2970745c839058876b084c0d772566ff6b5aaa47938c394cd171a38c24c600080a3005b63d92e233d60e01b60005260046000fd5b61241e915060403d604011612424575b61241681836126d6565b8101906129b6565b8261237c565b503d61240c565b612444915060203d60201161089f5761089181836126d6565b8361234b565b346102045760003660031901126102045760006040519080601154908160011c916001811680156124ff575b6020841081146110565783865290811561102f57506001146124a257610d6c84610fc6818603826126d6565b601181527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68939250905b8082106124e557509091508101602001610fc682610fb6565b9192600181602092548385880101520191019092916124cc565b92607f1692612476565b3461020457600036600319011261020457600a54151580612532575b6020906040519015158152f35b50600b5460011415612525565b3461020457604036600319011261020457610d6c6122db61255e61258b565b602435906128bb565b3461020457600036600319011261020457600d546001600160a01b03168152602090f35b600435906001600160a01b038216820361020457565b602435906001600160a01b038216820361020457565b906000905b600782106125c957505050565b60208060019285518152019301910190916125bc565b929195949395612612846101c0810193602080606092818151805187520151828601520151805160408501520151910152565b60808401526101c060a0840152815180915260206101e0840192019060005b818110612652575050509061264e6101a0929560c08301906125b7565b0152565b9091928351805182906000915b600783106126885750505061010060019260208093015160e08201520194019101919091612631565b602080600192845181520192019201919061265f565b6040810190811067ffffffffffffffff82111761085057604052565b6060810190811067ffffffffffffffff82111761085057604052565b90601f8019910116810190811067ffffffffffffffff82111761085057604052565b91909160208152825180602083015260005b81811061272b575060409293506000838284010152601f8019910116010190565b806020809287010151604082860101520161270a565b91906040519261275260e0856126d6565b839060e0810192831161020457905b82821061276d57505050565b8135815260209182019101612761565b9080601f830112156102045760408051929061279990846126d6565b82906040810192831161020457905b8282106127b55750505090565b81358152602091820191016127a8565b6006548110156127e057600660005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b906040516128038161269e565b602060018294805484520154910152565b906040516128218161269e565b602061283b60028395612833816127f6565b8552016127f6565b910152565b6040519061284d8261269e565b8160405161285a8161269e565b600081526000602082015281526020604051916128768361269e565b600083526000828401520152565b60405191906000835b600782106128a5575050506128a360e0836126d6565b565b600160208192855481520193019101909161288d565b6128c3612840565b5060e06040516128d382826126d6565b36903760018060a01b03166000526008602052604060002090600052602052604060002090600582015491600e81019160068201549061291283612814565b9493805467ffffffffffffffff8111610850576040519161293960208360051b01846126d6565b818352602083019060005260206000206000915b83831061296957505050506007612965919401612884565b9190565b6008602060019260405161297c8161269e565b61298586612884565b815260078601548382015281520192019201919061294d565b90816020910312610204575180151581036102045790565b906040828203126102045780601f830112156102045760408051926129db82856126d6565b8391810192831161020457905b8282106129f55750505090565b81518152602091820191016129e8565b15612a0c57565b60405162461bcd60e51b815260206004820152601a60248201527f41756469746f72207075626c6963206b6579206e6f74207365740000000000006044820152606490fd5b15612a5857565b60405162461bcd60e51b815260206004820152600f60248201526e105d591a5d1bdc881b9bdd081cd95d608a1b6044820152606490fd5b9060188110156127e05760051b0190565b9060078110156127e05760051b0190565b9060208110156127e05760051b0190565b906000905b60028210612ad457505050565b6020806001928551815201930191019091612ac7565b906000905b60028210612afc57505050565b6020604082612b0e6001948751612ac2565b01930191019091612aef565b916001600160a01b03821691908215612d045782600052600760205260ff60406000205416612cc8576040516370a0823160e01b8152306004820152602081602481875afa9081156108a657600091612c96575b50612ba96040516323b872dd60e01b602082015233602482015230604482015286606482015260648152612ba36084826126d6565b85614053565b6040516370a0823160e01b815230600482015290602082602481885afa80156108a6578692600091612c5d575b5090612be191613458565b03612c4c57612bf1918433613d5c565b918180612c3a575b505060405192835260208301526040820152600060608201527fd3b8abedf9b219788ce9c4431056d7d4b83973b9f7072ac174e1fe2479d1a2e760803392a2565b612c45913390613f55565b3881612bf9565b6312171d8360e31b60005260046000fd5b919250506020813d602011612c8e575b81612c7a602093836126d6565b810103126102045751859190612be1612bd6565b3d9150612c6d565b90506020813d602011612cc0575b81612cb1602093836126d6565b81010312610204575138612b6e565b3d9150612ca4565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b881a5cc8189b1858dadb1a5cdd195960621b6044820152606490fd5b915050813410612de2573360005260156020526040600020908154838101809111611b3157612d3592558233613916565b90823411612daf575b6040518381528260208201527f2d45cf213b0878e6582a0bddc676c202f8f57ed3cd74e8ccf8955ce1359bd42760403392a260405192835260208301526040820152600160608201527fd3b8abedf9b219788ce9c4431056d7d4b83973b9f7072ac174e1fe2479d1a2e760803392a2565b6000808080612dbe8734613458565b818115612dd9575b3390f1612d3e576040513d6000823e3d90fd5b506108fc612dc6565b60405162461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e74206e617469766520746f6b656e2073656e7400006044820152606490fd5b9060108110156127e05760051b0190565b91906020810180519182519361164560405192612e548461269e565b602086019485518552612e72604088019586516020820152336133a7565b612e98604051612e818161269e565b60e089015181526101008901516020820152613430565b60018060a01b03600e54169151612ed581519261164f6040602085015194015191519360405197889663c82febf560e01b88526004880190612ac2565b600061010483015b6010821061337957505050610304816020935afa9081156108a65760009161335a575b50156108665760008681526005602052604090205485906001600160a01b0316156131ce57506000868152600560205260409020546001600160a01b03169283156131bd57608086612fe3946060880151938389015160405195612f638761269e565b8652602086015260a089015160c08a015160405191612f818361269e565b8252602082015260405195612f958761269e565b8652602086015251905160405191612fac8361269e565b825260208201908152604051630203469d60e11b815291516004830152516024820152604481019190915293849081906064820190565b038173__$3599097dbd61087c0ceb2349e224575c52$__5af49081156108a6576130179360009261318c575b5087336134e3565b60405163313ce56760e01b815290602082600481845afa9182156108a6576130999260ff9160009161315d575b507f000000000000000000000000000000000000000000000000000000000000000060ff169116858282111561312b57506130856130909261308a92613458565b613f95565b85613844565b905b3390613f55565b6040519060e06130a981846126d6565b36833760005b600781106131005750506009546040516001600160a01b039091169333937fae09dce9b789cf9600e6765940d134d8247429396faf72db0f7b33ed5ca8294c9383926130fb92846134c4565b0390a3565b806009019081600911611b315761311960019284612e27565b516131248286612aa0565b52016130af565b929180821061313c575b5050613092565b61315592935061314f9161308591613458565b85613857565b903880613135565b61317f915060203d602011613185575b61317781836126d6565b810190613d43565b38613044565b503d61316d565b6131af91925060803d6080116131b6575b6131a781836126d6565b81019061348d565b903861300f565b503d61319d565b638698bf3760e01b60005260046000fd5b60809061320c94929360608701519383880151604051956131ee8761269e565b8652602086015260a088015160c089015160405191612f818361269e565b038173__$3599097dbd61087c0ceb2349e224575c52$__5af49081156108a65761324093600092613339575b5086336134e3565b3360005260156020526040600020613259838254613458565b90558160008115613330575b600080809381933390f1156108a6576040519060e061328481846126d6565b36833760005b600781106133055750507fae09dce9b789cf9600e6765940d134d8247429396faf72db0f7b33ed5ca8294c906040518381528460208201527f02a25615d4309b997a752e7e0e81a331709124ed95ead4d561a1cd277785b54160403392a260018060a01b0360095416936130fb6040519283923396846134c4565b806009019081600911611b315761331e60019284612e27565b516133298286612aa0565b520161328a565b506108fc613265565b61335391925060803d6080116131b6576131a781836126d6565b9038613238565b613373915060203d60201161089f5761089181836126d6565b38612f00565b829350602080916001939451815201930191018492612edd565b6000546001600160a01b0316330361126057565b600c5460408051628918ff60e51b81526001600160a01b0393841660048201529392909184916024918391165afa9182156108a65760009261340f575b508151815114918215926133fb575b505061086657565b6020919250810151910151141538806133f3565b61342991925060403d6040116124245761241681836126d6565b90386133e4565b600a5481511490811591613446575b5061086657565b90506020600b5491015114153861343f565b91908203918211611b3157565b91908260409103126102045760405161347d8161269e565b6020808294805184520151910152565b90608082820312610204576134bc9060408051936134aa8561269e565b6134b48382613465565b855201613465565b602082015290565b6040906128a393959492956101208201968252602082015201906125b7565b90916134f1909493946140ae565b60018060a01b0382169081600052600860205260406000208460005260205260056040600020015460405190602082019283526040820152604081526135386060826126d6565b51902060008281526008602090815260408083208784528252808320938352600490930190522060018101549054919060ff16156108665780600052600860205260406000208460005260205260406000209573__$3599097dbd61087c0ceb2349e224575c52$__906135c2604082518151809381926327d3c56d60e11b83528d600484016137f8565b0381865af49081156108a6576000916137b3575b5061361092602082604093518c55015160018b0155602060028b0193015190825180809681946327d3c56d60e11b835287600484016137f8565b03915af49081156108a657600091613776575b6020925081519055015160038701556000526008602052604060002083600052602052604060002090600e82018054805b61369c5750505090600561367593920161366e8154613907565b9055613fa3565b60005b6007811061368557505050565b600190602083519301926007828601015501613678565b6000198101818111611b31578360076136b58386613881565b50015411156136d0575b508015611b31576000190180613654565b82546000198101908111611b31576106db6136eb9185613881565b9190916137305780820361375c575b50508154801561374657600019016137128184613881565b6137305780613727600760009301809261389d565b558255386136bf565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60078161376a8293856140f3565b015491015538806136fa565b905060403d6040116137ac575b61378d81846126d6565b820191604081840312610204576020926137a691613465565b90613623565b503d613783565b905060403d6040116137f1575b6137ca81836126d6565b8101926040828503126102045760206137e861361095604094613465565b925050926135d6565b503d6137c0565b90929160206060916001608085019680548652015482850152805160408501520151910152565b9060ff8091169116039060ff8211611b3157565b60ff16604d8111611b3157600a0a90565b81810292918115918404141715611b3157565b8115613861570490565b634e487b7160e01b600052601260045260246000fd5b8115613861570690565b80548210156127e05760005260206000209060031b0190600090565b8181106138a8575050565b6000815560010161389d565b8054600160401b811015610850576138d191600182018155613881565b91909161373057805160005b600781106138f357505060206007910151910155565b6001906020835193019281860155016138dd565b6000198114611b315760010190565b90929160008052600460205260406000205415613cbb575b600080805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec5494907f000000000000000000000000000000000000000000000000000000000000000060ff1690826012831015613c7957505060120360ff8111611b31576139a46139b491613833565b6139ae8184613857565b92613877565b925b8115613c7257600c5460408051628918ff60e51b81526001600160a01b038481166004830181905291959391929186916024918391165afa9182156108a657613a6694600093613c4e575b5060809073__$3599097dbd61087c0ceb2349e224575c52$__936020815191015160405191613a2f8361269e565b825260208201908152604051630203469d60e11b815291516004830152516024820152604481019190915294859081906064820190565b0381855af49081156108a6578894600092613c2d575b50600052600860205260406000208460005260205260406000209182541580613c21575b15613af05750612965946020808381613ae695518051885501516001870155015180516002860155015160038401555b600e60068401938454604051936119068561269e565b61366e8154613907565b9350613b1360408251815180938192637bb10bcb60e01b835287600484016137f8565b0381885af49081156108a657600091613bdc575b50613b6194602082604093518655015160018501556020600285019301519082518080988194637bb10bcb60e01b835287600484016137f8565b03915af49081156108a6578894600092613b91575b508151905560200151600382015561296593613ae690613ad0565b9150935060403d604011613bd5575b613baa81836126d6565b8101946040828703126102045760208995613bcb61296598613ae695613465565b9350919650613b76565b503d613ba0565b905060403d604011613c1a575b613bf381836126d6565b810194604082870312610204576020613c11613b6197604094613465565b92505094613b27565b503d613be9565b50600183015415613aa0565b613c4791925060803d6080116131b6576131a781836126d6565b9038613a7c565b6080919350613c6b9060403d6040116124245761241681836126d6565b9290613a01565b5050509190565b9290949180601210613c8d575b50506139b6565b9194509150601119019060ff8211611b3157613cab613cb192613833565b90613844565b6000923880613c86565b6002547f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec819055600090815260056020526040902080546001600160a01b0319169055600654600160401b81101561085057806001613d1d92016006556127c5565b81549060018060a01b039060031b1b19169055613d3b600254613907565b60025561392e565b90816020910312610204575160ff811681036102045790565b60405163313ce56760e01b81529094936001600160a01b03909316929190602081600481875afa9081156108a657600091613f36575b507f00000000000000000000000000000000000000000000000000000000000000009060008360ff80851690841681811115613f005750505050613ddc613de1926139a49261381f565b613833565b925b80600052600460205260406000205415613e7f575b6000526004602052604060002054948115613c7257600c5460408051628918ff60e51b81526001600160a01b038481166004830181905291959391929186916024918391165afa9182156108a657613a6694600093613c4e575060809073__$3599097dbd61087c0ceb2349e224575c52$__936020815191015160405191613a2f8361269e565b6002548160005260046020528060406000205560005260056020526040600020816001600160601b0360a01b825416179055600654600160401b81101561085057806001613ed092016006556127c5565b81546001600160a01b0360039290921b91821b19169083901b179055600254613ef890613907565b600255613df8565b9794919593929710613f15575b505050613de3565b613cab92939650613f2b945090613ddc9161381f565b600092388080613f0d565b613f4f915060203d6020116131855761317781836126d6565b38613d92565b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044808301939093529181526128a391613f906064836126d6565b614053565b604d8111611b3157600a0a90565b60018060a01b0316600052600860205260406000209060005260205260406000206140456005820154613fd861188984612814565b906040519060208201928352604082015260408152613ff86060826126d6565b51902091600160068201936004855493604051946140158661269e565b855260208501928484526000520160205260406000209251835551151591019060ff801983541691151516179055565b61404f8154613907565b9055565b906000602091828151910182855af1156108a6576000513d6140a557506001600160a01b0381163b155b6140845750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b6001141561407d565b805190602080835193015191015160208151910151906040519260208401948552604084015260608301526080820152608081526140ed60a0826126d6565b51902090565b9080821461412757908154906000915b600783106141115750505050565b6001809194019283549481840155019192614103565b505056fea264697066735822122085e0f42827e944e9ef4a5a757b2a583ff2eb317904066941e27efd3645e8430b64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xB0938D EQ PUSH2 0x2567 JUMPI POP DUP1 PUSH3 0xFDD58E EQ PUSH2 0x253F JUMPI DUP1 PUSH4 0x34A1C18 EQ PUSH2 0x2509 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x244A JUMPI DUP1 PUSH4 0x13A4F0DB EQ PUSH2 0x22EB JUMPI DUP1 PUSH4 0x14DDA7FD EQ PUSH2 0x227B JUMPI DUP1 PUSH4 0x1FF0769A EQ PUSH2 0x2224 JUMPI DUP1 PUSH4 0x204AC7CC EQ PUSH2 0x1C34 JUMPI DUP1 PUSH4 0x2B20E397 EQ PUSH2 0x1C0B JUMPI DUP1 PUSH4 0x2D947610 EQ PUSH2 0x1403 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C5 JUMPI DUP1 PUSH4 0x3EC045A6 EQ PUSH2 0x139C JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x135A JUMPI DUP1 PUSH4 0x5C8B5F44 EQ PUSH2 0x131B JUMPI DUP1 PUSH4 0x61832767 EQ PUSH2 0x12F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1293 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x1275 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x11EC JUMPI DUP1 PUSH4 0x82F09EA2 EQ PUSH2 0x1114 JUMPI DUP1 PUSH4 0x864EB164 EQ PUSH2 0x10EB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10C2 JUMPI DUP1 PUSH4 0x8DAED528 EQ PUSH2 0x1099 JUMPI DUP1 PUSH4 0x91584D49 EQ PUSH2 0x1074 JUMPI DUP1 PUSH4 0x95AD89E6 EQ PUSH2 0x989 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xF6D JUMPI DUP1 PUSH4 0xA5566E25 EQ PUSH2 0xDA5 JUMPI DUP1 PUSH4 0xA865D5B2 EQ PUSH2 0xC82 JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0xBB6 JUMPI DUP1 PUSH4 0xB39F252D EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0xB7365F1F EQ PUSH2 0xB29 JUMPI DUP1 PUSH4 0xBA487473 EQ PUSH2 0xAD4 JUMPI DUP1 PUSH4 0xC3A716EB EQ PUSH2 0xAAB JUMPI DUP1 PUSH4 0xCBF1304D EQ PUSH2 0xA20 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x9F7 JUMPI DUP1 PUSH4 0xE5DF8B84 EQ PUSH2 0x9C3 JUMPI DUP1 PUSH4 0xEFD8BE62 EQ PUSH2 0x989 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x91A JUMPI DUP1 PUSH4 0xF4B2BE44 EQ PUSH2 0x209 JUMPI PUSH4 0xFC97A303 EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1EB PUSH2 0x258B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x204 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x440 DUP2 SLT PUSH2 0x204 JUMPI PUSH2 0x360 SGT PUSH2 0x204 JUMPI CALLDATASIZE PUSH2 0x444 GT PUSH2 0x204 JUMPI PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0x90D JUMPI JUMPDEST PUSH2 0x241 SWAP1 PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x258 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH2 0x8FC JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x8DD JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI PUSH2 0x2C7 PUSH1 0x40 MLOAD PUSH2 0x2B2 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD DUP2 MSTORE PUSH2 0x124 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x2EA PUSH1 0x40 MLOAD PUSH2 0x2D6 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x244 CALLDATALOAD DUP2 MSTORE PUSH2 0x264 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3430 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79F91739 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x4 DUP1 DUP5 ADD CALLDATACOPY DUP2 PUSH1 0x44 PUSH1 0x0 DUP2 DUP4 ADD JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x8B2 JUMPI POP POP POP PUSH2 0x364 DUP2 PUSH1 0x20 SWAP4 PUSH1 0x40 PUSH1 0xC4 DUP1 DUP5 ADD CALLDATACOPY PUSH2 0x260 PUSH2 0x104 DUP1 DUP5 ADD CALLDATACOPY GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x877 JUMPI JUMPDEST POP ISZERO PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH2 0x35C DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD DUP2 MSTORE PUSH2 0x164 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x377 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x184 CALLDATALOAD DUP2 MSTORE PUSH2 0x1A4 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x393 DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x3A6 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x1C4 CALLDATALOAD DUP2 MSTORE PUSH2 0x1E4 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3C2 DUP3 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x204 CALLDATALOAD DUP3 MSTORE PUSH2 0x224 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3DE DUP3 PUSH2 0x269E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3F6 PUSH1 0xE0 DUP4 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x364 DUP4 JUMPDEST PUSH2 0x444 DUP3 LT PUSH2 0x840 JUMPI POP POP PUSH2 0x412 SWAP1 PUSH2 0x40AE JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP6 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP2 MSTORE PUSH2 0x44B PUSH1 0x60 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 CALLER DUP6 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP6 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP7 KECCAK256 ADD DUP3 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 DUP8 KECCAK256 ADD SLOAD AND SWAP2 CALLER DUP7 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP7 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP8 KECCAK256 ADD SWAP1 DUP7 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP2 ISZERO PUSH2 0x831 JUMPI CALLER DUP6 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP6 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP4 PUSH2 0x4F1 PUSH1 0x40 PUSH20 0x0 SWAP4 MLOAD DUP2 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x27D3C56D PUSH1 0xE1 SHL DUP4 MSTORE DUP11 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB DUP2 DUP7 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x826 JUMPI DUP8 SWAP2 PUSH2 0x7DD JUMPI JUMPDEST POP DUP1 MLOAD DUP7 SSTORE PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x27D3C56D PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 PUSH1 0x2 DUP8 ADD SWAP3 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x53C SWAP1 DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB SWAP2 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x7D2 JUMPI DUP7 SWAP2 PUSH2 0x791 JUMPI JUMPDEST PUSH1 0x20 SWAP3 POP DUP2 MLOAD SWAP1 SSTORE ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE CALLER DUP5 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP5 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 PUSH1 0xE DUP3 ADD DUP1 SLOAD DUP1 JUMPDEST PUSH2 0x678 JUMPI POP POP POP PUSH1 0x5 ADD PUSH2 0x590 DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x59C DUP4 CALLER PUSH2 0x3FA3 JUMP JUMPDEST DUP3 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x661 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH2 0x5B5 PUSH1 0xE0 DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0xE0 CALLDATASIZE DUP3 CALLDATACOPY DUP2 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x607 JUMPI POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND SWAP1 PUSH2 0x5DE PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x25B7 JUMP JUMPDEST PUSH32 0x47FABD75C92EAD101DBBB10DD37A09C205F633DA9DB8CE7078C2F33E84710E5 PUSH1 0xE0 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST DUP1 PUSH1 0xC ADD DUP1 PUSH1 0xC GT PUSH2 0x64D JUMPI PUSH1 0x13 DUP2 LT ISZERO PUSH2 0x639 JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH1 0x5 SHL PUSH2 0x104 ADD CALLDATALOAD PUSH2 0x632 DUP3 DUP6 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x5BC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 PUSH1 0x7 DUP3 DUP7 ADD ADD SSTORE ADD PUSH2 0x59E JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x77D JUMPI DUP4 PUSH1 0x7 PUSH2 0x691 DUP4 DUP7 PUSH2 0x3881 JUMP JUMPDEST POP ADD SLOAD GT ISZERO PUSH2 0x6C0 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 NOT ADD DUP1 PUSH2 0x57C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x769 JUMPI PUSH2 0x6DB PUSH2 0x6E3 SWAP2 DUP6 PUSH2 0x3881 JUMP JUMPDEST POP SWAP2 DUP5 PUSH2 0x3881 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x727 JUMPI DUP1 DUP3 SUB PUSH2 0x74F JUMPI JUMPDEST POP POP DUP2 SLOAD DUP1 ISZERO PUSH2 0x73B JUMPI PUSH1 0x0 NOT ADD PUSH2 0x70A DUP2 DUP5 PUSH2 0x3881 JUMP JUMPDEST PUSH2 0x727 JUMPI DUP1 PUSH2 0x71E PUSH1 0x7 DUP12 SWAP4 ADD DUP1 SWAP3 PUSH2 0x389D JUMP JUMPDEST SSTORE DUP3 SSTORE DUP8 PUSH2 0x69B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x4 DUP10 SWAP1 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x7 DUP2 PUSH2 0x75D DUP3 SWAP4 DUP6 PUSH2 0x40F3 JUMP JUMPDEST ADD SLOAD SWAP2 ADD SSTORE DUP8 DUP1 PUSH2 0x6F2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x7CB JUMPI JUMPDEST PUSH2 0x7A8 DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x7C7 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x7C1 SWAP2 PUSH2 0x3465 JUMP JUMPDEST SWAP1 PUSH2 0x54E JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x79E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x81F JUMPI JUMPDEST PUSH2 0x7F4 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP3 PUSH1 0x40 DUP3 DUP6 SUB SLT PUSH2 0x81B JUMPI PUSH1 0x20 PUSH2 0x812 PUSH2 0x53C SWAP6 PUSH1 0x40 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP POP SWAP3 PUSH2 0x504 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x9BDE339 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x9BDE339 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x899 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI JUMPDEST PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x299E JUMP JUMPDEST DUP2 PUSH2 0x34A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 SWAP4 POP PUSH1 0x40 DUP2 DUP2 PUSH1 0x1 SWAP5 SWAP6 DUP2 SWAP5 CALLDATACOPY ADD SWAP4 ADD SWAP2 ADD DUP5 SWAP3 PUSH2 0x315 JUMP JUMPDEST PUSH4 0x2163950F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8F6 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 PUSH2 0x29D JUMP JUMPDEST PUSH4 0x1CC6A699 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x238 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x933 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x93B PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9AA PUSH2 0x258B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA41 PUSH2 0x258B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xC0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xA68 DUP2 PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH1 0x6 PUSH1 0x5 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0xA9F PUSH1 0x40 MLOAD DUP1 SWAP5 PUSH1 0x20 DUP1 PUSH1 0x60 SWAP3 DUP2 DUP2 MLOAD DUP1 MLOAD DUP8 MSTORE ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0xAED PUSH2 0x258B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x204 JUMPI PUSH2 0xB02 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB7B PUSH2 0x258B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x20 SWAP2 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC63 JUMPI POP POP POP DUP2 PUSH2 0xC17 SWAP2 SUB DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC41 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC33 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xC01 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x40 PUSH2 0xC9D PUSH2 0x258B JUMP JUMPDEST PUSH2 0xCA5 PUSH2 0x2840 JUMP JUMPDEST POP PUSH1 0xE0 SWAP1 DUP2 DUP4 MLOAD PUSH2 0xCB6 DUP3 DUP3 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x0 SWAP2 PUSH2 0xCC4 PUSH2 0x2840 JUMP JUMPDEST POP DUP4 MLOAD PUSH2 0xCD1 DUP3 DUP3 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP3 DUP1 MSTORE SWAP1 MSTORE KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xE DUP4 ADD SWAP3 SWAP1 PUSH2 0xD08 DUP3 PUSH2 0x2814 JUMP JUMPDEST SWAP2 DUP5 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xD2F PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP7 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xD70 JUMPI POP POP POP SWAP1 PUSH2 0xD5F PUSH1 0x7 PUSH2 0xD6C SWAP5 SWAP4 ADD PUSH2 0x2884 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 PUSH2 0x25DF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0xD83 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0xD8C DUP14 PUSH2 0x2884 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP14 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP10 ADD SWAP2 ADD SWAP1 SWAP8 PUSH2 0xD44 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH2 0x400 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI CALLDATASIZE PUSH1 0x23 NOT ADD PUSH2 0x300 DUP2 SLT PUSH2 0x204 JUMPI PUSH2 0x100 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xDD5 DUP4 PUSH2 0x269E JUMP JUMPDEST SLT PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH2 0xDE6 DUP2 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0xDF1 CALLDATASIZE PUSH1 0x24 PUSH2 0x277D JUMP JUMPDEST DUP2 MSTORE CALLDATASIZE PUSH1 0x83 SLT ISZERO PUSH2 0x204 JUMPI PUSH1 0x40 SWAP1 DUP2 MLOAD PUSH2 0xE0B DUP4 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP1 CALLDATASIZE PUSH1 0xE4 GT PUSH2 0x204 JUMPI DUP4 PUSH1 0x64 SWAP2 JUMPDEST PUSH1 0xE4 DUP4 LT PUSH2 0xF53 JUMPI POP POP POP PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xE34 CALLDATASIZE PUSH1 0xE4 PUSH2 0x277D JUMP JUMPDEST DUP3 DUP3 ADD MSTORE DUP3 MSTORE CALLDATASIZE PUSH2 0x143 SLT ISZERO PUSH2 0x204 JUMPI DUP1 MLOAD PUSH2 0xE52 PUSH2 0x200 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP1 CALLDATASIZE PUSH2 0x324 GT PUSH2 0x204 JUMPI PUSH2 0x124 SWAP1 JUMPDEST PUSH2 0x324 DUP3 LT PUSH2 0xF43 JUMPI POP POP PUSH1 0x20 DUP4 ADD MSTORE CALLDATASIZE PUSH2 0x343 SLT ISZERO PUSH2 0x204 JUMPI PUSH2 0xE87 CALLDATASIZE PUSH2 0x324 PUSH2 0x2741 JUMP JUMPDEST SWAP1 PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0xF36 JUMPI JUMPDEST PUSH2 0xE9C SWAP1 PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xEB3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD AND ISZERO PUSH2 0x8FC JUMPI PUSH1 0xC SLOAD DUP2 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xF2C JUMPI POP PUSH1 0x0 SWAP2 PUSH2 0xF0D JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI PUSH2 0xF0B SWAP2 PUSH1 0x4 CALLDATALOAD PUSH2 0x2E38 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF26 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP4 PUSH2 0xEF9 JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0xE93 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0xF60 CALLDATASIZE DUP6 PUSH2 0x277D JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 DUP5 SWAP1 PUSH2 0xE19 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x12 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x106A JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1056 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x102F JUMPI POP PUSH1 0x1 EQ PUSH2 0xFD2 JUMPI JUMPDEST PUSH2 0xD6C DUP5 PUSH2 0xFC6 DUP2 DUP7 SUB DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x26F8 JUMP JUMPDEST PUSH1 0x12 DUP2 MSTORE PUSH32 0xBB8A6A4669BA250D26CD7A459ECA9D215F8307E33AEBE50379BC5A3617EC3444 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1015 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xFC6 DUP3 PUSH2 0xFB6 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0xFC6 SWAP2 POP DUP4 SWAP1 POP PUSH2 0xFB6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xF99 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x40 PUSH1 0xA SLOAD PUSH1 0xB SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x1129 PUSH2 0x25A1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x63 SLT ISZERO PUSH2 0x204 JUMPI PUSH2 0x113D CALLDATASIZE PUSH1 0x44 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0x11DF JUMPI JUMPDEST PUSH2 0x1151 SWAP1 PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1168 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD AND ISZERO PUSH2 0x8FC JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x11C0 JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI PUSH2 0xF0B SWAP2 PUSH1 0x4 CALLDATALOAD PUSH2 0x2B1A JUMP JUMPDEST PUSH2 0x11D9 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP4 PUSH2 0x11AE JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x1148 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x1260 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD CALLER SWAP3 DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x12AC PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP2 DUP3 AND DUP2 SSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x133C PUSH2 0x258B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x204 JUMPI PUSH2 0x1383 PUSH1 0x20 SWAP2 PUSH2 0x27C5 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH2 0x620 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x141D PUSH2 0x258B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATASIZE PUSH1 0x43 NOT ADD PUSH2 0x500 DUP2 SLT PUSH2 0x204 JUMPI PUSH2 0x100 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x143F DUP4 PUSH2 0x269E JUMP JUMPDEST SLT PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1451 DUP4 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x145C CALLDATASIZE PUSH1 0x44 PUSH2 0x277D JUMP JUMPDEST DUP4 MSTORE CALLDATASIZE PUSH1 0xA3 SLT ISZERO PUSH2 0x204 JUMPI PUSH1 0x40 SWAP3 DUP4 MLOAD PUSH2 0x1476 DUP6 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP1 CALLDATASIZE PUSH2 0x104 GT PUSH2 0x204 JUMPI DUP6 PUSH1 0x84 SWAP2 JUMPDEST PUSH2 0x104 DUP4 LT PUSH2 0x1BF1 JUMPI POP POP POP PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x14A2 CALLDATASIZE PUSH2 0x104 PUSH2 0x277D JUMP JUMPDEST DUP5 DUP3 ADD MSTORE DUP3 MSTORE CALLDATASIZE PUSH2 0x163 SLT ISZERO PUSH2 0x204 JUMPI DUP3 MLOAD PUSH2 0x14C0 PUSH2 0x400 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP1 CALLDATASIZE PUSH2 0x544 GT PUSH2 0x204 JUMPI PUSH2 0x144 SWAP1 JUMPDEST PUSH2 0x544 DUP3 LT PUSH2 0x1BE1 JUMPI POP POP PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE CALLDATASIZE PUSH2 0x624 GT PUSH2 0x204 JUMPI PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0x1BD4 JUMPI JUMPDEST PUSH2 0x14FE SWAP1 PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1515 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0xC SLOAD DUP5 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1BAA JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1BB5 JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI DUP5 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP5 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1BAA JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1B8B JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI DUP2 PUSH2 0x15E4 PUSH2 0x1645 SWAP4 MLOAD SWAP5 PUSH2 0x15C0 DUP9 MLOAD PUSH2 0x15AC DUP2 PUSH2 0x269E JUMP JUMPDEST DUP8 MLOAD DUP2 MSTORE PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH2 0x33A7 JUMP JUMPDEST DUP8 MLOAD SWAP1 PUSH2 0x15CC DUP3 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x140 DUP8 ADD MLOAD DUP3 MSTORE PUSH2 0x160 DUP8 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x160A DUP7 MLOAD PUSH2 0x15F2 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x2E0 DUP7 ADD MLOAD DUP2 MSTORE PUSH2 0x300 DUP7 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3430 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xF SLOAD AND SWAP2 MLOAD PUSH2 0x1659 DUP2 MLOAD SWAP3 PUSH2 0x164F DUP10 PUSH1 0x20 DUP6 ADD MLOAD SWAP5 ADD MLOAD SWAP2 MLOAD SWAP4 DUP11 MLOAD SWAP8 DUP9 SWAP7 PUSH4 0xF3022C9 PUSH1 0xE2 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD SWAP1 PUSH2 0x2AC2 JUMP JUMPDEST PUSH1 0x44 DUP7 ADD SWAP1 PUSH2 0x2AEA JUMP JUMPDEST PUSH1 0xC4 DUP5 ADD SWAP1 PUSH2 0x2AC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104 DUP4 ADD JUMPDEST PUSH1 0x20 DUP3 LT PUSH2 0x1B71 JUMPI POP POP POP PUSH2 0x504 DUP2 PUSH1 0x20 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1B66 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1B47 JUMPI JUMPDEST POP ISZERO PUSH2 0x866 JUMPI DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x850 JUMPI DUP5 MSTORE PUSH2 0x16AD PUSH2 0x2840 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 PUSH2 0x16BC PUSH2 0x2840 JUMP JUMPDEST DUP7 MSTORE DUP5 DUP3 ADD SWAP1 PUSH2 0x16CA PUSH2 0x2840 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x60 DUP4 ADD PUSH1 0xE0 SWAP4 DUP8 MLOAD PUSH2 0x16DF DUP7 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP6 CALLDATASIZE DUP3 CALLDATACOPY DUP3 MSTORE DUP8 DUP7 ADD MLOAD PUSH1 0x60 DUP8 ADD MLOAD DUP10 MLOAD SWAP2 PUSH2 0x16FA DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0xA0 DUP9 ADD MLOAD DUP11 MLOAD SWAP2 PUSH2 0x1717 DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP10 MLOAD SWAP2 PUSH2 0x172A DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0xC0 DUP7 ADD MLOAD DUP6 DUP8 ADD MLOAD DUP10 MLOAD SWAP2 PUSH2 0x1748 DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x100 DUP8 ADD MLOAD PUSH2 0x120 DUP9 ADD MLOAD DUP11 MLOAD SWAP2 PUSH2 0x1767 DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP10 MLOAD SWAP2 PUSH2 0x177A DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP10 MSTORE PUSH2 0x180 DUP7 ADD MLOAD PUSH2 0x1A0 DUP8 ADD MLOAD DUP10 MLOAD SWAP2 PUSH2 0x179B DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1C0 DUP8 ADD MLOAD PUSH2 0x1E0 DUP9 ADD MLOAD DUP11 MLOAD SWAP2 PUSH2 0x17BA DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP10 MLOAD SWAP2 PUSH2 0x17CD DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x1B05 JUMPI POP MLOAD SWAP8 MLOAD SWAP3 MLOAD SWAP1 MLOAD SWAP3 DUP8 MLOAD SWAP1 PUSH2 0x17F8 PUSH1 0xE0 DUP4 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x0 SWAP10 PUSH2 0x544 DUP4 JUMPDEST PUSH2 0x624 DUP3 LT PUSH2 0x1AF5 JUMPI POP POP SWAP1 PUSH2 0x1818 SWAP3 SWAP2 DUP6 CALLER PUSH2 0x34E3 JUMP JUMPDEST DUP6 DUP9 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP7 DUP9 KECCAK256 DUP3 DUP10 MSTORE PUSH1 0x20 MSTORE DUP7 DUP9 KECCAK256 SWAP1 DUP2 SLOAD ISZERO DUP1 PUSH2 0x1AE9 JUMPI JUMPDEST ISZERO PUSH2 0x19A6 JUMPI PUSH1 0x20 DUP1 DUP3 DUP2 PUSH1 0x3 SWAP5 MLOAD DUP1 MLOAD DUP8 SSTORE ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMPDEST DUP5 DUP8 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP6 DUP8 KECCAK256 SWAP1 DUP8 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1913 DUP6 DUP8 KECCAK256 SWAP2 PUSH1 0xE PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x188E PUSH2 0x1889 DUP7 PUSH2 0x2814 JUMP JUMPDEST PUSH2 0x40AE JUMP JUMPDEST SWAP1 DUP10 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE DUP11 DUP3 ADD MSTORE DUP10 DUP2 MSTORE PUSH2 0x18AB PUSH1 0x60 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0x18F8 DUP11 PUSH1 0x1 PUSH1 0x6 DUP5 ADD SWAP8 DUP13 DUP10 SLOAD SWAP4 DUP2 MLOAD SWAP5 PUSH2 0x18CA DUP7 PUSH2 0x269E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 DUP5 DUP5 MSTORE DUP2 MSTORE PUSH1 0x4 DUP8 ADD PUSH1 0x20 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP5 SLOAD DUP10 MLOAD SWAP4 PUSH2 0x1906 DUP6 PUSH2 0x269E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE ADD PUSH2 0x38B4 JUMP JUMPDEST PUSH2 0x191D DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP1 SSTORE DUP4 MLOAD SWAP2 PUSH2 0x192C DUP3 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP2 CALLDATASIZE DUP5 CALLDATACOPY DUP6 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x197B JUMPI POP POP PUSH32 0x1FE42C57A12EE7D4848276C111F82C24FE213A94A603B21DA88785CD882C9CCF SWAP1 PUSH2 0x1975 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND SWAP6 MLOAD DUP1 SWAP5 PUSH2 0x25B7 JUMP JUMPDEST CALLER SWAP3 LOG4 DUP1 RETURN JUMPDEST DUP1 PUSH1 0x19 ADD DUP1 PUSH1 0x19 GT PUSH2 0x77D JUMPI SWAP1 PUSH2 0x1994 PUSH1 0x1 SWAP3 DUP5 PUSH2 0x2AB1 JUMP JUMPDEST MLOAD PUSH2 0x199F DUP3 DUP8 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x1932 JUMP JUMPDEST PUSH20 0x0 SWAP1 DUP9 PUSH2 0x19DD DUP2 DUP4 MLOAD DUP2 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP4 MSTORE DUP10 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB DUP2 DUP8 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x1ADF JUMPI DUP13 SWAP2 PUSH2 0x1A9B JUMPI JUMPDEST POP SWAP3 PUSH1 0x20 DUP5 PUSH2 0x1A28 SWAP6 MLOAD DUP8 SSTORE ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE PUSH1 0x20 PUSH1 0x2 DUP7 ADD SWAP4 ADD MLOAD SWAP1 DUP3 MLOAD DUP1 DUP1 SWAP7 DUP2 SWAP5 PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB SWAP2 GAS DELEGATECALL SWAP2 DUP3 ISZERO PUSH2 0x1A91 JUMPI DUP11 SWAP3 PUSH2 0x1A4F JUMPI JUMPDEST POP DUP2 PUSH1 0x20 SWAP2 PUSH1 0x3 SWAP4 MLOAD SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x185E JUMP JUMPDEST SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x1A8A JUMPI JUMPDEST PUSH2 0x1A64 DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 ADD SWAP1 DUP10 DUP4 DUP4 SUB SLT PUSH2 0x1A86 JUMPI PUSH2 0x1A7E PUSH1 0x20 SWAP3 PUSH1 0x3 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP SWAP1 PUSH2 0x1A3A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1A5A JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP RETURNDATASIZE DUP12 GT PUSH2 0x1AD8 JUMPI JUMPDEST PUSH2 0x1AB0 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP3 DUP11 DUP3 DUP6 SUB SLT PUSH2 0x1AD4 JUMPI PUSH1 0x20 PUSH2 0x1ACC PUSH2 0x1A28 SWAP6 DUP14 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP2 SWAP5 POP PUSH2 0x19F0 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1AA6 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP3 ADD SLOAD ISZERO PUSH2 0x1836 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1800 JUMP JUMPDEST DUP1 PUSH1 0x10 ADD SWAP1 DUP2 PUSH1 0x10 GT PUSH2 0x1B31 JUMPI PUSH2 0x1B1E PUSH1 0x1 SWAP3 DUP10 PUSH2 0x2AB1 JUMP JUMPDEST MLOAD PUSH2 0x1B2A DUP3 DUP7 MLOAD PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x17D9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B60 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP6 PUSH2 0x1684 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 SWAP4 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x1 SWAP4 SWAP5 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD DUP5 SWAP3 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1BA4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP8 PUSH2 0x158E JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1BCE SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP8 PUSH2 0x154F JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x14F5 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1BFE CALLDATASIZE DUP6 PUSH2 0x277D JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 DUP7 SWAP1 PUSH2 0x1485 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH2 0x420 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x1C4E PUSH2 0x258B JUMP JUMPDEST PUSH2 0x400 CALLDATASIZE PUSH1 0x23 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x1C63 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0x2217 JUMPI JUMPDEST PUSH2 0x1C77 SWAP1 PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1C8E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH2 0x8FC JUMPI PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x21F8 JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1CED PUSH2 0x300 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 CALLDATASIZE PUSH2 0x424 GT PUSH2 0x204 JUMPI PUSH2 0x124 SWAP1 JUMPDEST PUSH2 0x424 DUP3 LT PUSH2 0x21E8 JUMPI POP POP DUP3 MLOAD CHAINID SUB PUSH2 0x21D7 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1D35 SWAP2 PUSH2 0x1D1F DUP3 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD DUP3 MSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x1D5C PUSH1 0x40 MLOAD PUSH2 0x1D44 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x1E0 DUP5 ADD MLOAD DUP2 MSTORE PUSH2 0x200 DUP5 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3430 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP2 LT ISZERO PUSH2 0x21C6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x866 JUMPI PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2680E2D PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x24 PUSH1 0x4 DUP5 ADD CALLDATACOPY DUP2 PUSH1 0x64 PUSH1 0x0 PUSH1 0x44 DUP4 ADD JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x21AC JUMPI POP POP POP PUSH2 0x404 DUP2 PUSH1 0x20 SWAP4 PUSH1 0x40 PUSH1 0xE4 PUSH1 0xC4 DUP5 ADD CALLDATACOPY PUSH2 0x300 PUSH2 0x124 PUSH2 0x104 DUP5 ADD CALLDATACOPY GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x218D JUMPI JUMPDEST POP ISZERO PUSH2 0x866 JUMPI PUSH1 0x80 DUP4 ADD MLOAD SWAP1 PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E22 DUP5 PUSH2 0x269E JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1E41 DUP6 PUSH2 0x269E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1E55 DUP3 PUSH2 0x269E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0xE0 SWAP3 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1E6F DUP6 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP5 CALLDATASIZE DUP5 CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x2162 JUMPI POP DUP6 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD ISZERO DUP1 PUSH2 0x2156 JUMPI JUMPDEST ISZERO PUSH2 0x2026 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 SWAP4 MLOAD DUP1 MLOAD DUP7 SSTORE ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD DUP1 MLOAD PUSH1 0x2 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1F7A PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xE PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x1EFA PUSH2 0x1889 DUP7 PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP2 MSTORE PUSH2 0x1F1A PUSH1 0x60 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0x1F6B PUSH1 0x6 DUP3 ADD SWAP6 PUSH1 0x1 DUP8 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1F38 DUP5 PUSH2 0x269E JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 DUP3 DUP3 MSTORE PUSH1 0x0 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1906 DUP6 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x1F84 DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1FAC DUP3 DUP6 PUSH2 0x26D6 JUMP JUMPDEST DUP2 CALLDATASIZE DUP6 CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x1FFB JUMPI POP POP PUSH32 0xD78494055B7F1585D1E50D778838EFD294162EDEAF41569996739183722254B SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND SWAP4 PUSH2 0x1FF8 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x25B7 JUMP JUMPDEST LOG3 STOP JUMPDEST DUP1 PUSH1 0x11 ADD SWAP1 DUP2 PUSH1 0x11 GT PUSH2 0x1B31 JUMPI PUSH2 0x2014 PUSH1 0x1 SWAP3 DUP5 PUSH2 0x2A8F JUMP JUMPDEST MLOAD PUSH2 0x201F DUP3 DUP9 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x1FB3 JUMP JUMPDEST PUSH2 0x205C PUSH1 0x40 PUSH20 0x0 SWAP4 MLOAD DUP2 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB DUP2 DUP7 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2111 JUMPI JUMPDEST POP DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x20A8 SWAP1 DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB SWAP2 GAS DELEGATECALL SWAP2 DUP3 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x20D0 JUMPI JUMPDEST POP DUP2 PUSH1 0x20 SWAP2 PUSH1 0x3 SWAP4 MLOAD SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x1EC9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x210A JUMPI JUMPDEST PUSH2 0x20E7 DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 ADD SWAP1 PUSH1 0x40 DUP4 DUP4 SUB SLT PUSH2 0x204 JUMPI PUSH2 0x2102 PUSH1 0x20 SWAP3 PUSH1 0x3 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP SWAP1 PUSH2 0x20BB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x20DD JUMP JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x214F JUMPI JUMPDEST PUSH2 0x2128 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP3 PUSH1 0x40 DUP3 DUP6 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH2 0x2146 PUSH2 0x20A8 SWAP6 PUSH1 0x40 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP POP SWAP3 PUSH2 0x2070 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x211E JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD ISZERO PUSH2 0x1EA3 JUMP JUMPDEST DUP1 PUSH1 0x8 ADD SWAP1 DUP2 PUSH1 0x8 GT PUSH2 0x1B31 JUMPI PUSH2 0x217B PUSH1 0x1 SWAP3 DUP11 PUSH2 0x2A8F JUMP JUMPDEST MLOAD PUSH2 0x2186 DUP3 DUP8 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x1E76 JUMP JUMPDEST PUSH2 0x21A6 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP5 PUSH2 0x1E04 JUMP JUMPDEST DUP3 SWAP4 POP PUSH1 0x40 DUP2 DUP2 PUSH1 0x1 SWAP5 SWAP6 DUP2 SWAP5 CALLDATACOPY ADD SWAP4 ADD SWAP2 ADD DUP5 SWAP3 PUSH2 0x1DCC JUMP JUMPDEST PUSH4 0x2EC82659 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x3D23E4D1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0x2211 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP4 PUSH2 0x1CD7 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x1C6E JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x223D PUSH2 0x258B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x204 JUMPI PUSH2 0xF0B SWAP2 PUSH2 0x2255 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0xD6C PUSH2 0x22DB PUSH2 0x229A PUSH2 0x258B JUMP JUMPDEST PUSH2 0x22A2 PUSH2 0x25A1 JUMP JUMPDEST PUSH2 0x22AA PUSH2 0x2840 JUMP JUMPDEST POP PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0x22BA DUP3 DUP3 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x28BB JUMP JUMPDEST SWAP2 PUSH1 0x40 SWAP6 SWAP4 SWAP6 MLOAD SWAP6 DUP7 SWAP6 DUP7 PUSH2 0x25DF JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0x2304 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x230C PUSH2 0x3393 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xB1FBA91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x242B JUMPI JUMPDEST POP ISZERO PUSH2 0x8CC JUMPI PUSH1 0x40 PUSH1 0x24 SWAP2 DUP2 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH3 0x8918FF PUSH1 0xE5 SHL DUP3 MSTORE DUP7 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x23FC JUMPI JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 DUP3 ISZERO PUSH2 0x23EB JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 AND OR PUSH1 0x9 SSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD SWAP1 DUP2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x23B0 DUP2 PUSH2 0x269E JUMP JUMPDEST DUP4 DUP2 MSTORE ADD MSTORE PUSH1 0xA SSTORE PUSH1 0xB SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDBEEB2970745C839058876B084C0D772566FF6B5AAA47938C394CD171A38C24C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x241E SWAP2 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x2424 JUMPI JUMPDEST PUSH2 0x2416 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29B6 JUMP JUMPDEST DUP3 PUSH2 0x237C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x240C JUMP JUMPDEST PUSH2 0x2444 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP4 PUSH2 0x234B JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x11 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x24FF JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x1056 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x102F JUMPI POP PUSH1 0x1 EQ PUSH2 0x24A2 JUMPI PUSH2 0xD6C DUP5 PUSH2 0xFC6 DUP2 DUP7 SUB DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x11 DUP2 MSTORE PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x24E5 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xFC6 DUP3 PUSH2 0xFB6 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x24CC JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x2476 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0xA SLOAD ISZERO ISZERO DUP1 PUSH2 0x2532 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x2525 JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH2 0xD6C PUSH2 0x22DB PUSH2 0x255E PUSH2 0x258B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x28BB JUMP JUMPDEST CALLVALUE PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x204 JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x204 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x204 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x7 DUP3 LT PUSH2 0x25C9 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP6 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x25BC JUMP JUMPDEST SWAP3 SWAP2 SWAP6 SWAP5 SWAP4 SWAP6 PUSH2 0x2612 DUP5 PUSH2 0x1C0 DUP2 ADD SWAP4 PUSH1 0x20 DUP1 PUSH1 0x60 SWAP3 DUP2 DUP2 MLOAD DUP1 MLOAD DUP8 MSTORE ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1C0 PUSH1 0xA0 DUP5 ADD MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH2 0x1E0 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2652 JUMPI POP POP POP SWAP1 PUSH2 0x264E PUSH2 0x1A0 SWAP3 SWAP6 PUSH1 0xC0 DUP4 ADD SWAP1 PUSH2 0x25B7 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP4 MLOAD DUP1 MLOAD DUP3 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x7 DUP4 LT PUSH2 0x2688 JUMPI POP POP POP PUSH2 0x100 PUSH1 0x1 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP5 MLOAD DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x265F JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x850 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x850 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x850 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x272B JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x270A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2752 PUSH1 0xE0 DUP6 PUSH2 0x26D6 JUMP JUMPDEST DUP4 SWAP1 PUSH1 0xE0 DUP2 ADD SWAP3 DUP4 GT PUSH2 0x204 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x276D JUMPI POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2761 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x204 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 PUSH2 0x2799 SWAP1 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 SWAP1 PUSH1 0x40 DUP2 ADD SWAP3 DUP4 GT PUSH2 0x204 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x27B5 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x27A8 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2803 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2821 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 PUSH2 0x283B PUSH1 0x2 DUP4 SWAP6 PUSH2 0x2833 DUP2 PUSH2 0x27F6 JUMP JUMPDEST DUP6 MSTORE ADD PUSH2 0x27F6 JUMP JUMPDEST SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x284D DUP3 PUSH2 0x269E JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH2 0x285A DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2876 DUP4 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH1 0x0 DUP3 DUP5 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x7 DUP3 LT PUSH2 0x28A5 JUMPI POP POP POP PUSH2 0x28A3 PUSH1 0xE0 DUP4 PUSH2 0x26D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x288D JUMP JUMPDEST PUSH2 0x28C3 PUSH2 0x2840 JUMP JUMPDEST POP PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0x28D3 DUP3 DUP3 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD SLOAD SWAP2 PUSH1 0xE DUP2 ADD SWAP2 PUSH1 0x6 DUP3 ADD SLOAD SWAP1 PUSH2 0x2912 DUP4 PUSH2 0x2814 JUMP JUMPDEST SWAP5 SWAP4 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2939 PUSH1 0x20 DUP4 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2969 JUMPI POP POP POP POP PUSH1 0x7 PUSH2 0x2965 SWAP2 SWAP5 ADD PUSH2 0x2884 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x297C DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x2985 DUP7 PUSH2 0x2884 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x7 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x294D JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x204 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x204 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP3 DUP3 SUB SLT PUSH2 0x204 JUMPI DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x204 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP3 PUSH2 0x29DB DUP3 DUP6 PUSH2 0x26D6 JUMP JUMPDEST DUP4 SWAP2 DUP2 ADD SWAP3 DUP4 GT PUSH2 0x204 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x29F5 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x29E8 JUMP JUMPDEST ISZERO PUSH2 0x2A0C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41756469746F72207075626C6963206B6579206E6F7420736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A58 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105D591A5D1BDC881B9BDD081CD95D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x18 DUP2 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x2AD4 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP6 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x2AC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x2AFC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP3 PUSH2 0x2B0E PUSH1 0x1 SWAP5 DUP8 MLOAD PUSH2 0x2AC2 JUMP JUMPDEST ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x2AEF JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x2D04 JUMPI DUP3 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2CC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2C96 JUMPI JUMPDEST POP PUSH2 0x2BA9 PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP7 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0x2BA3 PUSH1 0x84 DUP3 PUSH2 0x26D6 JUMP JUMPDEST DUP6 PUSH2 0x4053 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x8A6 JUMPI DUP7 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x2C5D JUMPI JUMPDEST POP SWAP1 PUSH2 0x2BE1 SWAP2 PUSH2 0x3458 JUMP JUMPDEST SUB PUSH2 0x2C4C JUMPI PUSH2 0x2BF1 SWAP2 DUP5 CALLER PUSH2 0x3D5C JUMP JUMPDEST SWAP2 DUP2 DUP1 PUSH2 0x2C3A JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xD3B8ABEDF9B219788CE9C4431056D7D4B83973B9F7072AC174E1FE2479D1A2E7 PUSH1 0x80 CALLER SWAP3 LOG2 JUMP JUMPDEST PUSH2 0x2C45 SWAP2 CALLER SWAP1 PUSH2 0x3F55 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x2BF9 JUMP JUMPDEST PUSH4 0x12171D83 PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP3 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2C8E JUMPI JUMPDEST DUP2 PUSH2 0x2C7A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x204 JUMPI MLOAD DUP6 SWAP2 SWAP1 PUSH2 0x2BE1 PUSH2 0x2BD6 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2C6D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2CC0 JUMPI JUMPDEST DUP2 PUSH2 0x2CB1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x204 JUMPI MLOAD CODESIZE PUSH2 0x2B6E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B881A5CC8189B1858DADB1A5CDD1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP DUP2 CALLVALUE LT PUSH2 0x2DE2 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP4 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B31 JUMPI PUSH2 0x2D35 SWAP3 SSTORE DUP3 CALLER PUSH2 0x3916 JUMP JUMPDEST SWAP1 DUP3 CALLVALUE GT PUSH2 0x2DAF JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2D45CF213B0878E6582A0BDDC676C202F8F57ED3CD74E8CCF8955CE1359BD427 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xD3B8ABEDF9B219788CE9C4431056D7D4B83973B9F7072AC174E1FE2479D1A2E7 PUSH1 0x80 CALLER SWAP3 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x2DBE DUP8 CALLVALUE PUSH2 0x3458 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x2DD9 JUMPI JUMPDEST CALLER SWAP1 CALL PUSH2 0x2D3E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x2DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206E617469766520746F6B656E2073656E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 DUP2 ADD DUP1 MLOAD SWAP2 DUP3 MLOAD SWAP4 PUSH2 0x1645 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2E54 DUP5 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 DUP7 ADD SWAP5 DUP6 MLOAD DUP6 MSTORE PUSH2 0x2E72 PUSH1 0x40 DUP9 ADD SWAP6 DUP7 MLOAD PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x2E98 PUSH1 0x40 MLOAD PUSH2 0x2E81 DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH1 0xE0 DUP10 ADD MLOAD DUP2 MSTORE PUSH2 0x100 DUP10 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3430 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xE SLOAD AND SWAP2 MLOAD PUSH2 0x2ED5 DUP2 MLOAD SWAP3 PUSH2 0x164F PUSH1 0x40 PUSH1 0x20 DUP6 ADD MLOAD SWAP5 ADD MLOAD SWAP2 MLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 PUSH4 0xC82FEBF5 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD SWAP1 PUSH2 0x2AC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104 DUP4 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x3379 JUMPI POP POP POP PUSH2 0x304 DUP2 PUSH1 0x20 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x335A JUMPI JUMPDEST POP ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x31CE JUMPI POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x31BD JUMPI PUSH1 0x80 DUP7 PUSH2 0x2FE3 SWAP5 PUSH1 0x60 DUP9 ADD MLOAD SWAP4 DUP4 DUP10 ADD MLOAD PUSH1 0x40 MLOAD SWAP6 PUSH2 0x2F63 DUP8 PUSH2 0x269E JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA0 DUP10 ADD MLOAD PUSH1 0xC0 DUP11 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2F81 DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP6 PUSH2 0x2F95 DUP8 PUSH2 0x269E JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE MLOAD SWAP1 MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2FAC DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH4 0x203469D PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 MLOAD PUSH1 0x4 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 DUP5 SWAP1 DUP2 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 PUSH20 0x0 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x3017 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x318C JUMPI JUMPDEST POP DUP8 CALLER PUSH2 0x34E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x3099 SWAP3 PUSH1 0xFF SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x315D JUMPI JUMPDEST POP PUSH32 0x0 PUSH1 0xFF AND SWAP2 AND DUP6 DUP3 DUP3 GT ISZERO PUSH2 0x312B JUMPI POP PUSH2 0x3085 PUSH2 0x3090 SWAP3 PUSH2 0x308A SWAP3 PUSH2 0x3458 JUMP JUMPDEST PUSH2 0x3F95 JUMP JUMPDEST DUP6 PUSH2 0x3844 JUMP JUMPDEST SWAP1 JUMPDEST CALLER SWAP1 PUSH2 0x3F55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 PUSH2 0x30A9 DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3100 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 CALLER SWAP4 PUSH32 0xAE09DCE9B789CF9600E6765940D134D8247429396FAF72DB0F7B33ED5CA8294C SWAP4 DUP4 SWAP3 PUSH2 0x30FB SWAP3 DUP5 PUSH2 0x34C4 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST DUP1 PUSH1 0x9 ADD SWAP1 DUP2 PUSH1 0x9 GT PUSH2 0x1B31 JUMPI PUSH2 0x3119 PUSH1 0x1 SWAP3 DUP5 PUSH2 0x2E27 JUMP JUMPDEST MLOAD PUSH2 0x3124 DUP3 DUP7 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x30AF JUMP JUMPDEST SWAP3 SWAP2 DUP1 DUP3 LT PUSH2 0x313C JUMPI JUMPDEST POP POP PUSH2 0x3092 JUMP JUMPDEST PUSH2 0x3155 SWAP3 SWAP4 POP PUSH2 0x314F SWAP2 PUSH2 0x3085 SWAP2 PUSH2 0x3458 JUMP JUMPDEST DUP6 PUSH2 0x3857 JUMP JUMPDEST SWAP1 CODESIZE DUP1 PUSH2 0x3135 JUMP JUMPDEST PUSH2 0x317F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3185 JUMPI JUMPDEST PUSH2 0x3177 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3D43 JUMP JUMPDEST CODESIZE PUSH2 0x3044 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x316D JUMP JUMPDEST PUSH2 0x31AF SWAP2 SWAP3 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x31B6 JUMPI JUMPDEST PUSH2 0x31A7 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x348D JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x300F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x319D JUMP JUMPDEST PUSH4 0x8698BF37 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH2 0x320C SWAP5 SWAP3 SWAP4 PUSH1 0x60 DUP8 ADD MLOAD SWAP4 DUP4 DUP9 ADD MLOAD PUSH1 0x40 MLOAD SWAP6 PUSH2 0x31EE DUP8 PUSH2 0x269E JUMP JUMPDEST DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2F81 DUP4 PUSH2 0x269E JUMP JUMPDEST SUB DUP2 PUSH20 0x0 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x3240 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x3339 JUMPI JUMPDEST POP DUP7 CALLER PUSH2 0x34E3 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3259 DUP4 DUP3 SLOAD PUSH2 0x3458 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH1 0x0 DUP2 ISZERO PUSH2 0x3330 JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 PUSH2 0x3284 DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3305 JUMPI POP POP PUSH32 0xAE09DCE9B789CF9600E6765940D134D8247429396FAF72DB0F7B33ED5CA8294C SWAP1 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2A25615D4309B997A752E7E0E81A331709124ED95EAD4D561A1CD277785B541 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD AND SWAP4 PUSH2 0x30FB PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH2 0x34C4 JUMP JUMPDEST DUP1 PUSH1 0x9 ADD SWAP1 DUP2 PUSH1 0x9 GT PUSH2 0x1B31 JUMPI PUSH2 0x331E PUSH1 0x1 SWAP3 DUP5 PUSH2 0x2E27 JUMP JUMPDEST MLOAD PUSH2 0x3329 DUP3 DUP7 PUSH2 0x2AA0 JUMP JUMPDEST MSTORE ADD PUSH2 0x328A JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x3353 SWAP2 SWAP3 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x31B6 JUMPI PUSH2 0x31A7 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3238 JUMP JUMPDEST PUSH2 0x3373 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x89F JUMPI PUSH2 0x891 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST CODESIZE PUSH2 0x2F00 JUMP JUMPDEST DUP3 SWAP4 POP PUSH1 0x20 DUP1 SWAP2 PUSH1 0x1 SWAP4 SWAP5 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD DUP5 SWAP3 PUSH2 0x2EDD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1260 JUMPI JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH3 0x8918FF PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x340F JUMPI JUMPDEST POP DUP2 MLOAD DUP2 MLOAD EQ SWAP2 DUP3 ISZERO SWAP3 PUSH2 0x33FB JUMPI JUMPDEST POP POP PUSH2 0x866 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP3 POP DUP2 ADD MLOAD SWAP2 ADD MLOAD EQ ISZERO CODESIZE DUP1 PUSH2 0x33F3 JUMP JUMPDEST PUSH2 0x3429 SWAP2 SWAP3 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x2424 JUMPI PUSH2 0x2416 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x33E4 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 MLOAD EQ SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x3446 JUMPI JUMPDEST POP PUSH2 0x866 JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x20 PUSH1 0xB SLOAD SWAP2 ADD MLOAD EQ ISZERO CODESIZE PUSH2 0x343F JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1B31 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 SWAP2 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH2 0x347D DUP2 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 SWAP5 DUP1 MLOAD DUP5 MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x204 JUMPI PUSH2 0x34BC SWAP1 PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH2 0x34AA DUP6 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x34B4 DUP4 DUP3 PUSH2 0x3465 JUMP JUMPDEST DUP6 MSTORE ADD PUSH2 0x3465 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x28A3 SWAP4 SWAP6 SWAP5 SWAP3 SWAP6 PUSH2 0x120 DUP3 ADD SWAP7 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x25B7 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x34F1 SWAP1 SWAP5 SWAP4 SWAP5 PUSH2 0x40AE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP2 MSTORE PUSH2 0x3538 PUSH1 0x60 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x866 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP6 PUSH20 0x0 SWAP1 PUSH2 0x35C2 PUSH1 0x40 DUP3 MLOAD DUP2 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x27D3C56D PUSH1 0xE1 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB DUP2 DUP7 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x37B3 JUMPI JUMPDEST POP PUSH2 0x3610 SWAP3 PUSH1 0x20 DUP3 PUSH1 0x40 SWAP4 MLOAD DUP13 SSTORE ADD MLOAD PUSH1 0x1 DUP12 ADD SSTORE PUSH1 0x20 PUSH1 0x2 DUP12 ADD SWAP4 ADD MLOAD SWAP1 DUP3 MLOAD DUP1 DUP1 SWAP7 DUP2 SWAP5 PUSH4 0x27D3C56D PUSH1 0xE1 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB SWAP2 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3776 JUMPI JUMPDEST PUSH1 0x20 SWAP3 POP DUP2 MLOAD SWAP1 SSTORE ADD MLOAD PUSH1 0x3 DUP8 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xE DUP3 ADD DUP1 SLOAD DUP1 JUMPDEST PUSH2 0x369C JUMPI POP POP POP SWAP1 PUSH1 0x5 PUSH2 0x3675 SWAP4 SWAP3 ADD PUSH2 0x366E DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x3FA3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3685 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 PUSH1 0x7 DUP3 DUP7 ADD ADD SSTORE ADD PUSH2 0x3678 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x1B31 JUMPI DUP4 PUSH1 0x7 PUSH2 0x36B5 DUP4 DUP7 PUSH2 0x3881 JUMP JUMPDEST POP ADD SLOAD GT ISZERO PUSH2 0x36D0 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1B31 JUMPI PUSH1 0x0 NOT ADD DUP1 PUSH2 0x3654 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1B31 JUMPI PUSH2 0x6DB PUSH2 0x36EB SWAP2 DUP6 PUSH2 0x3881 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x3730 JUMPI DUP1 DUP3 SUB PUSH2 0x375C JUMPI JUMPDEST POP POP DUP2 SLOAD DUP1 ISZERO PUSH2 0x3746 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x3712 DUP2 DUP5 PUSH2 0x3881 JUMP JUMPDEST PUSH2 0x3730 JUMPI DUP1 PUSH2 0x3727 PUSH1 0x7 PUSH1 0x0 SWAP4 ADD DUP1 SWAP3 PUSH2 0x389D JUMP JUMPDEST SSTORE DUP3 SSTORE CODESIZE PUSH2 0x36BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 DUP2 PUSH2 0x376A DUP3 SWAP4 DUP6 PUSH2 0x40F3 JUMP JUMPDEST ADD SLOAD SWAP2 ADD SSTORE CODESIZE DUP1 PUSH2 0x36FA JUMP JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x37AC JUMPI JUMPDEST PUSH2 0x378D DUP2 DUP5 PUSH2 0x26D6 JUMP JUMPDEST DUP3 ADD SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x37A6 SWAP2 PUSH2 0x3465 JUMP JUMPDEST SWAP1 PUSH2 0x3623 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3783 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x37F1 JUMPI JUMPDEST PUSH2 0x37CA DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP3 PUSH1 0x40 DUP3 DUP6 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH2 0x37E8 PUSH2 0x3610 SWAP6 PUSH1 0x40 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP POP SWAP3 PUSH2 0x35D6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x37C0 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x20 PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x80 DUP6 ADD SWAP7 DUP1 SLOAD DUP7 MSTORE ADD SLOAD DUP3 DUP6 ADD MSTORE DUP1 MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 SWAP2 AND SWAP2 AND SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x1B31 JUMPI JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x1B31 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1B31 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x3861 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x3861 JUMPI MOD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x38A8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x389D JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x850 JUMPI PUSH2 0x38D1 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x3881 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x3730 JUMPI DUP1 MLOAD PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x38F3 JUMPI POP POP PUSH1 0x20 PUSH1 0x7 SWAP2 ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 DUP7 ADD SSTORE ADD PUSH2 0x38DD JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1B31 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x0 DUP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x3CBB JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC SLOAD SWAP5 SWAP1 PUSH32 0x0 PUSH1 0xFF AND SWAP1 DUP3 PUSH1 0x12 DUP4 LT ISZERO PUSH2 0x3C79 JUMPI POP POP PUSH1 0x12 SUB PUSH1 0xFF DUP2 GT PUSH2 0x1B31 JUMPI PUSH2 0x39A4 PUSH2 0x39B4 SWAP2 PUSH2 0x3833 JUMP JUMPDEST PUSH2 0x39AE DUP2 DUP5 PUSH2 0x3857 JUMP JUMPDEST SWAP3 PUSH2 0x3877 JUMP JUMPDEST SWAP3 JUMPDEST DUP2 ISZERO PUSH2 0x3C72 JUMPI PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH3 0x8918FF PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP6 SWAP4 SWAP2 SWAP3 SWAP2 DUP7 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x3A66 SWAP5 PUSH1 0x0 SWAP4 PUSH2 0x3C4E JUMPI JUMPDEST POP PUSH1 0x80 SWAP1 PUSH20 0x0 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3A2F DUP4 PUSH2 0x269E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD PUSH4 0x203469D PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 MLOAD PUSH1 0x4 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 DUP6 SWAP1 DUP2 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP6 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI DUP9 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3C2D JUMPI JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD ISZERO DUP1 PUSH2 0x3C21 JUMPI JUMPDEST ISZERO PUSH2 0x3AF0 JUMPI POP PUSH2 0x2965 SWAP5 PUSH1 0x20 DUP1 DUP4 DUP2 PUSH2 0x3AE6 SWAP6 MLOAD DUP1 MLOAD DUP9 SSTORE ADD MLOAD PUSH1 0x1 DUP8 ADD SSTORE ADD MLOAD DUP1 MLOAD PUSH1 0x2 DUP7 ADD SSTORE ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE JUMPDEST PUSH1 0xE PUSH1 0x6 DUP5 ADD SWAP4 DUP5 SLOAD PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1906 DUP6 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x366E DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP4 POP PUSH2 0x3B13 PUSH1 0x40 DUP3 MLOAD DUP2 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB DUP2 DUP9 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3BDC JUMPI JUMPDEST POP PUSH2 0x3B61 SWAP5 PUSH1 0x20 DUP3 PUSH1 0x40 SWAP4 MLOAD DUP7 SSTORE ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x20 PUSH1 0x2 DUP6 ADD SWAP4 ADD MLOAD SWAP1 DUP3 MLOAD DUP1 DUP1 SWAP9 DUP2 SWAP5 PUSH4 0x7BB10BCB PUSH1 0xE0 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x37F8 JUMP JUMPDEST SUB SWAP2 GAS DELEGATECALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI DUP9 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3B91 JUMPI JUMPDEST POP DUP2 MLOAD SWAP1 SSTORE PUSH1 0x20 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x2965 SWAP4 PUSH2 0x3AE6 SWAP1 PUSH2 0x3AD0 JUMP JUMPDEST SWAP2 POP SWAP4 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x3BD5 JUMPI JUMPDEST PUSH2 0x3BAA DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP5 PUSH1 0x40 DUP3 DUP8 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x20 DUP10 SWAP6 PUSH2 0x3BCB PUSH2 0x2965 SWAP9 PUSH2 0x3AE6 SWAP6 PUSH2 0x3465 JUMP JUMPDEST SWAP4 POP SWAP2 SWAP7 POP PUSH2 0x3B76 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3BA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x3C1A JUMPI JUMPDEST PUSH2 0x3BF3 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST DUP2 ADD SWAP5 PUSH1 0x40 DUP3 DUP8 SUB SLT PUSH2 0x204 JUMPI PUSH1 0x20 PUSH2 0x3C11 PUSH2 0x3B61 SWAP8 PUSH1 0x40 SWAP5 PUSH2 0x3465 JUMP JUMPDEST SWAP3 POP POP SWAP5 PUSH2 0x3B27 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3BE9 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD ISZERO PUSH2 0x3AA0 JUMP JUMPDEST PUSH2 0x3C47 SWAP2 SWAP3 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x31B6 JUMPI PUSH2 0x31A7 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3A7C JUMP JUMPDEST PUSH1 0x80 SWAP2 SWAP4 POP PUSH2 0x3C6B SWAP1 PUSH1 0x40 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x2424 JUMPI PUSH2 0x2416 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x3A01 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP5 SWAP2 DUP1 PUSH1 0x12 LT PUSH2 0x3C8D JUMPI JUMPDEST POP POP PUSH2 0x39B6 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH1 0x11 NOT ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x1B31 JUMPI PUSH2 0x3CAB PUSH2 0x3CB1 SWAP3 PUSH2 0x3833 JUMP JUMPDEST SWAP1 PUSH2 0x3844 JUMP JUMPDEST PUSH1 0x0 SWAP3 CODESIZE DUP1 PUSH2 0x3C86 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x850 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3D1D SWAP3 ADD PUSH1 0x6 SSTORE PUSH2 0x27C5 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH2 0x3D3B PUSH1 0x2 SLOAD PUSH2 0x3907 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x392E JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x204 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x204 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x3F36 JUMPI JUMPDEST POP PUSH32 0x0 SWAP1 PUSH1 0x0 DUP4 PUSH1 0xFF DUP1 DUP6 AND SWAP1 DUP5 AND DUP2 DUP2 GT ISZERO PUSH2 0x3F00 JUMPI POP POP POP POP PUSH2 0x3DDC PUSH2 0x3DE1 SWAP3 PUSH2 0x39A4 SWAP3 PUSH2 0x381F JUMP JUMPDEST PUSH2 0x3833 JUMP JUMPDEST SWAP3 JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x3E7F JUMPI JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP5 DUP2 ISZERO PUSH2 0x3C72 JUMPI PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH3 0x8918FF PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP6 SWAP4 SWAP2 SWAP3 SWAP2 DUP7 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x3A66 SWAP5 PUSH1 0x0 SWAP4 PUSH2 0x3C4E JUMPI POP PUSH1 0x80 SWAP1 PUSH20 0x0 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3A2F DUP4 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x850 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3ED0 SWAP3 ADD PUSH1 0x6 SSTORE PUSH2 0x27C5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP4 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0x3EF8 SWAP1 PUSH2 0x3907 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x3DF8 JUMP JUMPDEST SWAP8 SWAP5 SWAP2 SWAP6 SWAP4 SWAP3 SWAP8 LT PUSH2 0x3F15 JUMPI JUMPDEST POP POP POP PUSH2 0x3DE3 JUMP JUMPDEST PUSH2 0x3CAB SWAP3 SWAP4 SWAP7 POP PUSH2 0x3F2B SWAP5 POP SWAP1 PUSH2 0x3DDC SWAP2 PUSH2 0x381F JUMP JUMPDEST PUSH1 0x0 SWAP3 CODESIZE DUP1 DUP1 PUSH2 0x3F0D JUMP JUMPDEST PUSH2 0x3F4F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3185 JUMPI PUSH2 0x3177 DUP2 DUP4 PUSH2 0x26D6 JUMP JUMPDEST CODESIZE PUSH2 0x3D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x28A3 SWAP2 PUSH2 0x3F90 PUSH1 0x64 DUP4 PUSH2 0x26D6 JUMP JUMPDEST PUSH2 0x4053 JUMP JUMPDEST PUSH1 0x4D DUP2 GT PUSH2 0x1B31 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x4045 PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x3FD8 PUSH2 0x1889 DUP5 PUSH2 0x2814 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP2 MSTORE PUSH2 0x3FF8 PUSH1 0x60 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0x6 DUP3 ADD SWAP4 PUSH1 0x4 DUP6 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x4015 DUP7 PUSH2 0x269E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 DUP5 DUP5 MSTORE PUSH1 0x0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x404F DUP2 SLOAD PUSH2 0x3907 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x40A5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x4084 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x407D JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP4 ADD MLOAD SWAP2 ADD MLOAD PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x40ED PUSH1 0xA0 DUP3 PUSH2 0x26D6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 DUP1 DUP3 EQ PUSH2 0x4127 JUMPI SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x7 DUP4 LT PUSH2 0x4111 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SWAP2 SWAP5 ADD SWAP3 DUP4 SLOAD SWAP5 DUP2 DUP5 ADD SSTORE ADD SWAP2 SWAP3 PUSH2 0x4103 JUMP JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xE0 DELEGATECALL 0x28 0x27 0xE9 PREVRANDAO 0xE9 0xEF BLOBBASEFEE GAS PUSH22 0x7B2A583FF2EB317904066941E27EFD3645E8430B6473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"2840:39307:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;-1:-1:-1;;;;;2840:39307:14;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;-1:-1:-1;2840:39307:14;;;;;;;2564:16:10;2840:39307:14;2564:23:10;;:50;;;2840:39307:14;2543:123:10;;;:::i;:::-;2684:7;2840:39307:14;2676:49:10;;-1:-1:-1;;;;;2840:39307:14;2684:21:10;;2676:49;:::i;:::-;2840:39307:14;2395:11:13;2840:39307:14;;2391:67:13;;7997:9:14;2840:39307;;;-1:-1:-1;;;7997:32:14;;14923:10;2840:39307;7997:32;;2840:39307;;;;;;7997:32;;2840:39307;;-1:-1:-1;;;;;2840:39307:14;7997:32;;;;;;;2840:39307;7997:32;;;2840:39307;8043:13;;8039:70;;15106:34;2840:39307;;;;;:::i;:::-;14985:19;2840:39307;;;;;;15106:34;;2840:39307;14923:10;15106:34;:::i;:::-;15217:36;2840:39307;;;;;:::i;:::-;;;;;;;;15217:36;;2840:39307;15217:36;:::i;:::-;15326:12;2840:39307;;;;-1:-1:-1;;;15326:166:14;;2840:39307;-1:-1:-1;;;;;2840:39307:14;;;15326:166;;;474:77:22;2840:39307:14;15397:19;2840:39307;;;;474:77:22;;;;;;2840:39307:14;;;;;;;;15430:19;2840:39307;;;474:77:22;2840:39307:14;14985:19;2840:39307;;;474:77:22;15326:166:14;;;;;;;2840:39307;15326:166;;;474:77:22;15506:11:14;;15502:63;;2840:39307;;;;;:::i;:::-;;;;;;;;15666:47;;2840:39307;;;;;;:::i;:::-;;;;;;;;15731:47;;2840:39307;;;;;;;:::i;:::-;;;;15643:146;;2840:39307;;;;;;:::i;:::-;;;;;;;;15898:47;;2840:39307;;;;;;;:::i;:::-;;;;;;;;15963:47;;2840:39307;;;;;;;:::i;:::-;;;;15875:146;;2840:39307;;;;;;;;;;:::i;:::-;;;;;;;;;;;11381:15:11;;;;;:::i;:::-;14923:10:14;2840:39307;;10492:8:11;2840:39307:14;;;;;;;;;;;;;;10492:29:11;2840:39307:14;;;10586:30:11;2840:39307:14;10586:30:11;;2840:39307:14;;;;;;;;10586:30:11;;;;;;:::i;:::-;2840:39307:14;10576:41:11;;14923:10:14;;2840:39307;;10492:8:11;2840:39307:14;;;;;;;;;;;;;;10658:35:11;2840:39307:14;;;;;;;;;;10658:58:11;2840:39307:14;;14923:10;;2840:39307;;10492:8:11;2840:39307:14;;;;;;;;;;;;;;10730:35:11;2840:39307:14;;;;;;;;;11553:8:11;;11549:60;;14923:10:14;2840:39307;;10492:8:11;2840:39307:14;;;;;;;;;;;;;5718:10:11;:41;2840:39307:14;5718:10:11;5751:7;;2840:39307:14;;;;;;;;;5718:41:11;;;2840:39307:14;5718:41:11;;;:::i;:::-;;;;;;;;;;;;;;;2840:39307:14;-1:-1:-1;2840:39307:14;;;;;;;;;;;5820:7:11;2840:39307:14;;;-1:-1:-1;;;5787:41:11;;2840:39307:14;474:77:22;5803:15:11;;;2840:39307:14;;;;;;;5787:41:11;;5803:15;2840:39307:14;5787:41:11;;;:::i;:::-;;;;;;;;;;;;;;2840:39307:14;;;;;;;;;;2395:11:13;2840:39307:14;;;14923:10;2840:39307;;10492:8:11;2840:39307:14;;;;;;;;;;;;;9441:18:11;;;;2840:39307:14;;9424:363:11;9468:5;;;9797:13;;;2840:39307:14;9797:13:11;:15;2840:39307:14;;9797:15:11;:::i;:::-;2840:39307:14;;9848:7:11;14923:10:14;;9848:7:11;:::i;:::-;2840:39307:14;;15941:1;2840:39307;;;;;;;;;;;:::i;:::-;;;;;16351:13;16366:21;15941:1;16366:21;;;;2840:39307;;;;;;2684:7:10;2840:39307:14;;;474:77:22;2840:39307:14;;474:77:22;;;:::i;:::-;16470:38:14;2840:39307;14923:10;16470:38;;2840:39307;;16389:3;474:77:22;7997:9:14;474:77:22;;7997:9:14;474:77:22;;;2840:39307:14;;;;;;;;;;;14985:19;2840:39307;;16408:36;;;;:::i;:::-;2840:39307;474:77:22;16351:13:14;;2840:39307;-1:-1:-1;;;2840:39307:14;;;;;7997:32;2840:39307;;474:77:22;-1:-1:-1;;;474:77:22;;;2840:39307:14;474:77:22;7997:32:14;2840:39307;474:77:22;2840:39307:14;;;;;;;;;15941:1;2840:39307;;;;;;;;9475:3:11;-1:-1:-1;;2840:39307:14;;;;;;;9534:25:11;15941:1:14;9534:25:11;;;;:::i;:::-;:31;;2840:39307:14;9534:51:11;;9530:247;;9475:3;;2840:39307:14;;;;-1:-1:-1;;2840:39307:14;;9429:37:11;;2840:39307:14;-1:-1:-1;;;474:77:22;;;2840:39307:14;474:77:22;7997:32:14;2840:39307;474:77:22;9530:247:11;2840:39307:14;;-1:-1:-1;;2840:39307:14;;;;;;;9633:87:11;9605:25;9633:87;;;:::i;:::-;9605:25;;;;:::i;:::-;2840:39307:14;;;;;;;;;;9530:247:11;2840:39307:14;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;:::i;:::-;;;;;15941:1;2840:39307;;;;;;:::i;:::-;;;;9530:247:11;;;2840:39307:14;-1:-1:-1;;;2840:39307:14;;;;;;7997:32;2840:39307;;;-1:-1:-1;;;2840:39307:14;;;;;7997:32;2840:39307;;;15941:1;2840:39307;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;474:77:22;;;2840:39307:14;474:77:22;7997:32:14;2840:39307;474:77:22;2840:39307:14;-1:-1:-1;;;474:77:22;;;2840:39307:14;474:77:22;7997:32:14;2840:39307;474:77:22;5787:41:11;;;2840:39307:14;5787:41:11;2840:39307:14;5787:41:11;;;;;;;;:::i;:::-;;;2840:39307:14;;;;;;;;;;;;;:::i;:::-;5787:41:11;;;2840:39307:14;;;;5787:41:11;;;;;;2840:39307:14;;;;;;;;;5718:41:11;;;2840:39307:14;5718:41:11;2840:39307:14;5718:41:11;;;;;;;;:::i;:::-;;;2840:39307:14;;;;;;;;;;5787:41:11;2840:39307:14;;;;:::i;:::-;5718:41:11;;;;;;2840:39307:14;;;;5718:41:11;;;;;;2840:39307:14;;;;;;;;;11549:60:11;-1:-1:-1;;;11584:14:11;;2840:39307:14;12716:14;11584::11;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;15502:63;12716:14;;;2840:39307;15540:14;2840:39307;;15540:14;15326:166;;;;2840:39307;15326:166;2840:39307;15326:166;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;2840:39307;;;;;;;;;474:77:22;;;;2840:39307:14;474:77:22;;2840:39307:14;474:77:22;;;;;;;;;;;;;;8039:70:14;8079:19;;;2840:39307;8079:19;2840:39307;;8079:19;7997:32;;;;2840:39307;7997:32;2840:39307;7997:32;;;;;;;:::i;:::-;;;;2391:67:13;2429:18;;;2840:39307:14;2429:18:13;2840:39307:14;;2429:18:13;2564:50:10;-1:-1:-1;2591:18:10;2840:39307:14;2591:18:10;:23;;2564:50;;2840:39307:14;;;;;;-1:-1:-1;;2840:39307:14;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;2840:39307:14;;;;;;;-1:-1:-1;;;;;2840:39307:14;;1738:24:1;2840:39307:14;;;1738:24:1;2840:39307:14;;;;;;;;;1777:43:1;2840:39307:14;1777:43:1;;2840:39307:14;;;;;;;-1:-1:-1;;2840:39307:14;;;;-1:-1:-1;;;;;2840:39307:14;;:::i;:::-;;;;23948:14;2840:39307;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;1436:70:13;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;-1:-1:-1;;;;;2840:39307:14;;:::i;:::-;;;;1215:101:11;2840:39307:14;;;;;;;;;;;;;;;1215:101:11;;;:::i;:::-;;;;;;2840:39307:14;1215:101:11;;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;3403:33;2840:39307;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;:::i;:::-;;;;;;;;;;1500:62:0;;:::i;:::-;2840:39307:14;;;;;;;;11021:10;2840:39307;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;3642:66;2840:39307;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;-1:-1:-1;;;;;2840:39307:14;;:::i;:::-;;;;3770:47;2840:39307;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;4199:6:13;2840:39307:14;;;;;;;;4199:6:13;2840:39307:14;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2840:39307:14;;;;;-1:-1:-1;2840:39307:14;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2306:18:11;2840:39307:14;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2840:39307:14;;;3171:8:11;2840:39307:14;;;;;;;;;;;;;;3251:13:11;;2840:39307:14;3342:24:11;;;2840:39307:14;3278:18:11;;;;2840:39307:14;;;;:::i;:::-;3204:172:11;2840:39307:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3204:172:11;;;;2840:39307:14;;;3204:172:11;;3310:18;2840:39307:14;:::i;:::-;3204:172:11;2840:39307:14;;;;;;;:::i;:::-;;;;;3171:8:11;2840:39307:14;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2564:16:10;2840:39307:14;2564:23:10;;:50;;;2840:39307:14;2543:123:10;;;:::i;:::-;2684:7;2840:39307:14;2676:49:10;;-1:-1:-1;;;;;2840:39307:14;2684:21:10;;2676:49;:::i;:::-;2840:39307:14;2110:11:13;2840:39307:14;;2109:12:13;2105:68;;7997:9:14;2840:39307;;;-1:-1:-1;;;7997:32:14;;21638:10;2840:39307;7997:32;;2840:39307;;;;;;;;;;-1:-1:-1;;;;;2840:39307:14;7997:32;;;;;;;;2840:39307;7997:32;;;2840:39307;8043:13;;8039:70;;8118:1;2840:39307;;;8118:1;:::i;:::-;2840:39307;7997:32;;;;2840:39307;7997:32;2840:39307;7997:32;;;;;;;:::i;:::-;;;;;2840:39307;;;;;;;;2564:50:10;-1:-1:-1;2591:18:10;2840:39307:14;;2591:23:10;;2564:50;;2840:39307:14;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;;3498:20;2840:39307;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;3498:20;2840:39307;;;;;-1:-1:-1;2840:39307:14;;;;;;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;-1:-1:-1;;;2840:39307:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;1416:51:10;2840:39307:14;1416:51:10;2840:39307:14;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;3356:41;2840:39307;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;3309:41;2840:39307;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;2564:16:10;2840:39307:14;2564:23:10;;:50;;;2840:39307:14;2543:123:10;;;:::i;:::-;2684:7;2840:39307:14;2676:49:10;;-1:-1:-1;;;;;2840:39307:14;2684:21:10;;2676:49;:::i;:::-;2840:39307:14;2110:11:13;2840:39307:14;;2109:12:13;2105:68;;7997:9:14;2840:39307;;;-1:-1:-1;;;7997:32:14;;20131:10;2840:39307;7997:32;;2840:39307;;;;;;;;;;-1:-1:-1;;;;;2840:39307:14;7997:32;;;;;;;2840:39307;7997:32;;;2840:39307;8043:13;;8039:70;;8118:1;2840:39307;;;8118:1;:::i;7997:32::-;;;;2840:39307;7997:32;2840:39307;7997:32;;;;;;;:::i;:::-;;;;2564:50:10;-1:-1:-1;2591:18:10;2840:39307:14;;2591:23:10;;2564:50;;2840:39307:14;;;;;;-1:-1:-1;;2840:39307:14;;;;;;735:10:8;-1:-1:-1;;;;;2840:39307:14;;;2339:24:1;2335:96;;2093:20;2840:39307:14;;-1:-1:-1;;;;;;2840:39307:14;;;;;;-1:-1:-1;2840:39307:14;;735:10:8;2840:39307:14;;;;;;;-1:-1:-1;;;;;2840:39307:14;;3052:40:0;;-1:-1:-1;3052:40:0;2840:39307:14;2335:96:1;2386:34;;;2840:39307:14;2386:34:1;735:10:8;2840:39307:14;;;;2386:34:1;2840:39307:14;;;;;;-1:-1:-1;;2840:39307:14;;;;;1115:30:13;2840:39307:14;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;1500:62:0;;:::i;:::-;2093:20:1;2840:39307:14;;-1:-1:-1;;;;;;2840:39307:14;;;;;;-1:-1:-1;2840:39307:14;;;;;;;-1:-1:-1;;;;;;2840:39307:14;3052:40:0;-1:-1:-1;;3052:40:0;2840:39307:14;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;1225:23:13;2840:39307:14;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;-1:-1:-1;;;;;2840:39307:14;;:::i;:::-;;;;1651:84:13;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;1569:23:13;2840:39307:14;1569:23:13;;;;;;2840:39307:14;1569:23:13;;:::i;:::-;2840:39307:14;;;;;;;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;1138:35:10;2840:39307:14;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;3524:31;2840:39307;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;:::i;:::-;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2564:16:10;2840:39307:14;2564:23:10;;:50;;;2840:39307:14;2543:123:10;;;:::i;:::-;2684:7;2840:39307:14;2676:49:10;;-1:-1:-1;;;;;2840:39307:14;2684:21:10;;2676:49;:::i;:::-;7997:9:14;2840:39307;;;-1:-1:-1;;;7997:32:14;;17512:10;2840:39307;7997:32;;2840:39307;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;7997:32;;;;;;;2840:39307;7997:32;;;2840:39307;8043:13;;8039:70;;2840:39307;;-1:-1:-1;;;7997:32:14;;-1:-1:-1;;;;;2840:39307:14;;;7997:32;;2840:39307;;;;;;;;;;;;7997:32;;;;;;;2840:39307;7997:32;;;2840:39307;8043:13;;8039:70;;17605:19;17772:36;2840:39307;17605:19;;2840:39307;17704:34;2840:39307;;;;;:::i;:::-;;;;;;;;;;17704:34;;2840:39307;17512:10;17704:34;:::i;:::-;2840:39307;;;;;;:::i;:::-;;;;;;;;;;;;17772:36;;2840:39307;17772:36;:::i;:::-;17846;2840:39307;;;;;:::i;:::-;;;;;;;;;;;;17846:36;;2840:39307;17846:36;:::i;:::-;2840:39307;;;;;17955:16;2840:39307;;17997:17;;2840:39307;17997:19;;18030;2840:39307;18030:19;2840:39307;18030:19;;;18063;;;18096;;2840:39307;;;;;;;;;17955:170;;2840:39307;17955:170;;2840:39307;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;17955:170;;;;;2840:39307;17955:170;;;;;;;;2840:39307;17955:170;;;2840:39307;18139:11;;18135:63;;2840:39307;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;37792:33;;2840:39307;;;;;;;;;;;;;;;:::i;:::-;;;;37843:33;;2840:39307;;;;;;;:::i;:::-;;;;37769:118;;2840:39307;37736:151;;2840:39307;;;;;;;;;;;;;;:::i;:::-;;;;37960:33;;2840:39307;;;;;;;;;;;;;;;:::i;:::-;;;;38011:33;;2840:39307;;;;;;;:::i;:::-;;;;37937:118;;2840:39307;37898:157;;2840:39307;;;;;;;;;;;;;;:::i;:::-;;;;38130:35;;2840:39307;;;;;;;;;;;;;;;:::i;:::-;;;;38183:35;;2840:39307;;;;;;;:::i;:::-;;;;38107:122;;2840:39307;38066:163;;2840:39307;38260:5;2840:39307;38260:5;;;;-1:-1:-1;18526:30:14;18593:36;;18668:38;;18767:24;;;2840:39307;;;;;;;:::i;:::-;;;;;;;;;;;17512:10;;;34477;17512;;;;34477;:::i;:::-;2840:39307;;;4280:8:11;2840:39307:14;;;;;;;;;;;;;;;;4379:22:11;:48;;;2840:39307:14;4375:356:11;;;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4375:356:11;2840:39307:14;;;4280:8:11;2840:39307:14;;;;;;;;;;7353:107:11;2840:39307:14;;;6969:13:11;7353:18;2840:39307:14;6969:13:11;;2840:39307:14;7014:23:11;2840:39307:14;;;:::i;:::-;7014:23:11;:::i;:::-;2840:39307:14;;;7079:30:11;2840:39307:14;7079:30:11;;2840:39307:14;;;;;;;7079:30:11;;;;2840:39307:14;7079:30:11;;:::i;:::-;2840:39307:14;7069:41:11;;7235:24;2840:39307:14;7235:24:11;2840:39307:14;7235:24:11;;;2840:39307:14;;;;;;;;;;;:::i;:::-;;;;7199:98:11;;2840:39307:14;;;;;;;7164:19:11;;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;7390:60:11;;2840:39307:14;7353:18:11;:107;:::i;:::-;7471:26;2840:39307:14;;7471:26:11;:::i;:::-;2840:39307:14;;;;;;;;;:::i;:::-;;;;;18920:13;18935:5;2840:39307;18935:5;;;;2840:39307;;19035:52;2840:39307;474:77:22;2840:39307:14;;;;;2684:7:10;2840:39307:14;;;;474:77:22;;;:::i;:::-;17512:10:14;19035:52;;2840:39307;;18942:3;474:77:22;18994:2:14;474:77:22;;18994:2:14;474:77:22;;;18981:20:14;;2840:39307;18981:20;;;:::i;:::-;2840:39307;18965:36;;;;:::i;:::-;2840:39307;474:77:22;18920:13:14;;4375:356:11;4606:10;4639:7;;4606:41;4639:7;;;2840:39307:14;;;;;;;;;4606:41:11;;;2840:39307:14;4606:41:11;;;:::i;:::-;;;;;;;;;;;;;;;4375:356;2840:39307:14;;;;4679:41:11;2840:39307:14;;;;;;;;;;;;4695:15:11;;4712:7;;;2840:39307:14;;;;;;;;;;;4679:41:11;;;2840:39307:14;4679:41:11;;;:::i;:::-;;;;;;;;;;;;;;4375:356;2840:39307:14;;;;;;;;;;;;;;4375:356:11;;4679:41;;;;;;;;;;;;;;:::i;:::-;;;2840:39307:14;;;;;;;;;;;;;;:::i;:::-;4679:41:11;;;;;2840:39307:14;;;;4679:41:11;;;;;;2840:39307:14;;;;;;;;;4606:41:11;;;;;;;;;;;;;;:::i;:::-;;;2840:39307:14;;;;;;;;;;4679:41:11;2840:39307:14;;;;:::i;:::-;4606:41:11;;;;;2840:39307:14;;;;4606:41:11;;;;;;2840:39307:14;;;;;;;;;4379:48:11;4405:17;2840:39307:14;4405:17:11;;2840:39307:14;4405:22:11;4379:48;;2840:39307:14;;;;;;;;;;;;;38267:3;474:77:22;38322:2:14;474:77:22;;;38322:2:14;474:77:22;;;38316:13:14;2840:39307;38316:13;;;:::i;:::-;2840:39307;38286:43;:24;;;:43;:::i;:::-;2840:39307;474:77:22;38245:13:14;;474:77:22;2840:39307:14;;;;474:77:22;;2840:39307:14;474:77:22;2840:39307:14;;474:77:22;17955:170:14;;;;2840:39307;17955:170;2840:39307;17955:170;;;;;;;:::i;:::-;;;;;2840:39307;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7997:32;;;;2840:39307;7997:32;2840:39307;7997:32;;;;;;;:::i;:::-;;;;;2840:39307;;;;;;;;;7997:32;;;;2840:39307;7997:32;2840:39307;7997:32;;;;;;;:::i;:::-;;;;2564:50:10;-1:-1:-1;2591:18:10;2840:39307:14;;2591:23:10;;2564:50;;2840:39307:14;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;3182:27;2840:39307;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;:::i;:::-;;;-1:-1:-1;;2840:39307:14;;;;1500:62:0;;:::i;:::-;2564:16:10;2840:39307:14;2564:23:10;;:50;;;2840:39307:14;2543:123:10;;;:::i;:::-;2684:7;2840:39307:14;2676:49:10;;-1:-1:-1;;;;;2840:39307:14;2684:21:10;;2676:49;:::i;:::-;2840:39307:14;2395:11:13;2840:39307:14;;2391:67:13;;7997:9:14;2840:39307;;;-1:-1:-1;;;7997:32:14;;-1:-1:-1;;;;;2840:39307:14;;;;7997:32;;2840:39307;;;;;;;;;;;;;7997:32;;;;;;;2840:39307;7997:32;;;2840:39307;8043:13;;8039:70;;2840:39307;;;;;;;:::i;:::-;;;;;;;12142:19;2840:39307;;;;;;;;;;;12205:13;:32;12201:86;;2840:39307;;12354:34;;2840:39307;;;:::i;:::-;;;;;;;;;;;;12354:34;;2840:39307;12354:34;:::i;:::-;12425:36;2840:39307;;;;;:::i;:::-;;;;;;;;;;;;12425:36;;2840:39307;12425:36;:::i;:::-;2840:39307;;;;474:77:22;12571:29:14;;;12567:85;;2840:39307;;;12665:13;2840:39307;;;;;;;;12661:80;;12812:12;474:77:22;2840:39307:14;;;-1:-1:-1;;;12812:166:14;;2840:39307;-1:-1:-1;;;;;2840:39307:14;;;;12812:166;;474:77:22;;12883:19:14;2840:39307;474:77:22;;;;;;;;;;;;12812:166:14;474:77:22;2840:39307:14;474:77:22;2840:39307:14;12916:19;474:77:22;;;;2840:39307:14;12142:19;474:77:22;;;;12812:166:14;;;;;;;2840:39307;12812:166;;;474:77:22;12992:11:14;;12988:63;;2840:39307;;;;;;;;;;;;;;;:::i;:::-;;;;13191:47;;2840:39307;12916:19;2840:39307;;;;;;;;;;;;;;:::i;:::-;;;;13260:47;;2840:39307;;;;;;;:::i;:::-;;;;13164:158;;2840:39307;;;;;;;;;;;;:::i;:::-;;;;;;13432:5;13303:1;13432:5;;;;2840:39307;;;;13490:1;2840:39307;;;;;;;;;;;;;;;;4379:22:11;:48;;;13412:99:14;4375:356:11;;;2840:39307:14;;;2395:11:13;2840:39307:14;;;;;;;;;;;;;;;474:77:22;2840:39307:14;;;;;;;;4375:356:11;2840:39307:14;;;13490:1;2840:39307;;;;;;;;;;7353:107:11;2840:39307:14;;;6969:13:11;7353:18;2840:39307:14;6969:13:11;;2840:39307:14;7014:23:11;2840:39307:14;;;:::i;7014:23:11:-;2840:39307:14;;;7079:30:11;2840:39307:14;7079:30:11;;2840:39307:14;;;;;;;;7079:30:11;;;2840:39307:14;7079:30:11;;:::i;:::-;2840:39307:14;7069:41:11;;7235:24;2840:39307:14;7235:24:11;;;2840:39307:14;;;;;;;;;;;:::i;:::-;;;;7199:98:11;;2840:39307:14;;;;;;;7164:19:11;;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7353:107:11:-;7471:26;2840:39307:14;;7471:26:11;:::i;:::-;2840:39307:14;;;;12665:13;2840:39307;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;13789:21;13303:1;13789:21;;;;2840:39307;;13893:38;2840:39307;;;;;;2684:7:10;2840:39307:14;;;474:77:22;2840:39307:14;;474:77:22;;;:::i;:::-;13893:38:14;2840:39307;13812:3;474:77:22;13860:2:14;474:77:22;;;13860:2:14;474:77:22;;;13847:20:14;2840:39307;13847:20;;;:::i;:::-;2840:39307;13831:36;;;;:::i;:::-;2840:39307;474:77:22;13774:13:14;;4375:356:11;4606:41;2840:39307:14;4606:10:11;4639:7;;2840:39307:14;;;;;;;;;4606:41:11;;;2840:39307:14;4606:41:11;;;:::i;:::-;;;;;;;;;;;2840:39307:14;4606:41:11;;;4375:356;-1:-1:-1;2840:39307:14;;;;;;;;;;;4712:7:11;2840:39307:14;;;-1:-1:-1;;;4679:41:11;;2840:39307:14;474:77:22;4695:15:11;;;2840:39307:14;;;;;;;4679:41:11;;4695:15;2840:39307:14;4679:41:11;;;:::i;:::-;;;;;;;;;;2840:39307:14;4679:41:11;;;4375:356;2840:39307:14;;;;2395:11:13;2840:39307:14;;;;;;;;;4375:356:11;;4679:41;;;2840:39307:14;4679:41:11;2840:39307:14;4679:41:11;;;;;;;;:::i;:::-;;;2840:39307:14;;;;;;;;;;;2395:11:13;2840:39307:14;;:::i;:::-;4679:41:11;;;;;;;;;;4606;;;2840:39307:14;4606:41:11;2840:39307:14;4606:41:11;;;;;;;;:::i;:::-;;;2840:39307:14;;;;;;;;;;4679:41:11;2840:39307:14;;;;:::i;:::-;4606:41:11;;;;;;;;;;;4379:48;4405:17;2840:39307:14;4405:17:11;;2840:39307:14;4405:22:11;4379:48;;13439:3:14;474:77:22;13490:1:14;474:77:22;;;13490:1:14;474:77:22;;;13477:19:14;2840:39307;13477:19;;;:::i;:::-;2840:39307;13462:34;;;;:::i;:::-;2840:39307;474:77:22;13417:13:14;;12812:166;;;;2840:39307;12812:166;2840:39307;12812:166;;;;;;;:::i;:::-;;;;474:77:22;;;;2840:39307:14;474:77:22;;2840:39307:14;474:77:22;;;;;;;;;;;;;;12567:85:14;12623:18;;;2840:39307;12623:18;2840:39307;;12623:18;12201:86;12260:16;;;2840:39307;12260:16;2840:39307;;12260:16;2840:39307;;;;;;;;;;;;;7997:32;;;;2840:39307;7997:32;2840:39307;7997:32;;;;;;;:::i;:::-;;;;2564:50:10;-1:-1:-1;2591:18:10;2840:39307:14;2591:18:10;:23;;2564:50;;2840:39307:14;;;;;;-1:-1:-1;;2840:39307:14;;;;;;:::i;:::-;;;;;;;;;;3881:38:13;1500:62:0;;;:::i;:::-;2840:39307:14;;;;;;;;3881:17:13;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;23663:24;2840:39307;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;;;23663:24;:::i;:::-;2840:39307;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2840:39307:14;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;7997:9:14;2840:39307;;;-1:-1:-1;;;7997:32:14;;-1:-1:-1;;;;;2840:39307:14;;;;7997:32;;2840:39307;;;;;;;;;;7997:32;2840:39307;;7997:32;;;;;;;2840:39307;7997:32;;;2840:39307;8043:13;;8039:70;;2840:39307;7997:32;2840:39307;;;;;;;;;;10597:32;;;2840:39307;10597:32;;2840:39307;10597:32;;;;;;;2840:39307;10597:32;;;2840:39307;;4134:7:10;2840:39307:14;4207:24:10;;;4203:75;;2840:39307:14;-1:-1:-1;;;;;2840:39307:14;;;;;4134:7:10;2840:39307:14;;;;;;;;;;;;;;;:::i;:::-;;;;4337:41:10;2840:39307:14;4318:60:10;2840:39307:14;;;-1:-1:-1;;;;;2840:39307:14;4394:38:10;-1:-1:-1;;4394:38:10;2840:39307:14;4203:75:10;4254:13;;;2840:39307:14;4254:13:10;2840:39307:14;;4254:13:10;10597:32:14;;;;2840:39307;10597:32;2840:39307;10597:32;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;7997;;;;2840:39307;7997:32;2840:39307;7997:32;;;;;;;:::i;:::-;;;;2840:39307;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;;3474:18;2840:39307;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3474:18;2840:39307;;;;;-1:-1:-1;2840:39307:14;;;;;;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;3271:16:10;2840:39307:14;3271:23:10;;:50;;;2840:39307:14;;;;;;;;;;;3271:50:10;-1:-1:-1;3298:18:10;2840:39307:14;3298:18:10;:23;;3271:50;;2840:39307:14;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;2840:39307:14;;;;3270:33;2840:39307;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2840:39307:14;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;1569:23:13;2840:39307:14;;;;;;1569:23:13;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;-1:-1:-1;2840:39307:14;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;;;:::o;:::-;;;;;-1:-1:-1;2840:39307:14;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;2815:568:11;2840:39307:14;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;2840:39307:14;3171:8:11;2840:39307:14;;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;-1:-1:-1;2840:39307:14;3251:13:11;2840:39307:14;3251:13:11;;2840:39307:14;3278:18:11;;;;3342:24;;;;2840:39307:14;;;;;:::i;:::-;3204:172:11;2840:39307:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;-1:-1:-1;2840:39307:14;;;;;;;3204:172:11;;;;2840:39307:14;;3204:172:11;3310:18;;2840:39307:14;:::i;:::-;3204:172:11;2815:568;:::o;2840:39307:14:-;3171:8:11;2840:39307:14;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;2840:39307:14;;;;;;;;;;;;-1:-1:-1;;;2840:39307:14;;;;;;;;;;;;;;;;;;;:::o;474:77:22:-;;2840:39307:14;474:77:22;;;;;;;;;:::o;2840:39307:14:-;;;;;;;;;;;;:::o;:::-;;;;;474:77:22;2840:39307:14;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;474:77:22;2840:39307:14;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;19907:688;;-1:-1:-1;;;;;2840:39307:14;;;19907:688;20209:26;;20205:116;;2840:39307;20233:1;2840:39307;20400:17;2840:39307;;;;20233:1;2840:39307;;;20396:92;;2840:39307;;-1:-1:-1;;;25606:30:14;;25630:4;25606:30;;;2840:39307;;;25606:30;2840:39307;25606:30;;;;;;;;20233:1;25606:30;;;19907:688;2840:39307;1745:53:7;2840:39307:14;;;;;;1745:53:7;;;25503:10:14;25606:30;1745:53:7;;2840:39307:14;25630:4;2840:39307;;;;;;;;;;1745:53:7;;;;;;:::i;:::-;;;:::i;:::-;2840:39307:14;;-1:-1:-1;;;25847:30:14;;25630:4;25606:30;25847;;2840:39307;;;;25606:30;2840:39307;25847:30;;;;;;;;;20233:1;25847:30;;;19907:688;25997:28;;;;;:::i;:::-;26039:27;26035:81;;26190:54;25503:10;;;26190:54;:::i;:::-;26298:8;;;26294:78;;19907:688;2840:39307;;;;;;;;;;;;;;;20233:1;2840:39307;;;;26387:51;2840:39307;25503:10;26387:51;;19907:688::o;26294:78::-;26356:4;25503:10;;26356:4;;:::i;:::-;26294:78;;;;26035:81;26089:16;;;20233:1;26089:16;25606:30;20233:1;26089:16;25847:30;;;;;2840:39307;25847:30;;2840:39307;25847:30;;;;;;2840:39307;25847:30;;;:::i;:::-;;;2840:39307;;;;;;;;25997:28;25847:30;;;;;-1:-1:-1;25847:30:14;;25606;;;2840:39307;25606:30;;2840:39307;25606:30;;;;;;2840:39307;25606:30;;;:::i;:::-;;;2840:39307;;;;;25606:30;;;;;;-1:-1:-1;25606:30:14;;20396:92;2840:39307;;-1:-1:-1;;;20447:30:14;;2840:39307;20447:30;;;2840:39307;;;;;;-1:-1:-1;;;2840:39307:14;;;;20447:30;;;20205:116;24420:9;;;;;:19;2840:39307;;24541:10;20233:1;2840:39307;24526:14;2840:39307;;;20233:1;2840:39307;;;;474:77:22;;;;;;;;24699:49:14;2840:39307;;24541:10;;24699:49;:::i;:::-;24420:9;;;24817:18;24813:97;;20205:116;2840:39307;;;;;;;;;;24933:42;2840:39307;24541:10;24933:42;;2840:39307;;;;;;;;;;;;;25033:16;2840:39307;;;;24990:60;2840:39307;24541:10;24990:60;;20304:7::o;24813:97::-;20233:1;24420:9;;;24880:18;24420:9;;24880:18;:::i;:::-;24851:48;;;;;24813:97;24541:10;24851:48;;24813:97;24851:48;2840:39307;;;20233:1;2840:39307;;;;;24851:48;;;;;2840:39307;;;-1:-1:-1;;;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;21421:1253::-;;;21733:19;;;;;2840:39307;;;;;;;;;;;:::i;:::-;21733:19;2840:39307;;;;;;;21862:34;2840:39307;;;;;;21733:19;21862:34;;2840:39307;21679:10;21862:34;:::i;:::-;21933;2840:39307;;;;;:::i;:::-;;;;;;;;;;;21733:19;21933:34;;2840:39307;21933:34;:::i;:::-;2840:39307;;;;;22040:16;2840:39307;;22082:17;;2840:39307;22082:19;;22115;2840:39307;;21733:19;22115;;;22148;;;22181;;2840:39307;;;;;;;;;22040:170;;;;;2840:39307;;:::i;:::-;21792:1;2840:39307;;;;;;;;;22040:170;;;;;21733:19;22040:170;;;;;;;;21792:1;22040:170;;;2840:39307;22224:11;;22220:63;;21792:1;2840:39307;;;;21733:19;2840:39307;;;;;;;-1:-1:-1;;;;;2840:39307:14;22404:26;22400:147;;-1:-1:-1;21792:1:14;2840:39307;;;;21733:19;2840:39307;;;;;-1:-1:-1;;;;;2840:39307:14;;28695:26;;28691:78;;2840:39307;;29100:109;2840:39307;;;;;;;;;;;;;;;;:::i;:::-;;;21733:19;28887:47;;2840:39307;;;;;;;;;;;;;;;:::i;:::-;;;21733:19;28952:47;;2840:39307;;;;;;;:::i;:::-;;;21733:19;28864:146;;2840:39307;;;;;;;;;;:::i;:::-;;;21733:19;29132:47;;2840:39307;;;;;-1:-1:-1;;;29100:109:14;;2840:39307;;22040:170;29100:109;;2840:39307;;;;;;;;;;;;;;;;;;;;;;;29100:109;;:10;;:109;;;;;;;29352:10;29100:109;21792:1;29100:109;;;2840:39307;21679:10;;;29352;:::i;:::-;2840:39307;;-1:-1:-1;;;41473:39:14;;2840:39307;21733:19;2840:39307;22040:170;2840:39307;;41473:39;;;;;;;42132:5;41473:39;2840:39307;41473:39;21792:1;41473:39;;;2840:39307;-1:-1:-1;41658:8:14;2840:39307;;;;41523:22;41642:24;;;;;;41705;;41752:22;41705:24;41698:32;41705:24;;:::i;:::-;41698:32;:::i;:::-;41752:22;;:::i;:::-;41638:358;;21679:10;42132:5;;:::i;:::-;2840:39307;;;;;;;;:::i;:::-;;;;21792:1;29584:21;21947:1;29584:21;;;;-1:-1:-1;;29655:1:14;2840:39307;;;-1:-1:-1;;;;;2840:39307:14;;;;21679:10;;29687:52;;2840:39307;;29687:52;;2840:39307;29687:52;:::i;:::-;;;;21421:1253::o;29607:3::-;474:77:22;29655:1:14;474:77:22;;;29655:1:14;474:77:22;;;29642:19:14;2840:39307;29642:19;;;:::i;:::-;2840:39307;29626:35;;;;:::i;:::-;2840:39307;474:77:22;29569:13:14;;41638:358;41853:24;;;;;41849:147;;41638:358;;;;;41849:147;41963:22;41916:24;;;41909:32;41916:24;;;;:::i;41909:32::-;41963:22;;:::i;:::-;41849:147;;;;;41473:39;;;;21733:19;41473:39;21733:19;41473:39;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;29100:109;;;;;2840:39307;29100:109;2840:39307;29100:109;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;28691:78;28744:14;;;21792:1;28744:14;22040:170;21792:1;28744:14;22400:147;2840:39307;;27338:109;2840:39307;;;;;;;;;;;;;;;;;;:::i;:::-;;;21733:19;27125:47;;2840:39307;;;;;;;;;;;;;;;:::i;27338:109::-;;:10;;:109;;;;;;;27590:10;27338:109;21792:1;27338:109;;;22400:147;21679:10;;;27590;:::i;:::-;21679;21792:1;2840:39307;27667:14;21733:19;2840:39307;;21792:1;2840:39307;27667:30;2840:39307;;;27667:30;:::i;:::-;2840:39307;;27707:30;21792:1;27707:30;;;;22400:147;21792:1;21679:10;;;;;;27707:30;;;;;2840:39307;;;;;;;;:::i;:::-;;;;21792:1;27852:21;21947:1;27852:21;;;;2840:39307;;28007:52;2840:39307;;;;;;;21733:19;2840:39307;;;27955:37;2840:39307;21679:10;27955:37;;2840:39307;;;;;27923:1;2840:39307;;;28007:52;2840:39307;;21679:10;;;;28007:52;;;:::i;27875:3::-;474:77:22;27923:1:14;474:77:22;;;27923:1:14;474:77:22;;;27910:19:14;2840:39307;27910:19;;;:::i;:::-;2840:39307;27894:35;;;;:::i;:::-;2840:39307;474:77:22;27837:13:14;;27707:30;-1:-1:-1;27707:30:14;;;27338:109;;;;;2840:39307;27338:109;2840:39307;27338:109;;;;;;;:::i;:::-;;;;;22040:170;;;;21733:19;22040:170;21733:19;22040:170;;;;;;;:::i;:::-;;;;2840:39307;;;;21733:19;2840:39307;;;;;;;;;;;;;;;;;1796:162:0;1710:6;2840:39307:14;-1:-1:-1;;;;;2840:39307:14;735:10:8;1855:23:0;1851:101;;1796:162::o;36143:378:14:-;36302:9;2840:39307;;;;-1:-1:-1;;;36302:32:14;;-1:-1:-1;;;;;2840:39307:14;;;36302:32;;;2840:39307;;36143:378;2840:39307;;;;36302:32;;2840:39307;;;36302:32;;;;;;;-1:-1:-1;36302:32:14;;;36143:378;2840:39307;;;;;36362:40;;;;:96;;;36143:378;36345:170;;;;36143:378::o;36362:96::-;2840:39307;;;;;;;;;;36418:40;;36362:96;;;;36302:32;;;;;2840:39307;36302:32;2840:39307;36302:32;;;;;;;:::i;:::-;;;;;36761:290;36888:16;2840:39307;;;36888:42;;;;:100;;;36761:290;36871:174;;;36761:290::o;36888:100::-;2840:39307;;;36946:18;2840:39307;;;;36946:42;;36888:100;;;2840:39307;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;35232:584::-;;;11381:15:11;35232:584:14;;;;11381:15:11;:::i;:::-;2840:39307:14;;;;;;;;;-1:-1:-1;2840:39307:14;10492:8:11;2840:39307:14;;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;10492:29:11;2840:39307:14;-1:-1:-1;2840:39307:14;10492:29:11;2840:39307:14;;;10586:30:11;2840:39307:14;10586:30:11;;2840:39307:14;;;;;;;;10586:30:11;;;;;;:::i;:::-;2840:39307:14;10576:41:11;;-1:-1:-1;2840:39307:14;;;10492:8:11;2840:39307:14;;;;;;;;;;;;;;;;;;;10658:35:11;;;;2840:39307:14;;;10658:58:11;;;2840:39307:14;;;;;;;11553:8:11;11549:60;;2840:39307:14;-1:-1:-1;2840:39307:14;10492:8:11;2840:39307:14;;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;-1:-1:-1;2840:39307:14;5718:10:11;;5751:7;5718:41;2840:39307:14;5751:7:11;;2840:39307:14;;;;;;;;;5718:41:11;;;10658:35;5718:41;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;5718:41:11;;;35232:584:14;2840:39307;5787:41:11;2840:39307:14;;;;;;;;;;10658:58:11;2840:39307:14;;;;5803:15:11;;;5820:7;;;2840:39307:14;;;;;;;;;;;5787:41:11;;;10658:35;5787:41;;;:::i;:::-;;;;;;;;;;-1:-1:-1;5787:41:11;;;35232:584:14;2840:39307;;;;;;;;;;;;;-1:-1:-1;2840:39307:14;10492:8:11;2840:39307:14;;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;-1:-1:-1;2840:39307:14;9441:18:11;;;;2840:39307:14;;9424:363:11;9468:5;;;9797:13;;;;10492:29;9848:7;9797:13;;;:15;2840:39307:14;;9797:15:11;:::i;:::-;2840:39307:14;;9848:7:11;:::i;:::-;-1:-1:-1;2840:39307:14;9534:31:11;2840:39307:14;;;;35232:584;;;:::o;2840:39307::-;10658:58:11;2840:39307:14;;;;;;;9534:31:11;2840:39307:14;;;;;;;;9475:3:11;-1:-1:-1;;2840:39307:14;;;;;;;9534:25:11;:31;:25;;;;:::i;:::-;:31;;2840:39307:14;9534:51:11;;9530:247;;9475:3;;2840:39307:14;;;;-1:-1:-1;;2840:39307:14;;9429:37:11;;9530:247;2840:39307:14;;-1:-1:-1;;2840:39307:14;;;;;;;9633:87:11;9605:25;9633:87;;;:::i;9605:25::-;2840:39307:14;;;;;;;;;;9530:247:11;2840:39307:14;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;:::i;:::-;;;;;9534:31:11;-1:-1:-1;2840:39307:14;;;;;:::i;:::-;;;;9530:247:11;;;2840:39307:14;;;;-1:-1:-1;2840:39307:14;-1:-1:-1;10658:35:11;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;;-1:-1:-1;2840:39307:14;;10658:35:11;2840:39307:14;;-1:-1:-1;2840:39307:14;;9534:31:11;2840:39307:14;;;;;;:::i;:::-;;;;;;;;;;5787:41:11;;;2840:39307:14;5787:41:11;2840:39307:14;5787:41:11;;;;;;;;:::i;:::-;;;2840:39307:14;;;;;;;;;;;;;:::i;:::-;5787:41:11;;;;;;;;5718;;;2840:39307:14;5718:41:11;2840:39307:14;5718:41:11;;;;;;;;:::i;:::-;;;2840:39307:14;;;;;;;;;;5787:41:11;2840:39307:14;;;;:::i;:::-;5718:41:11;;;;;;;;;;;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;;;-1:-1:-1;2840:39307:14;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;2840:39307:14;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:39307:14;;;;;;;:::o;30081:2281::-;;;;30325:1;2840:39307;;30308:8;2840:39307;;;30325:1;2840:39307;;30308:25;30304:77;;30081:2281;30325:1;2840:39307;;;30308:8;2840:39307;;;;;30546:22;30674:8;2840:39307;;;30546:22;30534:2;30657:25;-1:-1:-1;30657:25:14;;;30729;;30534:2;2840:39307;;;;;;30722:33;30820:22;30722:33;;:::i;:::-;30777:22;;;;:::i;:::-;30820;;:::i;:::-;30653:448;;31167:10;;31163:63;;31363:9;2840:39307;;;;-1:-1:-1;;;31363:30:14;;-1:-1:-1;;;;;2840:39307:14;;;30308:8;31363:30;;2840:39307;;;;;;;;;;;31363:30;;2840:39307;;;31363:30;;;;;;;31491:114;31363:30;30325:1;31363:30;;;30653:448;31491:10;:114;:10;;2840:39307;;;;;;;;;;;;;:::i;:::-;;;;31527:41;;2840:39307;;;;;-1:-1:-1;;;31491:114:14;;2840:39307;;30308:8;31491:114;;2840:39307;;;;;;;;;;;;;;;;;;;;;;;31491:114;;;;;;;;;;;;;30325:1;31491:114;;;30653:448;2840:39307;30325:1;2840:39307;31700:8;2840:39307;;;30325:1;2840:39307;;30325:1;2840:39307;;;;30325:1;2840:39307;;;;31740:22;:48;;;30653:448;31736:281;;;2840:39307;32304:7;2840:39307;;;;;32073:115;2840:39307;;;;;;;;;;;;;;;;474:77:22;2840:39307:14;;;;;;;;;31736:281;32073:18;32148:24;;;2840:39307;;;;;;;;;:::i;32073:115::-;32202:26;2840:39307;;32202:26;:::i;31736:281::-;31917:7;;31884:41;2840:39307;31917:7;;2840:39307;;;;;;;;;31884:41;;;30308:8;31884:41;;;:::i;:::-;;;;;;;;;;;30325:1;31884:41;;;31736:281;2840:39307;31961:41;2840:39307;;;;;;;;;;;;;;;474:77:22;31977:15:14;;31994:7;;;2840:39307;;;;;;;;;;;31961:41;;;30308:8;31961:41;;;:::i;:::-;;;;;;;;;;;;30325:1;31961:41;;;31736:281;-1:-1:-1;2840:39307:14;;;;;;;;;;;32304:7;;32073:115;;31736:281;;31961:41;;;;;2840:39307;31961:41;2840:39307;31961:41;;;;;;;;:::i;:::-;;;2840:39307;;;;;;;;;;;;32304:7;2840:39307;32073:115;2840:39307;;:::i;:::-;31961:41;;;;;;;;;;;;31884;;;2840:39307;31884:41;2840:39307;31884:41;;;;;;;;:::i;:::-;;;2840:39307;;;;;;;;;;31961:41;2840:39307;;;;:::i;:::-;31884:41;;;;;;;;;;;31740:48;31766:17;2840:39307;31766:17;;2840:39307;31766:22;31740:48;;31491:114;;;;;;;;;;;;;;;:::i;:::-;;;;;31363:30;31491:114;31363:30;;;;;2840:39307;31363:30;2840:39307;31363:30;;;;;;;:::i;:::-;;;;;31163:63;31193:22;;;;;:::o;30653:448::-;30926:25;;;;;30534:2;30926:25;30922:179;;30653:448;;;;;30922:179;30998:25;;;;;2840:39307;;;;;;;;;30991:33;31046:22;30991:33;;:::i;:::-;31046:22;;:::i;:::-;30325:1;30922:179;;;;;30304:77;4787:11:13;2840:39307:14;;;;;30325:1;2840:39307;;;4853:14:13;2840:39307:14;;;;;;;-1:-1:-1;;;;;;2840:39307:14;;;4904:6:13;2840:39307:14;-1:-1:-1;;;2840:39307:14;;;;;;;;;;4904:6:13;2840:39307:14;;:::i;:::-;;;;;;;;;;;;;;;;;4939:13:13;4787:11;2840:39307:14;4939:13:13;:::i;:::-;4787:11;2840:39307:14;30304:77;;2840:39307;;;;;;;;;;;;;;;;;;:::o;38740:2297::-;2840:39307;;-1:-1:-1;;;39014:39:14;;38740:2297;;;-1:-1:-1;;;;;2840:39307:14;;;;38740:2297;;39014:39;2840:39307;39014:39;2840:39307;;39014:39;;;;;;;-1:-1:-1;39014:39:14;;;38740:2297;-1:-1:-1;39184:8:14;;-1:-1:-1;39064:22:14;2840:39307;;;;;;;39168:24;;;;;;39239;;;;;39329:22;39239:24;39232:32;39239:24;;:::i;:::-;39232:32;:::i;39329:22::-;39164:437;;2840:39307;-1:-1:-1;2840:39307:14;39014:39;;2840:39307;;-1:-1:-1;2840:39307:14;;39657:27;39653:81;;39164:437;-1:-1:-1;2840:39307:14;39014:39;;2840:39307;;-1:-1:-1;2840:39307:14;;39842:10;;;39838:63;;40038:9;2840:39307;;;;-1:-1:-1;;;40038:30:14;;-1:-1:-1;;;;;2840:39307:14;;;39014:39;40038:30;;2840:39307;;;;;;;;;;;40038:30;;2840:39307;;;40038:30;;;;;;;40166:114;40038:30;-1:-1:-1;40038:30:14;;;40166:10;:114;:10;;2840:39307;39014:39;2840:39307;;;;;;;;;;;:::i;39653:81::-;4787:11:13;2840:39307:14;;-1:-1:-1;2840:39307:14;39014:39;;2840:39307;;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;4853:14:13;39014:39:14;2840:39307;;-1:-1:-1;2840:39307:14;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;4904:6:13;2840:39307:14;-1:-1:-1;;;2840:39307:14;;;;;;;;;;4904:6:13;2840:39307:14;;:::i;:::-;;;-1:-1:-1;;;;;2840:39307:14;;;;;;;;;;;;;;;;;4787:11:13;2840:39307:14;4939:13:13;;;:::i;:::-;4787:11;2840:39307:14;39653:81;;39164:437;39428:24;;;;;;;;39424:177;;39164:437;;;;;;39424:177;39492:32;39499:24;;;;39546:22;39499:24;;;;;;:::i;39546:22::-;-1:-1:-1;39424:177:14;;;;;;39014:39;;;;;;;;;;;;;;:::i;:::-;;;;1219:160:7;2840:39307:14;;-1:-1:-1;;;1328:43:7;;;;-1:-1:-1;;;;;2840:39307:14;;;1328:43:7;;;2840:39307:14;;;;;;;;;1328:43:7;;;;;;;2840:39307:14;1328:43:7;:::i;:::-;;:::i;2840:39307:14:-;;;;;;;;;:::o;8058:493:11:-;2840:39307:14;;;;;;-1:-1:-1;2840:39307:14;8171:8:11;2840:39307:14;;;-1:-1:-1;2840:39307:14;;-1:-1:-1;2840:39307:14;;;;-1:-1:-1;2840:39307:14;;8221:13:11;;;2840:39307:14;8266:23:11;2840:39307:14;;;:::i;8266:23:11:-;2840:39307:14;;;8331:30:11;2840:39307:14;8331:30:11;;2840:39307:14;;;;;;;;8331:30:11;;;;;;:::i;:::-;2840:39307:14;8321:41:11;;8445:24;8492:4;8445:24;;;2840:39307:14;8374:19:11;2840:39307:14;;;;;;;;;:::i;:::-;;;;8409:98:11;;2840:39307:14;;;;-1:-1:-1;2840:39307:14;8374:19:11;2840:39307:14;;;-1:-1:-1;2840:39307:14;;;;;;;;;;;;;;;;;;;;;;;;;;8518:26:11;2840:39307:14;;8518:26:11;:::i;:::-;2840:39307:14;;8058:493:11:o;8370:720:7:-;;-1:-1:-1;8507:421:7;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:7;;8942:15;;-1:-1:-1;;;;;;2840:39307:14;;8960:26:7;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;-1:-1:-1;;;;9033:40:7;;;-1:-1:-1;;;;;2840:39307:14;;;;9033:40:7;2840:39307:14;;;9033:40:7;8942:68;9009:1;8994:16;;8942:68;;11965:247:11;12130:7;;2840:39307:14;12141:9:11;2840:39307:14;;;12141:9:11;;2840:39307:14;12152:7:11;;;12141:9;2840:39307:14;;12163:9:11;;2840:39307:14;;;;12119:54:11;12141:9;12119:54;;2840:39307:14;;;;;;;;;;;;;;;;12119:54:11;;;;;;:::i;:::-;2840:39307:14;12088:103:11;;11965:247;:::o;2840:39307:14:-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"acceptOwnership()":"79ba5097","alreadyMinted(uint256)":"b7365f1f","auditor()":"3ec045a6","auditorPublicKey()":"91584d49","balanceOf(address,uint256)":"00fdd58e","balanceOfStandalone(address)":"a865d5b2","balances(address,uint256)":"cbf1304d","blacklistedTokens(address)":"5c8b5f44","burnVerifier()":"c3a716eb","decimals()":"313ce567","deposit(uint256,address,uint256[7])":"82f09ea2","getBalanceFromTokenAddress(address,address)":"14dda7fd","getNativeBalance(address)":"efd8be62","getTokens()":"aa6ca808","isAuditorKeySet()":"034a1c18","isConverter()":"61832767","mintVerifier()":"00b0938d","name()":"06fdde03","nativeBalances(address)":"95ad89e6","nextTokenId()":"75794a3c","owner()":"8da5cb5b","pendingOwner()":"e30c3978","privateBurn(((uint256[2],uint256[2][2],uint256[2]),uint256[19]),uint256[7])":"f4b2be44","privateMint(address,((uint256[2],uint256[2][2],uint256[2]),uint256[24]))":"204ac7cc","registerTokenType(address,uint8)":"ba487473","registrar()":"2b20e397","renounceOwnership()":"715018a6","setAuditorPublicKey(address)":"13a4f0db","setTokenBlacklist(address,bool)":"1ff0769a","symbol()":"95d89b41","tokenAddresses(uint256)":"e5df8b84","tokenIds(address)":"fc97a303","tokenTypes(address)":"b39f252d","tokens(uint256)":"4f64b2be","transfer(address,uint256,((uint256[2],uint256[2][2],uint256[2]),uint256[32]),uint256[7])":"2d947610","transferOwnership(address)":"f2fde38b","transferVerifier()":"8daed528","withdraw(uint256,((uint256[2],uint256[2][2],uint256[2]),uint256[16]),uint256[7])":"a5566e25","withdrawVerifier()":"864eb164"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"registrar\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isConverter\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"mintVerifier\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawVerifier\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"transferVerifier\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"burnVerifier\",\"type\":\"address\"}],\"internalType\":\"struct CreateEncryptedERCParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNullifier\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnknownToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAuditor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAuditor\",\"type\":\"address\"}],\"name\":\"AuditorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dust\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum UniversalEncryptedERC.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NativeDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NativeWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[7]\",\"name\":\"auditorPCT\",\"type\":\"uint256[7]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"auditorAddress\",\"type\":\"address\"}],\"name\":\"PrivateBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[7]\",\"name\":\"auditorPCT\",\"type\":\"uint256[7]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"auditorAddress\",\"type\":\"address\"}],\"name\":\"PrivateMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[7]\",\"name\":\"auditorPCT\",\"type\":\"uint256[7]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"auditorAddress\",\"type\":\"address\"}],\"name\":\"PrivateTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[7]\",\"name\":\"auditorPCT\",\"type\":\"uint256[7]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"auditorAddress\",\"type\":\"address\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintNullifier\",\"type\":\"uint256\"}],\"name\":\"alreadyMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auditor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auditorPublicKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c2\",\"type\":\"tuple\"}],\"internalType\":\"struct EGCT\",\"name\":\"eGCT\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[7]\",\"name\":\"pct\",\"type\":\"uint256[7]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct AmountPCT[]\",\"name\":\"amountPCTs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[7]\",\"name\":\"balancePCT\",\"type\":\"uint256[7]\"},{\"internalType\":\"uint256\",\"name\":\"transactionIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOfStandalone\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c2\",\"type\":\"tuple\"}],\"internalType\":\"struct EGCT\",\"name\":\"eGCT\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[7]\",\"name\":\"pct\",\"type\":\"uint256[7]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct AmountPCT[]\",\"name\":\"amountPCTs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[7]\",\"name\":\"balancePCT\",\"type\":\"uint256[7]\"},{\"internalType\":\"uint256\",\"name\":\"transactionIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"balances\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c2\",\"type\":\"tuple\"}],\"internalType\":\"struct EGCT\",\"name\":\"eGCT\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transactionIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"blacklistedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnVerifier\",\"outputs\":[{\"internalType\":\"contract IBurnVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[7]\",\"name\":\"amountPCT\",\"type\":\"uint256[7]\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getBalanceFromTokenAddress\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c2\",\"type\":\"tuple\"}],\"internalType\":\"struct EGCT\",\"name\":\"eGCT\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[7]\",\"name\":\"pct\",\"type\":\"uint256[7]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct AmountPCT[]\",\"name\":\"amountPCTs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[7]\",\"name\":\"balancePCT\",\"type\":\"uint256[7]\"},{\"internalType\":\"uint256\",\"name\":\"transactionIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNativeBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAuditorKeySet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConverter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintVerifier\",\"outputs\":[{\"internalType\":\"contract IMintVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nativeBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ProofPoints\",\"name\":\"proofPoints\",\"type\":\"tuple\"},{\"internalType\":\"uint256[19]\",\"name\":\"publicSignals\",\"type\":\"uint256[19]\"}],\"internalType\":\"struct BurnProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[7]\",\"name\":\"balancePCT\",\"type\":\"uint256[7]\"}],\"name\":\"privateBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ProofPoints\",\"name\":\"proofPoints\",\"type\":\"tuple\"},{\"internalType\":\"uint256[24]\",\"name\":\"publicSignals\",\"type\":\"uint256[24]\"}],\"internalType\":\"struct MintProof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"name\":\"privateMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"enum UniversalEncryptedERC.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"registerTokenType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"internalType\":\"contract IRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setAuditorPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"blacklisted\",\"type\":\"bool\"}],\"name\":\"setTokenBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"tokenIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenTypes\",\"outputs\":[{\"internalType\":\"enum UniversalEncryptedERC.TokenType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ProofPoints\",\"name\":\"proofPoints\",\"type\":\"tuple\"},{\"internalType\":\"uint256[32]\",\"name\":\"publicSignals\",\"type\":\"uint256[32]\"}],\"internalType\":\"struct TransferProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[7]\",\"name\":\"balancePCT\",\"type\":\"uint256[7]\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferVerifier\",\"outputs\":[{\"internalType\":\"contract ITransferVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ProofPoints\",\"name\":\"proofPoints\",\"type\":\"tuple\"},{\"internalType\":\"uint256[16]\",\"name\":\"publicSignals\",\"type\":\"uint256[16]\"}],\"internalType\":\"struct WithdrawProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[7]\",\"name\":\"balancePCT\",\"type\":\"uint256[7]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawVerifier\",\"outputs\":[{\"internalType\":\"contract IWithdrawVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract implements Encrypted ERC operations using zero-knowledge proofs with support for:      - ERC20 tokens      - Native tokens (ETH, AVAX, etc.)      - Multi-chain deployment      - Universal token standard Key features: - Encrypted ERC has 2 modes:   - Standalone Mode: Act like a standalone ERC20 token (mint, burn, transfer)   - Converter Mode: Wraps existing ERC20 tokens and encrypted ERC20 tokens (deposit, withdraw, transfer) - Universal Token Support: Handles both ERC20 and native tokens - Multi-chain Support: Deployable on any EVM chain - Auditor Manager: Manages auditor's public key - Token Tracker: Manages ERC20 token registration for deposit and withdrawal - Encrypted User Balances: Manages encrypted balances for users in encrypted manner The contract uses three main components: 1. TokenTracker: Manages token registration and tracking 2. EncryptedUserBalances: Handles encrypted balance storage and updates 3. AuditorManager: Manages auditor-related functionality\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"AuditorChanged(address,address)\":{\"params\":{\"newAuditor\":\"The new auditor's address\",\"oldAuditor\":\"The previous auditor's address\"}},\"Deposit(address,uint256,uint256,uint256,uint8)\":{\"details\":\"This event is emitted when a user deposits tokens into the contract\",\"params\":{\"amount\":\"Amount of tokens deposited\",\"dust\":\"Amount of dust (remainder) from the deposit\",\"tokenId\":\"ID of the token being deposited\",\"tokenType\":\"Type of token being deposited\",\"user\":\"Address of the user making the deposit\"}},\"NativeDeposit(address,uint256,uint256)\":{\"details\":\"This event is emitted when a user deposits native tokens into the contract\",\"params\":{\"amount\":\"Amount of native tokens deposited\",\"tokenId\":\"ID of the token being deposited\",\"user\":\"Address of the user making the deposit\"}},\"NativeWithdraw(address,uint256,uint256)\":{\"details\":\"This event is emitted when a user withdraws native tokens from the contract\",\"params\":{\"amount\":\"Amount of native tokens withdrawn\",\"tokenId\":\"ID of the token being withdrawn\",\"user\":\"Address of the user making the withdrawal\"}},\"PrivateBurn(address,uint256[7],address)\":{\"details\":\"This event is emitted when tokens are privately burned by a user\",\"params\":{\"auditorAddress\":\"Address of the auditor\",\"auditorPCT\":\"Auditor PCT values for compliance tracking\",\"user\":\"Address of the user burning the tokens\"}},\"PrivateMint(address,uint256[7],address)\":{\"details\":\"This event is emitted when tokens are privately minted to a user\",\"params\":{\"auditorAddress\":\"Address of the auditor\",\"auditorPCT\":\"Auditor PCT values for compliance tracking\",\"user\":\"Address of the user receiving the minted tokens\"}},\"PrivateTransfer(address,address,uint256[7],address)\":{\"details\":\"This event is emitted when tokens are privately transferred between users\",\"params\":{\"auditorAddress\":\"Address of the auditor\",\"auditorPCT\":\"Auditor PCT values for compliance tracking\",\"from\":\"Address of the sender\",\"to\":\"Address of the receiver\"}},\"Withdraw(address,uint256,uint256,uint256[7],address)\":{\"details\":\"This event is emitted when a user withdraws tokens from the contract\",\"params\":{\"amount\":\"Amount of tokens withdrawn\",\"auditorAddress\":\"Address of the auditor\",\"auditorPCT\":\"Auditor PCT values for compliance tracking\",\"tokenId\":\"ID of the token being withdrawn\",\"user\":\"Address of the user making the withdrawal\"}}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"balanceOf(address,uint256)\":{\"params\":{\"tokenId\":\"The ID of the token\",\"user\":\"The address of the user\"},\"returns\":{\"amountPCTs\":\"Array of amount PCT\",\"balancePCT\":\"The current balance PCT\",\"eGCT\":\"The ElGamal ciphertext representing the encrypted balance\",\"nonce\":\"The current nonce used for balance validation\",\"transactionIndex\":\"The current transaction index\"}},\"balanceOfStandalone(address)\":{\"details\":\"Since in standalone mode, the tokenId is always 0\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"amountPCTs\":\"Array of amount PCT\",\"balancePCT\":\"The current balance PCT\",\"eGCT\":\"The ElGamal ciphertext representing the encrypted balance\",\"nonce\":\"The current nonce used for balance validation\",\"transactionIndex\":\"The current transaction index\"}},\"constructor\":{\"details\":\"This constructor sets up the contract with necessary verifiers, registrar, and token metadata.      It also determines whether the contract will function as a converter or standalone token.\",\"params\":{\"params\":\"The initialization parameters containing contract addresses and token metadata\"}},\"deposit(uint256,address,uint256[7])\":{\"details\":\"This function:      1. Validates the user is registered      2. Determines token type and handles accordingly      3. Converts the tokens to encrypted tokens      4. Adds the encrypted amount to the user's balance      5. Returns any dust (remainder) to the user Requirements: - Auditor must be set - Contract must be in converter mode - Token must not be blacklisted (for ERC20 tokens) - User must be registered\",\"params\":{\"amount\":\"Amount of tokens to deposit\",\"amountPCT\":\"Amount PCT for the deposit\",\"tokenAddress\":\"Address of the token to deposit (address(0) for native tokens)\"}},\"getBalanceFromTokenAddress(address,address)\":{\"details\":\"This is a convenience function that looks up the token ID and calls balanceOf\",\"params\":{\"tokenAddress\":\"Address of the token\",\"user\":\"Address of the user\"},\"returns\":{\"amountPCTs\":\"Array of amount PCTs for transaction history\",\"balancePCT\":\"The current balance PCT\",\"eGCT\":\"The ElGamal ciphertext representing the encrypted balance\",\"nonce\":\"The current nonce used for balance validation\",\"transactionIndex\":\"The current transaction index\"}},\"getNativeBalance(address)\":{\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"balance The native token balance\"}},\"getTokens()\":{\"details\":\"Used for enumeration and listing all supported tokens\",\"returns\":{\"_0\":\"Array of token addresses\"}},\"isAuditorKeySet()\":{\"details\":\"This function is used to verify if the contract is ready for      operations that require auditor validation\",\"returns\":{\"_0\":\"bool True if the auditor's public key is set and valid\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"privateBurn(((uint256[2],uint256[2][2],uint256[2]),uint256[19]),uint256[7])\":{\"details\":\"This function:      1. Validates the sender is registered      2. Verifies the sender's public key matches the proof      3. Verifies the burn address's public key matches the proof      4. Verifies the auditor's public key matches the proof      5. Verifies the zero-knowledge proof      6. Transfers the encrypted amount to the burn address Requirements: - Auditor must be set - Contract must be in standalone mode - Sender must be registered - Proof must be valid\",\"params\":{\"balancePCT\":\"The balance PCT for the sender after the burn\",\"proof\":\"The transfer proof proving the validity of the burn operation\"}},\"privateMint(address,((uint256[2],uint256[2][2],uint256[2]),uint256[24]))\":{\"details\":\"This function:      1. Validates the chain ID and user registration      2. Verifies the user's public key matches the proof      3. Verifies the auditor's public key matches the proof      4. Checks the mint nullifier hasn't been used      5. Verifies the zero-knowledge proof      6. Updates the user's encrypted balance Requirements: - Caller must be the contract owner - Auditor must be set - Contract must be in standalone mode - User must be registered - Proof must be valid\",\"params\":{\"proof\":\"The zero-knowledge proof proving the validity of the mint operation\",\"user\":\"The address of the user to mint tokens to\"}},\"registerTokenType(address,uint8)\":{\"details\":\"Only the owner can register new token types\",\"params\":{\"tokenAddress\":\"Address of the token to register\",\"tokenType\":\"Type of the token (ERC20, NATIVE, etc.)\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAuditorPublicKey(address)\":{\"details\":\"This function:      1. Verifies the user is registered      2. Retrieves the user's public key      3. Updates the auditor's information Requirements: - Caller must be the contract owner - User must be registered\",\"params\":{\"user\":\"Address of the user to set as auditor\"}},\"setTokenBlacklist(address,bool)\":{\"details\":\"Only the owner can call this function\",\"params\":{\"blacklisted\":\"True to blacklist, false to unblacklist\",\"token\":\"Address of the token to blacklist/unblacklist\"}},\"transfer(address,uint256,((uint256[2],uint256[2][2],uint256[2]),uint256[32]),uint256[7])\":{\"details\":\"This function:      1. Validates both sender and receiver are registered      2. Verifies both public keys match the proof      3. Verifies the auditor's public key matches the proof      4. Verifies the zero-knowledge proof      5. Updates both users' encrypted balances Requirements: - Auditor must be set - Both sender and receiver must be registered - Proof must be valid\",\"params\":{\"balancePCT\":\"The balance PCT for the sender after the transfer\",\"proof\":\"The transfer proof proving the validity of the transfer\",\"to\":\"Address of the receiver\",\"tokenId\":\"ID of the token to transfer\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"},\"withdraw(uint256,((uint256[2],uint256[2][2],uint256[2]),uint256[16]),uint256[7])\":{\"details\":\"This function:      1. Validates the user is registered      2. Verifies the user's public key matches the proof      3. Verifies the auditor's public key matches the proof      4. Verifies the zero-knowledge proof      5. Subtracts the encrypted amount from the user's balance      6. Converts the tokens to regular tokens Requirements: - Auditor must be set - Contract must be in converter mode - User must be registered - Proof must be valid\",\"params\":{\"balancePCT\":\"The balance PCT for the user after the withdrawal\",\"proof\":\"The withdraw proof proving the validity of the withdrawal\",\"tokenId\":\"ID of the token to withdraw\"}}},\"title\":\"UniversalEncryptedERC\",\"version\":1},\"userdoc\":{\"events\":{\"AuditorChanged(address,address)\":{\"notice\":\"Emitted when the auditor's information is updated\"},\"Deposit(address,uint256,uint256,uint256,uint8)\":{\"notice\":\"Emitted when a deposit operation occurs\"},\"NativeDeposit(address,uint256,uint256)\":{\"notice\":\"Emitted when a native token deposit occurs\"},\"NativeWithdraw(address,uint256,uint256)\":{\"notice\":\"Emitted when a native token withdrawal occurs\"},\"PrivateBurn(address,uint256[7],address)\":{\"notice\":\"Emitted when a private burn operation occurs\"},\"PrivateMint(address,uint256[7],address)\":{\"notice\":\"Emitted when a private mint operation occurs\"},\"PrivateTransfer(address,address,uint256[7],address)\":{\"notice\":\"Emitted when a private transfer operation occurs\"},\"Withdraw(address,uint256,uint256,uint256[7],address)\":{\"notice\":\"Emitted when a withdrawal operation occurs\"}},\"kind\":\"user\",\"methods\":{\"alreadyMinted(uint256)\":{\"notice\":\"Mapping to track used mint nullifiers to prevent double-minting\"},\"auditor()\":{\"notice\":\"The address of the current auditor\"},\"auditorPublicKey()\":{\"notice\":\"The public key of the current auditor\"},\"balanceOf(address,uint256)\":{\"notice\":\"Returns the encrypted balance for a user's specified token\"},\"balanceOfStandalone(address)\":{\"notice\":\"Returns the encrypted balance for a user's standalone token\"},\"balances(address,uint256)\":{\"notice\":\"Mapping of user addresses to their encrypted balances for each token\"},\"blacklistedTokens(address)\":{\"notice\":\"Mapping to track blacklisted tokens\"},\"constructor\":{\"notice\":\"Initializes the UniversalEncryptedERC contract with the given parameters\"},\"deposit(uint256,address,uint256[7])\":{\"notice\":\"Deposits tokens into the contract (supports both ERC20 and native tokens)\"},\"getBalanceFromTokenAddress(address,address)\":{\"notice\":\"Gets the encrypted balance for a token address\"},\"getNativeBalance(address)\":{\"notice\":\"Gets the native token balance for a user\"},\"getTokens()\":{\"notice\":\"Returns an array of all registered token addresses\"},\"isAuditorKeySet()\":{\"notice\":\"Checks if the auditor's public key is properly set\"},\"isConverter()\":{\"notice\":\"Indicates if the contract is operating in converter mode\"},\"mintVerifier()\":{\"notice\":\"Verifier contracts for each operation\"},\"name()\":{\"notice\":\"Token metadata\"},\"nativeBalances(address)\":{\"notice\":\"Mapping to track native token balances\"},\"nextTokenId()\":{\"notice\":\"The next available token ID\"},\"privateBurn(((uint256[2],uint256[2][2],uint256[2]),uint256[19]),uint256[7])\":{\"notice\":\"Performs a private burn operation\"},\"privateMint(address,((uint256[2],uint256[2][2],uint256[2]),uint256[24]))\":{\"notice\":\"Performs a private mint operation for a registered user\"},\"registerTokenType(address,uint8)\":{\"notice\":\"Registers a new token type\"},\"registrar()\":{\"notice\":\"Address of the registrar contract that manages user registration\"},\"setAuditorPublicKey(address)\":{\"notice\":\"Sets the auditor's public key for a registered user\"},\"setTokenBlacklist(address,bool)\":{\"notice\":\"Sets the blacklist status of a token\"},\"tokenAddresses(uint256)\":{\"notice\":\"Mapping from token ID to token address\"},\"tokenIds(address)\":{\"notice\":\"Mapping from token address to token ID\"},\"tokenTypes(address)\":{\"notice\":\"Mapping to track supported token types\"},\"tokens(uint256)\":{\"notice\":\"Array of all registered token addresses\"},\"transfer(address,uint256,((uint256[2],uint256[2][2],uint256[2]),uint256[32]),uint256[7])\":{\"notice\":\"Performs a private transfer between two users\"},\"withdraw(uint256,((uint256[2],uint256[2][2],uint256[2]),uint256[16]),uint256[7])\":{\"notice\":\"Withdraws encrypted tokens as regular tokens\"}},\"notice\":\"A universal privacy-preserving ERC20 token implementation that uses zero-knowledge proofs for managing balances in encrypted manner.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/UniversalEncryptedERC.sol\":\"UniversalEncryptedERC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/core/AuditorManager.sol\":{\"keccak256\":\"0x8ef789a523bc20720c885900e90775324de9f6c47ab575d0769807d2fed0b78f\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://3a8aaafcee8093f70f6d4501ed0efd5ff58388541049ac2760589ccf24c55ac6\",\"dweb:/ipfs/QmeWNZ83GhZQei2R6dNRZWxjAWTVKQA6LRrwbQSa91CGAB\"]},\"contracts/core/EncryptedUserBalances.sol\":{\"keccak256\":\"0xa0b353a7d23b88bf260cf412e05177c7af018ec01f0e7d97ac6940f854a40fea\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://9d9ab0dbf41de6dc7f14b25b95ee7c871300a1fee6adf4423f08bc656f982acf\",\"dweb:/ipfs/QmcVChKwopVNTtadwCrFWLEqj93F2ErMYabpKbEz3ugJVg\"]},\"contracts/core/TokenTracker.sol\":{\"keccak256\":\"0x52dfd22dd4fe4786a845e606862a3d3e2159470fc5ac45793ff2de89d4bd23de\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://fedb4414adba120b1ebd77aae1d27ff0b81ac80d3868f3bc3d008ae0d06a386a\",\"dweb:/ipfs/QmdzhK1Jxx5cCm3ECc5fad4c1db5KburraER85ZbqYuN5g\"]},\"contracts/core/UniversalEncryptedERC.sol\":{\"keccak256\":\"0x2bbd7bc13529613a7534b798ecdd4f3528030ee75cfcf9730b96ca9249ab9e0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d07b2047a29fcb1f7d7507606e3c4a9bc9db39ea7cd6454bc99f576531df61b3\",\"dweb:/ipfs/QmasS7vUxTyHqxraVK5iU9WZ4Papczt8y2T9RhTAaMbbkr\"]},\"contracts/errors/Errors.sol\":{\"keccak256\":\"0x927b7cc1dd72c518b300006a54c1803151c039a1529da8eedf59650059a21774\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://fe443cd55953c874054a3f0875b1eef9e3856a0c5e9905def44c5ea975cf1f91\",\"dweb:/ipfs/QmbVsF2ChKaxu4rPctxt3u6UQHCSg47uK7e7RmAHnRqxi6\"]},\"contracts/interfaces/IRegistrar.sol\":{\"keccak256\":\"0x3c8bfe2a34d18592f27e4d9cc43c4699af3c9c2432d601b2d9be7a6bc8d002e2\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://8fcd6764b3aec5f0c6a735fc252727cb71dc690640ef770c5d9b64695ddd749d\",\"dweb:/ipfs/QmeMxeHLtP7uR1mYJRzQxGhNswJwy3tWZmVqEe24zyiXE6\"]},\"contracts/interfaces/verifiers/IBurnVerifier.sol\":{\"keccak256\":\"0xd33a6eb2f1acc072b5529bcb18b92c67e947dc6529b85f33e20dcb88f1f2cb3a\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://f11ed8cf4f0cc8bea575a297555da294b55d7c7019545bb13f94cfbbd4cd0840\",\"dweb:/ipfs/Qmf81apmRpcGiBeoHX7zDNMUPnZKJubZGeRBbZPWCcdPsj\"]},\"contracts/interfaces/verifiers/IMintVerifier.sol\":{\"keccak256\":\"0xe512352c017b47a032664dc63be71a5c4f628b4cc256a8977800314a7b82cc02\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://f299c97808cd8078d1e125aa0f746dffd525f5bf4d70ddc10abdac5ad008f4bd\",\"dweb:/ipfs/QmevHDrH8a9brefZj6wzeCjU36wy5DDnxKmgzQXTA9jJzF\"]},\"contracts/interfaces/verifiers/ITransferVerifier.sol\":{\"keccak256\":\"0xe4b07e8de81e6ddec0161d8cb09385b1699ca6a29be0fd4957b6a25e74b5e7f8\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://bdbed8dd25f5776a337f44378f095b5a50532c58519fa4dcae6a59790db1aa9e\",\"dweb:/ipfs/QmVyXjFrmLMvDqzD9UCtfGCVoGp7X6qzjopWbA4qV6xyUt\"]},\"contracts/interfaces/verifiers/IWithdrawVerifier.sol\":{\"keccak256\":\"0x67b17d31c2a01a56c981c18f9d228383f26d745a8ca0991d270bc000973522f8\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://82590511b3ddba82f94ee6f7ddbdd510d386b502545ebb16164e98e98aef10d4\",\"dweb:/ipfs/QmdqVWS2MaKDU75hRuJBctAeXchiDhnXikeY6GSi8F99GN\"]},\"contracts/libraries/BabyJubJub.sol\":{\"keccak256\":\"0xe657ab2a822a54ed0150af4c68e5b753ec7df27dc8470d607e6ae3b27de944a7\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://7e0802650f9ceeee43ac48377e5ff92dd5c698f6b4bfe75e23fc9061d4104d10\",\"dweb:/ipfs/QmcL8Pwd1HXc35kBpfKjABw6zAFdB46cvgVM4h4Jam92qK\"]},\"contracts/types/Types.sol\":{\"keccak256\":\"0x2327a499d5e63c8dad204c0d13b17cb8d3f913578a9a889b640be7276f42384d\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://c74b01811db798e34e30d6f65e072a6e5acfe0c28e9f98404be8a30ac43782b4\",\"dweb:/ipfs/QmdfTgJhnLE2frgUHoRTovG1CZWNZWmmzR2fnwvzEUVvw3\"]}},\"version\":1}"}},"contracts/interfaces/IRegistrar.sol":{"IRegistrar":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserPublicKey","outputs":[{"internalType":"uint256[2]","name":"publicKey","type":"uint256[2]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isUserRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getUserPublicKey(address)":"11231fe0","isUserRegistered(address)":"163f7522"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserPublicKey\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"publicKey\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getUserPublicKey(address)\":{\"details\":\"Returns the public key of a user.\",\"params\":{\"user\":\"Address of the user.\"},\"returns\":{\"publicKey\":\"The public key of the user as an array of two uint256 values.\"}},\"isUserRegistered(address)\":{\"details\":\"Returns true if the user is registered.\",\"params\":{\"user\":\"Address of the user.\"},\"returns\":{\"_0\":\"isRegistered True if the user is registered, false otherwise.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRegistrar.sol\":\"IRegistrar\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IRegistrar.sol\":{\"keccak256\":\"0x3c8bfe2a34d18592f27e4d9cc43c4699af3c9c2432d601b2d9be7a6bc8d002e2\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://8fcd6764b3aec5f0c6a735fc252727cb71dc690640ef770c5d9b64695ddd749d\",\"dweb:/ipfs/QmeMxeHLtP7uR1mYJRzQxGhNswJwy3tWZmVqEe24zyiXE6\"]}},\"version\":1}"}},"contracts/interfaces/verifiers/IBurnVerifier.sol":{"IBurnVerifier":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"pointA_","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"pointB_","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"pointC_","type":"uint256[2]"},{"internalType":"uint256[19]","name":"publicSignals_","type":"uint256[19]"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"verified_","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[19])":"f3f22e72"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"pointA_\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"pointB_\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"pointC_\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[19]\",\"name\":\"publicSignals_\",\"type\":\"uint256[19]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/verifiers/IBurnVerifier.sol\":\"IBurnVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/verifiers/IBurnVerifier.sol\":{\"keccak256\":\"0xd33a6eb2f1acc072b5529bcb18b92c67e947dc6529b85f33e20dcb88f1f2cb3a\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://f11ed8cf4f0cc8bea575a297555da294b55d7c7019545bb13f94cfbbd4cd0840\",\"dweb:/ipfs/Qmf81apmRpcGiBeoHX7zDNMUPnZKJubZGeRBbZPWCcdPsj\"]}},\"version\":1}"}},"contracts/interfaces/verifiers/IMintVerifier.sol":{"IMintVerifier":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"pointA_","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"pointB_","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"pointC_","type":"uint256[2]"},{"internalType":"uint256[24]","name":"publicSignals_","type":"uint256[24]"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"verified_","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[24])":"4d01c5a0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"pointA_\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"pointB_\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"pointC_\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[24]\",\"name\":\"publicSignals_\",\"type\":\"uint256[24]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/verifiers/IMintVerifier.sol\":\"IMintVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/verifiers/IMintVerifier.sol\":{\"keccak256\":\"0xe512352c017b47a032664dc63be71a5c4f628b4cc256a8977800314a7b82cc02\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://f299c97808cd8078d1e125aa0f746dffd525f5bf4d70ddc10abdac5ad008f4bd\",\"dweb:/ipfs/QmevHDrH8a9brefZj6wzeCjU36wy5DDnxKmgzQXTA9jJzF\"]}},\"version\":1}"}},"contracts/interfaces/verifiers/IRegistrationVerifier.sol":{"IRegistrationVerifier":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"pointA_","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"pointB_","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"pointC_","type":"uint256[2]"},{"internalType":"uint256[5]","name":"publicSignals_","type":"uint256[5]"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"verified_","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[5])":"34baeab9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"pointA_\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"pointB_\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"pointC_\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[5]\",\"name\":\"publicSignals_\",\"type\":\"uint256[5]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/verifiers/IRegistrationVerifier.sol\":\"IRegistrationVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/verifiers/IRegistrationVerifier.sol\":{\"keccak256\":\"0x72d8be956ae7e0ceae22812bc6acb9ca8bf382a72f6513402dfb5a1f26a21a88\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://ca63f4a97578afc54012327aa4ac4508836d39a53cbeea19559423c86b6b714f\",\"dweb:/ipfs/QmTs7qwwpMdAoYz1AAZeufqE14P95s4A7WbYzxCGhnSkVU\"]}},\"version\":1}"}},"contracts/interfaces/verifiers/ITransferVerifier.sol":{"ITransferVerifier":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"pointA_","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"pointB_","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"pointC_","type":"uint256[2]"},{"internalType":"uint256[32]","name":"publicSignals_","type":"uint256[32]"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"verified_","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[32])":"3cc08b24"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"pointA_\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"pointB_\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"pointC_\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[32]\",\"name\":\"publicSignals_\",\"type\":\"uint256[32]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/verifiers/ITransferVerifier.sol\":\"ITransferVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/verifiers/ITransferVerifier.sol\":{\"keccak256\":\"0xe4b07e8de81e6ddec0161d8cb09385b1699ca6a29be0fd4957b6a25e74b5e7f8\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://bdbed8dd25f5776a337f44378f095b5a50532c58519fa4dcae6a59790db1aa9e\",\"dweb:/ipfs/QmVyXjFrmLMvDqzD9UCtfGCVoGp7X6qzjopWbA4qV6xyUt\"]}},\"version\":1}"}},"contracts/interfaces/verifiers/IWithdrawVerifier.sol":{"IWithdrawVerifier":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"pointA_","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"pointB_","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"pointC_","type":"uint256[2]"},{"internalType":"uint256[16]","name":"publicSignals_","type":"uint256[16]"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"verified_","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[16])":"c82febf5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"pointA_\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"pointB_\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"pointC_\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[16]\",\"name\":\"publicSignals_\",\"type\":\"uint256[16]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/verifiers/IWithdrawVerifier.sol\":\"IWithdrawVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/verifiers/IWithdrawVerifier.sol\":{\"keccak256\":\"0x67b17d31c2a01a56c981c18f9d228383f26d745a8ca0991d270bc000973522f8\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://82590511b3ddba82f94ee6f7ddbdd510d386b502545ebb16164e98e98aef10d4\",\"dweb:/ipfs/QmdqVWS2MaKDU75hRuJBctAeXchiDhnXikeY6GSi8F99GN\"]}},\"version\":1}"}},"contracts/libraries/BabyJubJub.sol":{"BabyJubJub":{"abi":[{"inputs":[],"name":"Q","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"_point1","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"_point2","type":"tuple"}],"name":"_add","outputs":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"_point1","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"_point2","type":"tuple"}],"name":"_sub","outputs":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"base8","outputs":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"_publicKey","type":"tuple"},{"internalType":"uint256","name":"_msg","type":"uint256"}],"name":"elGamalEncryption","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c1","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c2","type":"tuple"}],"internalType":"struct EGCT","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"_publicKey","type":"tuple"},{"internalType":"uint256","name":"_msg","type":"uint256"}],"name":"encrypt","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c1","type":"tuple"},{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"c2","type":"tuple"}],"internalType":"struct EGCT","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"_point","type":"tuple"},{"internalType":"uint256","name":"_scalar","type":"uint256"}],"name":"scalarMultiply","outputs":[{"components":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"internalType":"struct Point","name":"","type":"tuple"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460195761065f908161001f823930815050f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806304068d3a1461008757806334603b1a146100825780634fa78ada1461007d5780637a634a72146100785780637bb10bcb14610073578063e493ef8c1461006e5763ef69ca3a1461006957600080fd5b610298565b610274565b61024b565b610235565b610190565b61016c565b60603660031901126100e9576100e56100b46100a236610124565b604435906100ae6102d1565b50610309565b6040519182918281518051825260209081015181830152918201518051604083015290910151606082015260800190565b0390f35b600080fd5b604051906040820182811067ffffffffffffffff82111761010e57604052565b634e487b7160e01b600052604160045260246000fd5b60409060031901126100e9576101386100ee565b9060043582526024356020830152565b60409060431901126100e95761015c6100ee565b9060443582526064356020830152565b60603660031901126100e9576100e56100b461018736610124565b60443590610309565b60803660031901126100e9576101a536610124565b6101ae36610148565b6101b66102bb565b506101bf6102bb565b50805160008051602061060a8339815191520360008051602061060a833981519152811161021f5760409260206102079301516101fa6100ee565b92835260208301526103ab565b61021d8251809260208091805184520151910152565bf35b634e487b7160e01b600052601160045260246000fd5b60003660031901126100e957604061020761034e565b60803660031901126100e957604061020761026536610124565b61026e36610148565b906103ab565b60003660031901126100e957602060405160008051602061060a8339815191528152f35b60603660031901126100e95760406102076102b236610124565b604435906104aa565b6102c36100ee565b906000825260006020830152565b6102d96100ee565b906102e26100ee565b600081526000602082015282526102f76100ee565b60008152600060208201526020830152565b9061033b906103166102d1565b5061026e61032261034e565b9161033561032f84610442565b95610442565b926104aa565b6103436100ee565b918252602082015290565b6103566102bb565b5061035f6100ee565b7f0bb77a6ad63e739b4eacb2e09d6277c12ab8d8010534e0b62893f3f6bb95705181527f25797203f7a0b24925572e1cd16bf9edfce0051fb9e133774b3c257a872d7d8b602082015290565b9060008051602061060a83398151915261042d6104288261041281956103cf6102bb565b5082808951835190099687928160208c0191818351818080602086019384519009809a09620292f8099e5190519009925190519009900896620292fc0990610568565b9361042082886001086105a2565b90099461052d565b6105a2565b906104366100ee565b93845209602082015290565b61044a6102bb565b50600180916104576100ee565b6000815260016020820152925b61046d57505090565b60018216610494575b610489906104826102bb565b50806103ab565b9060011c9081610464565b916104a283610489926103ab565b929050610476565b907f060c89ce5c263405370a08b6d0302b0bab3eedb83920ee0a677297dc392126f1906104d56102bb565b500680916104e16100ee565b6000815260016020820152925b6104f757505090565b60018216610517575b61050c906104826102bb565b9060011c90816104ee565b916105258361050c926103ab565b929050610500565b60008051602061060a8339815191520360008051602061060a833981519152811161021f5760008051602061060a8339815191529060010890565b9060008051602061060a8339815191520360008051602061060a833981519152811161021f5760008051602061060a833981519152910890565b60405190602082526020808301526020604083015260608201527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff608082015260008051602061060a83398151915260a082015260208160c08160055afa156100e957519056fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122097f3bcbc44bb33568bf37d879ef06ce0c33940a798642ccf725f88db92dddf3264736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x19 JUMPI PUSH2 0x65F SWAP1 DUP2 PUSH2 0x1F DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4068D3A EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x34603B1A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4FA78ADA EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x7A634A72 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x7BB10BCB EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xE493EF8C EQ PUSH2 0x6E JUMPI PUSH4 0xEF69CA3A EQ PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH2 0x235 JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST PUSH2 0x16C JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0xE5 PUSH2 0xB4 PUSH2 0xA2 CALLDATASIZE PUSH2 0x124 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0xAE PUSH2 0x2D1 JUMP JUMPDEST POP PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP2 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD DUP2 DUP4 ADD MSTORE SWAP2 DUP3 ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP4 ADD MSTORE SWAP1 SWAP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x10E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x138 PUSH2 0xEE JUMP JUMPDEST SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x43 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x15C PUSH2 0xEE JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0xE5 PUSH2 0xB4 PUSH2 0x187 CALLDATASIZE PUSH2 0x124 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x1A5 CALLDATASIZE PUSH2 0x124 JUMP JUMPDEST PUSH2 0x1AE CALLDATASIZE PUSH2 0x148 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2BB JUMP JUMPDEST POP PUSH2 0x1BF PUSH2 0x2BB JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 GT PUSH2 0x21F JUMPI PUSH1 0x40 SWAP3 PUSH1 0x20 PUSH2 0x207 SWAP4 ADD MLOAD PUSH2 0x1FA PUSH2 0xEE JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x21D DUP3 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP1 SWAP2 DUP1 MLOAD DUP5 MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x40 PUSH2 0x207 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x40 PUSH2 0x207 PUSH2 0x265 CALLDATASIZE PUSH2 0x124 JUMP JUMPDEST PUSH2 0x26E CALLDATASIZE PUSH2 0x148 JUMP JUMPDEST SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x40 PUSH2 0x207 PUSH2 0x2B2 CALLDATASIZE PUSH2 0x124 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x2C3 PUSH2 0xEE JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0xEE JUMP JUMPDEST SWAP1 PUSH2 0x2E2 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MSTORE PUSH2 0x2F7 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x33B SWAP1 PUSH2 0x316 PUSH2 0x2D1 JUMP JUMPDEST POP PUSH2 0x26E PUSH2 0x322 PUSH2 0x34E JUMP JUMPDEST SWAP2 PUSH2 0x335 PUSH2 0x32F DUP5 PUSH2 0x442 JUMP JUMPDEST SWAP6 PUSH2 0x442 JUMP JUMPDEST SWAP3 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x343 PUSH2 0xEE JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x356 PUSH2 0x2BB JUMP JUMPDEST POP PUSH2 0x35F PUSH2 0xEE JUMP JUMPDEST PUSH32 0xBB77A6AD63E739B4EACB2E09D6277C12AB8D8010534E0B62893F3F6BB957051 DUP2 MSTORE PUSH32 0x25797203F7A0B24925572E1CD16BF9EDFCE0051FB9E133774B3C257A872D7D8B PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x42D PUSH2 0x428 DUP3 PUSH2 0x412 DUP2 SWAP6 PUSH2 0x3CF PUSH2 0x2BB JUMP JUMPDEST POP DUP3 DUP1 DUP10 MLOAD DUP4 MLOAD SWAP1 MULMOD SWAP7 DUP8 SWAP3 DUP2 PUSH1 0x20 DUP13 ADD SWAP2 DUP2 DUP4 MLOAD DUP2 DUP1 DUP1 PUSH1 0x20 DUP7 ADD SWAP4 DUP5 MLOAD SWAP1 MULMOD DUP1 SWAP11 MULMOD PUSH3 0x292F8 MULMOD SWAP15 MLOAD SWAP1 MLOAD SWAP1 MULMOD SWAP3 MLOAD SWAP1 MLOAD SWAP1 MULMOD SWAP1 ADDMOD SWAP7 PUSH3 0x292FC MULMOD SWAP1 PUSH2 0x568 JUMP JUMPDEST SWAP4 PUSH2 0x420 DUP3 DUP9 PUSH1 0x1 ADDMOD PUSH2 0x5A2 JUMP JUMPDEST SWAP1 MULMOD SWAP5 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST SWAP1 PUSH2 0x436 PUSH2 0xEE JUMP JUMPDEST SWAP4 DUP5 MSTORE MULMOD PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x44A PUSH2 0x2BB JUMP JUMPDEST POP PUSH1 0x1 DUP1 SWAP2 PUSH2 0x457 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE SWAP3 JUMPDEST PUSH2 0x46D JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP3 AND PUSH2 0x494 JUMPI JUMPDEST PUSH2 0x489 SWAP1 PUSH2 0x482 PUSH2 0x2BB JUMP JUMPDEST POP DUP1 PUSH2 0x3AB JUMP JUMPDEST SWAP1 PUSH1 0x1 SHR SWAP1 DUP2 PUSH2 0x464 JUMP JUMPDEST SWAP2 PUSH2 0x4A2 DUP4 PUSH2 0x489 SWAP3 PUSH2 0x3AB JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x476 JUMP JUMPDEST SWAP1 PUSH32 0x60C89CE5C263405370A08B6D0302B0BAB3EEDB83920EE0A677297DC392126F1 SWAP1 PUSH2 0x4D5 PUSH2 0x2BB JUMP JUMPDEST POP MOD DUP1 SWAP2 PUSH2 0x4E1 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE SWAP3 JUMPDEST PUSH2 0x4F7 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP3 AND PUSH2 0x517 JUMPI JUMPDEST PUSH2 0x50C SWAP1 PUSH2 0x482 PUSH2 0x2BB JUMP JUMPDEST SWAP1 PUSH1 0x1 SHR SWAP1 DUP2 PUSH2 0x4EE JUMP JUMPDEST SWAP2 PUSH2 0x525 DUP4 PUSH2 0x50C SWAP3 PUSH2 0x3AB JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x500 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 GT PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 ADDMOD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 GT PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADDMOD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593EFFFFFFF PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xC0 DUP2 PUSH1 0x5 GAS STATICCALL ISZERO PUSH2 0xE9 JUMPI MLOAD SWAP1 JUMP INVALID ADDRESS PUSH5 0x4E72E131A0 0x29 0xB8 POP GASLIMIT 0xB6 DUP2 DUP2 PC TSTORE 0x28 CALLER 0xE8 BASEFEE PUSH26 0xB9709143E1F593F0000001A264697066735822122097F3BCBC44 0xBB CALLER JUMP DUP12 RETURN PUSH30 0x879EF06CE0C33940A798642CCF725F88DB92DDDF3264736F6C634300081B STOP CALLER ","sourceMap":"263:6709:22:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_struct_Point":{"entryPoint":292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_struct_Point_1195":{"entryPoint":328,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_struct_EGCT":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Point":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_and_zero_memory_struct_struct_EGCT":{"entryPoint":721,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Point":{"entryPoint":699,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":238,"id":null,"parameterSlots":0,"returnSlots":1},"external_fun_Q":{"entryPoint":628,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_add":{"entryPoint":587,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_base8":{"entryPoint":565,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_elGamalEncryption":{"entryPoint":364,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_scalarMultiply":{"entryPoint":664,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_sub":{"entryPoint":400,"id":null,"parameterSlots":0,"returnSlots":0},"fun_add":{"entryPoint":939,"id":4764,"parameterSlots":2,"returnSlots":1},"fun_base8":{"entryPoint":846,"id":4920,"parameterSlots":0,"returnSlots":1},"fun_elGamalEncryption":{"entryPoint":777,"id":4890,"parameterSlots":2,"returnSlots":1},"fun_expmod":{"entryPoint":1442,"id":4967,"parameterSlots":1,"returnSlots":1},"fun_scalarMultiply":{"entryPoint":1194,"id":4830,"parameterSlots":2,"returnSlots":1},"fun_scalarMultiply_1203":{"entryPoint":1090,"id":4830,"parameterSlots":1,"returnSlots":1},"fun_submod":{"entryPoint":1384,"id":5006,"parameterSlots":2,"returnSlots":1},"fun_submod_1209":{"entryPoint":1325,"id":5006,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806304068d3a1461008757806334603b1a146100825780634fa78ada1461007d5780637a634a72146100785780637bb10bcb14610073578063e493ef8c1461006e5763ef69ca3a1461006957600080fd5b610298565b610274565b61024b565b610235565b610190565b61016c565b60603660031901126100e9576100e56100b46100a236610124565b604435906100ae6102d1565b50610309565b6040519182918281518051825260209081015181830152918201518051604083015290910151606082015260800190565b0390f35b600080fd5b604051906040820182811067ffffffffffffffff82111761010e57604052565b634e487b7160e01b600052604160045260246000fd5b60409060031901126100e9576101386100ee565b9060043582526024356020830152565b60409060431901126100e95761015c6100ee565b9060443582526064356020830152565b60603660031901126100e9576100e56100b461018736610124565b60443590610309565b60803660031901126100e9576101a536610124565b6101ae36610148565b6101b66102bb565b506101bf6102bb565b50805160008051602061060a8339815191520360008051602061060a833981519152811161021f5760409260206102079301516101fa6100ee565b92835260208301526103ab565b61021d8251809260208091805184520151910152565bf35b634e487b7160e01b600052601160045260246000fd5b60003660031901126100e957604061020761034e565b60803660031901126100e957604061020761026536610124565b61026e36610148565b906103ab565b60003660031901126100e957602060405160008051602061060a8339815191528152f35b60603660031901126100e95760406102076102b236610124565b604435906104aa565b6102c36100ee565b906000825260006020830152565b6102d96100ee565b906102e26100ee565b600081526000602082015282526102f76100ee565b60008152600060208201526020830152565b9061033b906103166102d1565b5061026e61032261034e565b9161033561032f84610442565b95610442565b926104aa565b6103436100ee565b918252602082015290565b6103566102bb565b5061035f6100ee565b7f0bb77a6ad63e739b4eacb2e09d6277c12ab8d8010534e0b62893f3f6bb95705181527f25797203f7a0b24925572e1cd16bf9edfce0051fb9e133774b3c257a872d7d8b602082015290565b9060008051602061060a83398151915261042d6104288261041281956103cf6102bb565b5082808951835190099687928160208c0191818351818080602086019384519009809a09620292f8099e5190519009925190519009900896620292fc0990610568565b9361042082886001086105a2565b90099461052d565b6105a2565b906104366100ee565b93845209602082015290565b61044a6102bb565b50600180916104576100ee565b6000815260016020820152925b61046d57505090565b60018216610494575b610489906104826102bb565b50806103ab565b9060011c9081610464565b916104a283610489926103ab565b929050610476565b907f060c89ce5c263405370a08b6d0302b0bab3eedb83920ee0a677297dc392126f1906104d56102bb565b500680916104e16100ee565b6000815260016020820152925b6104f757505090565b60018216610517575b61050c906104826102bb565b9060011c90816104ee565b916105258361050c926103ab565b929050610500565b60008051602061060a8339815191520360008051602061060a833981519152811161021f5760008051602061060a8339815191529060010890565b9060008051602061060a8339815191520360008051602061060a833981519152811161021f5760008051602061060a833981519152910890565b60405190602082526020808301526020604083015260608201527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff608082015260008051602061060a83398151915260a082015260208160c08160055afa156100e957519056fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122097f3bcbc44bb33568bf37d879ef06ce0c33940a798642ccf725f88db92dddf3264736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4068D3A EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x34603B1A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4FA78ADA EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x7A634A72 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x7BB10BCB EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xE493EF8C EQ PUSH2 0x6E JUMPI PUSH4 0xEF69CA3A EQ PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH2 0x235 JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST PUSH2 0x16C JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0xE5 PUSH2 0xB4 PUSH2 0xA2 CALLDATASIZE PUSH2 0x124 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0xAE PUSH2 0x2D1 JUMP JUMPDEST POP PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP2 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD DUP2 DUP4 ADD MSTORE SWAP2 DUP3 ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP4 ADD MSTORE SWAP1 SWAP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x10E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x138 PUSH2 0xEE JUMP JUMPDEST SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x43 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x15C PUSH2 0xEE JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0xE5 PUSH2 0xB4 PUSH2 0x187 CALLDATASIZE PUSH2 0x124 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x1A5 CALLDATASIZE PUSH2 0x124 JUMP JUMPDEST PUSH2 0x1AE CALLDATASIZE PUSH2 0x148 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2BB JUMP JUMPDEST POP PUSH2 0x1BF PUSH2 0x2BB JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 GT PUSH2 0x21F JUMPI PUSH1 0x40 SWAP3 PUSH1 0x20 PUSH2 0x207 SWAP4 ADD MLOAD PUSH2 0x1FA PUSH2 0xEE JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x21D DUP3 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP1 SWAP2 DUP1 MLOAD DUP5 MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x40 PUSH2 0x207 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x40 PUSH2 0x207 PUSH2 0x265 CALLDATASIZE PUSH2 0x124 JUMP JUMPDEST PUSH2 0x26E CALLDATASIZE PUSH2 0x148 JUMP JUMPDEST SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x40 PUSH2 0x207 PUSH2 0x2B2 CALLDATASIZE PUSH2 0x124 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x2C3 PUSH2 0xEE JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0xEE JUMP JUMPDEST SWAP1 PUSH2 0x2E2 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MSTORE PUSH2 0x2F7 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x33B SWAP1 PUSH2 0x316 PUSH2 0x2D1 JUMP JUMPDEST POP PUSH2 0x26E PUSH2 0x322 PUSH2 0x34E JUMP JUMPDEST SWAP2 PUSH2 0x335 PUSH2 0x32F DUP5 PUSH2 0x442 JUMP JUMPDEST SWAP6 PUSH2 0x442 JUMP JUMPDEST SWAP3 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x343 PUSH2 0xEE JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x356 PUSH2 0x2BB JUMP JUMPDEST POP PUSH2 0x35F PUSH2 0xEE JUMP JUMPDEST PUSH32 0xBB77A6AD63E739B4EACB2E09D6277C12AB8D8010534E0B62893F3F6BB957051 DUP2 MSTORE PUSH32 0x25797203F7A0B24925572E1CD16BF9EDFCE0051FB9E133774B3C257A872D7D8B PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x42D PUSH2 0x428 DUP3 PUSH2 0x412 DUP2 SWAP6 PUSH2 0x3CF PUSH2 0x2BB JUMP JUMPDEST POP DUP3 DUP1 DUP10 MLOAD DUP4 MLOAD SWAP1 MULMOD SWAP7 DUP8 SWAP3 DUP2 PUSH1 0x20 DUP13 ADD SWAP2 DUP2 DUP4 MLOAD DUP2 DUP1 DUP1 PUSH1 0x20 DUP7 ADD SWAP4 DUP5 MLOAD SWAP1 MULMOD DUP1 SWAP11 MULMOD PUSH3 0x292F8 MULMOD SWAP15 MLOAD SWAP1 MLOAD SWAP1 MULMOD SWAP3 MLOAD SWAP1 MLOAD SWAP1 MULMOD SWAP1 ADDMOD SWAP7 PUSH3 0x292FC MULMOD SWAP1 PUSH2 0x568 JUMP JUMPDEST SWAP4 PUSH2 0x420 DUP3 DUP9 PUSH1 0x1 ADDMOD PUSH2 0x5A2 JUMP JUMPDEST SWAP1 MULMOD SWAP5 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST SWAP1 PUSH2 0x436 PUSH2 0xEE JUMP JUMPDEST SWAP4 DUP5 MSTORE MULMOD PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x44A PUSH2 0x2BB JUMP JUMPDEST POP PUSH1 0x1 DUP1 SWAP2 PUSH2 0x457 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE SWAP3 JUMPDEST PUSH2 0x46D JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP3 AND PUSH2 0x494 JUMPI JUMPDEST PUSH2 0x489 SWAP1 PUSH2 0x482 PUSH2 0x2BB JUMP JUMPDEST POP DUP1 PUSH2 0x3AB JUMP JUMPDEST SWAP1 PUSH1 0x1 SHR SWAP1 DUP2 PUSH2 0x464 JUMP JUMPDEST SWAP2 PUSH2 0x4A2 DUP4 PUSH2 0x489 SWAP3 PUSH2 0x3AB JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x476 JUMP JUMPDEST SWAP1 PUSH32 0x60C89CE5C263405370A08B6D0302B0BAB3EEDB83920EE0A677297DC392126F1 SWAP1 PUSH2 0x4D5 PUSH2 0x2BB JUMP JUMPDEST POP MOD DUP1 SWAP2 PUSH2 0x4E1 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE SWAP3 JUMPDEST PUSH2 0x4F7 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP3 AND PUSH2 0x517 JUMPI JUMPDEST PUSH2 0x50C SWAP1 PUSH2 0x482 PUSH2 0x2BB JUMP JUMPDEST SWAP1 PUSH1 0x1 SHR SWAP1 DUP2 PUSH2 0x4EE JUMP JUMPDEST SWAP2 PUSH2 0x525 DUP4 PUSH2 0x50C SWAP3 PUSH2 0x3AB JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x500 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 GT PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x1 ADDMOD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 GT PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADDMOD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593EFFFFFFF PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x60A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xC0 DUP2 PUSH1 0x5 GAS STATICCALL ISZERO PUSH2 0xE9 JUMPI MLOAD SWAP1 JUMP INVALID ADDRESS PUSH5 0x4E72E131A0 0x29 0xB8 POP GASLIMIT 0xB6 DUP2 DUP2 PC TSTORE 0x28 CALLER 0xE8 BASEFEE PUSH26 0xB9709143E1F593F0000001A264697066735822122097F3BCBC44 0xBB CALLER JUMP DUP12 RETURN PUSH30 0x879EF06CE0C33940A798642CCF725F88DB92DDDF3264736F6C634300081B STOP CALLER ","sourceMap":"263:6709:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;263:6709:22;;;;;4062:35;263:6709;;;:::i;:::-;;;;;;:::i;:::-;;4062:35;:::i;:::-;263:6709;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;263:6709:22;;;;;-1:-1:-1;263:6709:22;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;263:6709:22;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;-1:-1:-1;;263:6709:22;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;;263:6709:22;-1:-1:-1;;;;;;;;;;;263:6709:22;;;;;6675:8;;1141:30;6675:8;;263:6709;;;:::i;:::-;;;;6675:8;6648:37;;263:6709;1141:30;:::i;:::-;263:6709;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;263:6709:22;;;;;-1:-1:-1;263:6709:22;;;;-1:-1:-1;;263:6709:22;;;;;;;:::i;:::-;;;-1:-1:-1;;263:6709:22;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;263:6709:22;;;;;;;-1:-1:-1;;;;;;;;;;;263:6709:22;;;;;;-1:-1:-1;;263:6709:22;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;3432:448::-;;3818:15;3432:448;263:6709;;:::i;:::-;;3765:24;3610:7;;:::i;:::-;3646:26;3701:34;3646:26;;;:::i;:::-;3701:34;;:::i;:::-;3765:24;;:::i;3818:15::-;263:6709;;:::i;:::-;;;;3851:22;;;263:6709;3432:448;:::o;4156:304::-;263:6709;;:::i;:::-;;;;:::i;:::-;4264:76;263:6709;;4361:77;4237:216;;;263:6709;4156:304;:::o;1498:694::-;;-1:-1:-1;;;;;;;;;;;5061:124:22;2145:20;1498:694;1965:32;1498:694;;263:6709;;:::i;:::-;;;;;;;;1638:31;;1701:9;;;;;;;263:6709;;;;1712:9;;;1701;1712;;263:6709;;;1694:31;;1766:21;;;426:6;1756:35;263:6709;;;;1838:31;;263:6709;;;;1883:31;;1818:121;;1978:18;384:6;1978:18;1965:32;;:::i;:::-;2075:23;5061:124;2075:23;;2082:1;2075:23;5061:124;:::i;:::-;2054:49;;2145:20;;:::i;:::-;5061:124;:::i;:::-;263:6709;;;:::i;:::-;;;;2124:46;1701:9;2027:158;;263:6709;1498:694;:::o;2425:852::-;263:6709;;:::i;:::-;;3581:1;2689:29;;263:6709;;:::i;:::-;-1:-1:-1;263:6709:22;;3581:1;2780:19;;;263:6709;2860:387;2867:14;;;3257:13;;2425:852;:::o;2860:387::-;3581:1;2997:13;;2992:89;;2860:387;4678:12;263:6709;;;:::i;:::-;;4678:12;;:::i;:::-;716:76;3581:1;716:76;2860:387;;;;2992:89;3045:21;;;4678:12;3045:21;;:::i;:::-;2992:89;;;;;2425:852;;716:76;2425:852;263:6709;;:::i;:::-;;716:76;2689:29;;263:6709;;:::i;:::-;-1:-1:-1;263:6709:22;;2796:1;2780:19;;;263:6709;2860:387;2867:14;;;3257:13;;2425:852;:::o;2860:387::-;2796:1;2997:13;;2992:89;;2860:387;4678:12;263:6709;;;:::i;4678:12::-;716:76;2796:1;716:76;2860:387;;;;2992:89;3045:21;;;4678:12;3045:21;;:::i;:::-;2992:89;;;;;6853:117;-1:-1:-1;;;;;;;;;;;263:6709:22;-1:-1:-1;;;;;;;;;;;263:6709:22;;;;-1:-1:-1;;;;;;;;;;;6942:21:22;2082:1;6942:21;6853:117;:::o;:::-;;-1:-1:-1;;;;;;;;;;;263:6709:22;-1:-1:-1;;;;;;;;;;;263:6709:22;;;;-1:-1:-1;;;;;;;;;;;6942:21:22;;6853:117;:::o;5360:1075::-;5555:850;;;;;;;;;;;;;;;;;;;;5105:66;5555:850;;;;-1:-1:-1;;;;;;;;;;;5555:850:22;;;;;;;;;;;;;;;5360:1075;:::o"},"methodIdentifiers":{"Q()":"e493ef8c","_add(Point,Point)":"7bb10bcb","_sub(Point,Point)":"4fa78ada","base8()":"7a634a72","elGamalEncryption(Point,uint256)":"34603b1a","encrypt(Point,uint256)":"04068d3a","scalarMultiply(Point,uint256)":"ef69ca3a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Q\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"_point1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"_point2\",\"type\":\"tuple\"}],\"name\":\"_add\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"_point1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"_point2\",\"type\":\"tuple\"}],\"name\":\"_sub\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"base8\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"_publicKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_msg\",\"type\":\"uint256\"}],\"name\":\"elGamalEncryption\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c2\",\"type\":\"tuple\"}],\"internalType\":\"struct EGCT\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"_publicKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_msg\",\"type\":\"uint256\"}],\"name\":\"encrypt\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"c2\",\"type\":\"tuple\"}],\"internalType\":\"struct EGCT\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"_point\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_scalar\",\"type\":\"uint256\"}],\"name\":\"scalarMultiply\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"BabyJubJub curve operations\",\"kind\":\"dev\",\"methods\":{\"_add(Point,Point)\":{\"details\":\"Add 2 points on BabyJubJub curve Formulae for adding 2 points on a twisted Edwards curve: x3 = (x1y2 + y1x2) / (1 + dx1x2y1y2) y3 = (y1y2 - ax1x2) / (1 - dx1x2y1y2)\",\"params\":{\"_point1\":\"first point\",\"_point2\":\"second point\"},\"returns\":{\"_0\":\"resulting point\"}},\"_sub(Point,Point)\":{\"details\":\"Subtract a BabyJubJub point from another BabyJubJub point\",\"params\":{\"_point1\":\"the point which will be subtracted from\",\"_point2\":\"point to subtract\"},\"returns\":{\"_0\":\"result\"}},\"base8()\":{\"details\":\"Default generator\"},\"elGamalEncryption(Point,uint256)\":{\"params\":{\"_msg\":\"Message in scalar form to be encrypted\",\"_publicKey\":\"Public Key that will be used in encryption\"}},\"scalarMultiply(Point,uint256)\":{\"details\":\"Multiply a BabyJubJub point by a scalar Use the double and add algorithm\",\"params\":{\"_point\":\"point be multiplied by a scalar\",\"_scalar\":\"scalar value\"},\"returns\":{\"_0\":\"resulting point\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/BabyJubJub.sol\":\"BabyJubJub\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libraries/BabyJubJub.sol\":{\"keccak256\":\"0xe657ab2a822a54ed0150af4c68e5b753ec7df27dc8470d607e6ae3b27de944a7\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://7e0802650f9ceeee43ac48377e5ff92dd5c698f6b4bfe75e23fc9061d4104d10\",\"dweb:/ipfs/QmcL8Pwd1HXc35kBpfKjABw6zAFdB46cvgVM4h4Jam92qK\"]},\"contracts/types/Types.sol\":{\"keccak256\":\"0x2327a499d5e63c8dad204c0d13b17cb8d3f913578a9a889b640be7276f42384d\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://c74b01811db798e34e30d6f65e072a6e5acfe0c28e9f98404be8a30ac43782b4\",\"dweb:/ipfs/QmdfTgJhnLE2frgUHoRTovG1CZWNZWmmzR2fnwvzEUVvw3\"]}},\"version\":1}"}}}}}