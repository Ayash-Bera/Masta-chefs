/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UniversalEncryptedERC,
  UniversalEncryptedERCInterface,
  CreateEncryptedERCParamsStruct,
} from "../../../contracts/core/UniversalEncryptedERC";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registrar",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isConverter",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "mintVerifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "withdrawVerifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "transferVerifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "burnVerifier",
            type: "address",
          },
        ],
        internalType: "struct CreateEncryptedERCParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidChainId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNullifier",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownToken",
    type: "error",
  },
  {
    inputs: [],
    name: "UserNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAuditor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAuditor",
        type: "address",
      },
    ],
    name: "AuditorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dust",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum UniversalEncryptedERC.TokenType",
        name: "tokenType",
        type: "uint8",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NativeDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NativeWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "PrivateBurn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "PrivateMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "PrivateTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintNullifier",
        type: "uint256",
      },
    ],
    name: "alreadyMinted",
    outputs: [
      {
        internalType: "bool",
        name: "isUsed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auditor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auditorPublicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[7]",
            name: "pct",
            type: "uint256[7]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct AmountPCT[]",
        name: "amountPCTs",
        type: "tuple[]",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOfStandalone",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[7]",
            name: "pct",
            type: "uint256[7]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct AmountPCT[]",
        name: "amountPCTs",
        type: "tuple[]",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balances",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "blacklistedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "isBlacklisted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnVerifier",
    outputs: [
      {
        internalType: "contract IBurnVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256[7]",
        name: "amountPCT",
        type: "uint256[7]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getBalanceFromTokenAddress",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[7]",
            name: "pct",
            type: "uint256[7]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct AmountPCT[]",
        name: "amountPCTs",
        type: "tuple[]",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNativeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isAuditorKeySet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isConverter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintVerifier",
    outputs: [
      {
        internalType: "contract IMintVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nativeBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[19]",
            name: "publicSignals",
            type: "uint256[19]",
          },
        ],
        internalType: "struct BurnProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
    ],
    name: "privateBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[24]",
            name: "publicSignals",
            type: "uint256[24]",
          },
        ],
        internalType: "struct MintProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "privateMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "enum UniversalEncryptedERC.TokenType",
        name: "tokenType",
        type: "uint8",
      },
    ],
    name: "registerTokenType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registrar",
    outputs: [
      {
        internalType: "contract IRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "setAuditorPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "blacklisted",
        type: "bool",
      },
    ],
    name: "setTokenBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenTypes",
    outputs: [
      {
        internalType: "enum UniversalEncryptedERC.TokenType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[32]",
            name: "publicSignals",
            type: "uint256[32]",
          },
        ],
        internalType: "struct TransferProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferVerifier",
    outputs: [
      {
        internalType: "contract ITransferVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[16]",
            name: "publicSignals",
            type: "uint256[16]",
          },
        ],
        internalType: "struct WithdrawProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawVerifier",
    outputs: [
      {
        internalType: "contract IWithdrawVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523461061957614824803803806100198161061e565b928339810190602081830312610619578051906001600160401b038211610619570161012081830312610619576040519161012083016001600160401b038111848210176104b35760405261006d82610643565b835260208201518015158103610619576020840190815260408301516001600160401b03811161061957826100a3918501610657565b60408501908152606084015190926001600160401b038211610619576100ca918501610657565b936060810194855260808401519360ff8516850361061957608082019485526100f560a08201610643565b60a0830190815261010860c08301610643565b9060c0840191825261013061010061012260e08601610643565b9460e0870195865201610643565b93610100810194855285511515331561060357600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600160025560ff80196003541691161760035560018060a01b0319600954166009556040516040810181811060018060401b038211176104b35760405260008082526020909101819052600a819055600b5580516001600160a01b03161580156105f1575b80156105df575b80156105cd575b80156105bb575b6105aa5751600c80546001600160a01b03199081166001600160a01b03938416179091559151600d805484169183169190911790559151600e805483169184169190911790559151600f80548416918316919091179055915160108054909216921691909117905551156102e3575b815160ff166080526000805260146020527f4f26c3876aa9f4b92579780beea1161a61f87ebf1ec6ee865b299e447ecba99c805460ff1916600117905560405161416190816106c382396080518181816113df015281816130540152818161364a0152613e110152f35b5180519092906001600160401b0381116104b357601154600181811c911680156105a0575b602082101461049357601f811161053b575b506020601f82116001146104d457819293946000926104c9575b50508160011b916000199060031b1c1916176011555b51805191906001600160401b0383116104b357601254600181811c911680156104a9575b602082101461049357601f811161042e575b50602090601f84116001146103c35760ff9391600091836103b8575b50508160011b916000199060031b1c1916176012555b38610279565b01519050388061039c565b90601f198416916012600052816000209260005b818110610416575091600193918660ff9794106103fd575b505050811b016012556103b2565b015160001960f88460031b161c191690553880806103ef565b929360206001819287860151815501950193016103d7565b60126000527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444601f850160051c81019160208610610489575b601f0160051c01905b81811061047d5750610380565b60008155600101610470565b9091508190610467565b634e487b7160e01b600052602260045260246000fd5b90607f169061036e565b634e487b7160e01b600052604160045260246000fd5b015190503880610334565b601f198216906011600052806000209160005b8181106105235750958360019596971061050a575b505050811b0160115561034a565b015160001960f88460031b161c191690553880806104fc565b9192602060018192868b0151815501940192016104e7565b60116000527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68601f830160051c81019160208410610596575b601f0160051c01905b81811061058a575061031a565b6000815560010161057d565b9091508190610574565b90607f1690610308565b63d92e233d60e01b60005260046000fd5b5084516001600160a01b03161561020a565b5083516001600160a01b031615610203565b5082516001600160a01b0316156101fc565b5081516001600160a01b0316156101f5565b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176104b357604052565b51906001600160a01b038216820361061957565b81601f82011215610619578051906001600160401b0382116104b357610686601f8301601f191660200161061e565b92828452602083830101116106195760005b8281106106ad57505060206000918301015290565b8060208092840101518282870101520161069856fe608080604052600436101561001357600080fd5b60003560e01c908162b0938d1461256757508062fdd58e1461253f578063034a1c181461250957806306fdde031461244a57806313a4f0db146122eb57806314dda7fd1461227b5780631ff0769a14612224578063204ac7cc14611c345780632b20e39714611c0b5780632d94761014611403578063313ce567146113c55780633ec045a61461139c5780634f64b2be1461135a5780635c8b5f441461131b57806361832767146112f8578063715018a61461129357806375794a3c1461127557806379ba5097146111ec57806382f09ea214611114578063864eb164146110eb5780638da5cb5b146110c25780638daed5281461109957806391584d491461107457806395ad89e61461098957806395d89b4114610f6d578063a5566e2514610da5578063a865d5b214610c82578063aa6ca80814610bb6578063b39f252d14610b5a578063b7365f1f14610b29578063ba48747314610ad4578063c3a716eb14610aab578063cbf1304d14610a20578063e30c3978146109f7578063e5df8b84146109c3578063efd8be6214610989578063f2fde38b1461091a578063f4b2be44146102095763fc97a303146101ca57600080fd5b34610204576020366003190112610204576001600160a01b036101eb61258b565b1660005260046020526020604060002054604051908152f35b600080fd5b346102045736600319016104408112610204576103601361020457366104441161020457600a5415158061090d575b61024190612a05565b600954610258906001600160a01b03161515612a51565b60ff600354166108fc57600c54604051630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa9081156108a6576000916108dd575b50156108cc576102c76040516102b28161269e565b610104358152610124356020820152336133b4565b6102ea6040516102d68161269e565b61024435815261026435602082015261343d565b601054604080516379f9173960e11b8152916001600160a01b03169060048084013781604460008183015b600282106108b25750505061036481602093604060c480840137610260610104808401375afa9081156108a657600091610877575b50156108665760405161035c8161269e565b6101443581526101643560208201526040516103778161269e565b6101843581526101a4356020820152604051916103938361269e565b825260208201526040516103a68161269e565b6101c43581526101e4356020820152604051906103c28261269e565b610204358252610224356020830152604051906103de8261269e565b815260208101918252604051906103f660e0836126d6565b600093610364835b6104448210610840575050610412906140ae565b3385526008602052604085208580526020526005604086200154604051906020820192835260408201526040815261044b6060826126d6565b519020903385526008602052604085208580526020526004604086200182865260205260ff6001604087200154169133865260086020526040862086805260205260046040872001908652602052604085205491156108315733855260086020526040852085805260205260408520936104f1604073__$3599097dbd61087c0ceb2349e224575c52$__93518151809381926327d3c56d60e11b83528a6004840161353f565b0381865af49081156108265787916107dd575b508051865560200151600186015551604080516327d3c56d60e11b81529260028701928491908290819061053c90876004840161353f565b03915af49081156107d2578691610791575b6020925081519055015160038401553384526008602052604084208480526020526040842090600e82018054805b610678575050506005016105908154613602565b905561059c8333613ff0565b825b6007811061066157836040516105b560e0826126d6565b60e0368237815b60078110610607575060018060a01b0360095416906105de60405180926125b7565b7f047fabd75c92ead101dbbb10dd37a09c205f633da9db8ce7078c2f33e84710e560e03392a380f35b80600c0180600c1161064d576013811015610639579060019160051b61010401356106328285612aa0565b52016105bc565b634e487b7160e01b84526032600452602484fd5b634e487b7160e01b84526011600452602484fd5b60019060208351930192600782860101550161059e565b600019810181811161077d578360076106918386613566565b50015411156106c0575b5080156106ac57600019018061057c565b634e487b7160e01b87526011600452602487fd5b82546000198101908111610769576106db6106e39185613566565b509184613566565b9190916107275780820361074f575b50508154801561073b576000190161070a8184613566565b610727578061071e60078b93018092613582565b5582558761069b565b634e487b7160e01b89526004899052602489fd5b634e487b7160e01b88526031600452602488fd5b60078161075d8293856140f3565b015491015587806106f2565b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b88526011600452602488fd5b905060403d6040116107cb575b6107a881846126d6565b8201916040818403126107c7576020926107c1916134e0565b9061054e565b8680fd5b503d61079e565b6040513d88823e3d90fd5b905060403d60401161081f575b6107f481836126d6565b81019260408285031261081b57602061081261053c956040946134e0565b92505092610504565b8780fd5b503d6107ea565b6040513d89823e3d90fd5b6309bde33960e01b8552600485fd5b81358152602091820191016103fe565b634e487b7160e01b600052604160045260246000fd5b6309bde33960e01b60005260046000fd5b610899915060203d60201161089f575b61089181836126d6565b81019061299e565b8161034a565b503d610887565b6040513d6000823e3d90fd5b829350604081816001949581943701930191018492610315565b632163950f60e01b60005260046000fd5b6108f6915060203d60201161089f5761089181836126d6565b8161029d565b631cc6a69960e11b60005260046000fd5b50600b5460011415610238565b346102045760203660031901126102045761093361258b565b61093b6133a0565b60018060a01b0316806001600160601b0360a01b600154161760015560018060a01b03600054167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700600080a3005b34610204576020366003190112610204576001600160a01b036109aa61258b565b1660005260156020526020604060002054604051908152f35b34610204576020366003190112610204576004356000526005602052602060018060a01b0360406000205416604051908152f35b34610204576000366003190112610204576001546040516001600160a01b039091168152602090f35b34610204576040366003190112610204576001600160a01b03610a4161258b565b166000526008602052604060002060243560005260205260c06040600020610a6881612814565b906006600582015491015490610a9f6040518094602080606092818151805187520151828601520151805160408501520151910152565b608083015260a0820152f35b34610204576000366003190112610204576010546040516001600160a01b039091168152602090f35b3461020457604036600319011261020457610aed61258b565b60243590600382101561020457610b026133a0565b60018060a01b0316600052601460205260406000209060ff80198354169116179055600080f35b34610204576020366003190112610204576004356000526013602052602060ff604060002054166040519015158152f35b34610204576020366003190112610204576001600160a01b03610b7b61258b565b16600052601460205260ff604060002054166040516003821015610ba0576020918152f35b634e487b7160e01b600052602160045260246000fd5b34610204576000366003190112610204576040518060206006549283815201809260066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9060005b818110610c635750505081610c179103826126d6565b6040519182916020830190602084525180915260408301919060005b818110610c41575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610c33565b82546001600160a01b0316845260209093019260019283019201610c01565b34610204576020366003190112610204576040610c9d61258b565b610ca5612840565b5060e090818351610cb682826126d6565b369037600091610cc4612840565b508351610cd182826126d6565b3690376001600160a01b031681526008602090815282822082805290522060058101546006820154600e83019290610d0882612814565b9184549067ffffffffffffffff82116108505760405191610d2f60208260051b01846126d6565b80835260208301966000526020600020966000905b828210610d705750505090610d5f6007610d6c949301612884565b90604051958695866125df565b0390f35b60086020600192604051610d838161269e565b610d8c8d612884565b815260078d015483820152815201990191019097610d44565b346102045761040036600319011261020457366023190161030081126102045761010060405191610dd58361269e565b1261020457604051610de6816126ba565b610df136602461277d565b81523660831215610204576040908151610e0b83826126d6565b803660e41161020457836064915b60e48310610f53575050506020820152610e343660e461277d565b828201528252366101431215610204578051610e52610200826126d6565b80366103241161020457610124905b6103248210610f43575050602083015236610343121561020457610e8736610324612741565b90600a54151580610f36575b610e9c90612a05565b600954610eb3906001600160a01b03161515612a51565b60ff60035416156108fc57600c548151630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa918215610f2c5750600091610f0d575b50156108cc57610f0b91600435612e45565b005b610f26915060203d60201161089f5761089181836126d6565b83610ef9565b513d6000823e3d90fd5b50600b5460011415610e93565b8135815260209182019101610e61565b602090610f60368561277d565b8152019101908490610e19565b346102045760003660031901126102045760006040519080601254908160011c9160018116801561106a575b6020841081146110565783865290811561102f5750600114610fd2575b610d6c84610fc6818603826126d6565b604051918291826126f8565b601281527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444939250905b80821061101557509091508101602001610fc682610fb6565b919260018160209254838588010152019101909291610ffc565b60ff191660208087019190915292151560051b85019092019250610fc69150839050610fb6565b634e487b7160e01b83526022600452602483fd5b92607f1692610f99565b34610204576000366003190112610204576040600a54600b5482519182526020820152f35b3461020457600036600319011261020457600f546040516001600160a01b039091168152602090f35b34610204576000366003190112610204576000546040516001600160a01b039091168152602090f35b3461020457600036600319011261020457600e546040516001600160a01b039091168152602090f35b610120366003190112610204576111296125a1565b36606312156102045761113d366044612741565b600a541515806111df575b61115190612a05565b600954611168906001600160a01b03161515612a51565b60ff60035416156108fc57600c54604051630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa9081156108a6576000916111c0575b50156108cc57610f0b91600435612b27565b6111d9915060203d60201161089f5761089181836126d6565b836111ae565b50600b5460011415611148565b3461020457600036600319011261020457600154336001600160a01b039091160361126057600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b63118cdaa760e01b6000523360045260246000fd5b34610204576000366003190112610204576020600254604051908152f35b34610204576000366003190112610204576112ac6133a0565b600180546001600160a01b0319908116909155600080549182168155906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461020457600036600319011261020457602060ff600354166040519015158152f35b34610204576020366003190112610204576001600160a01b0361133c61258b565b166000526007602052602060ff604060002054166040519015158152f35b3461020457602036600319011261020457600435600654811015610204576113836020916127c5565b905460405160039290921b1c6001600160a01b03168152f35b34610204576000366003190112610204576009546040516001600160a01b039091168152602090f35b3461020457600036600319011261020457602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610204576106203660031901126102045761141d61258b565b6024359036604319016105008112610204576101006040519161143f8361269e565b126102045760405191611451836126ba565b61145c36604461277d565b83523660a3121561020457604092835161147685826126d6565b80366101041161020457856084915b6101048310611bf15750505060208201526114a23661010461277d565b8482015282523661016312156102045782516114c0610400826126d6565b80366105441161020457610144905b6105448210611be157505060208301908152366106241161020457600a54151580611bd4575b6114fe90612a05565b600954611515906001600160a01b03161515612a51565b600c548451630b1fba9160e11b81523360048201526001600160a01b039091169390602081602481885afa908115611baa57600091611bb5575b50156108cc578451630b1fba9160e11b81526001600160a01b0384166004820181905294602090829060249082905afa908115611baa57600091611b8b575b50156108cc57816115e46116459351946115c088516115ac8161269e565b8751815260208801516020820152336133b4565b8751906115cc8261269e565b610140870151825261016087015160208301526133b4565b61160a86516115f28161269e565b6102e08601518152610300860151602082015261343d565b60018060a01b03600f5416915161165981519261164f8960208501519401519151938a51978896630f3022c960e21b88526004880190612ac2565b6044860190612aea565b60c4840190612ac2565b600061010483015b60208210611b7157505050610504816020935afa908115611b6657600091611b47575b50156108665782516080810181811067ffffffffffffffff8211176108505784526116ad612840565b815260208101946116bc612840565b8652848201906116ca612840565b82526060830160e09387516116df86826126d6565b8536823782528786015160608701518951916116fa8361269e565b82526020820152608087015160a08801518a51916117178361269e565b8252602082015289519161172a8361269e565b82526020820152815260c0860151858701518951916117488361269e565b825260208201526101008701516101208801518a51916117678361269e565b8252602082015289519161177a8361269e565b8252602082015289526101808601516101a087015189519161179b8361269e565b825260208201526101c08701516101e08801518a51916117ba8361269e565b825260208201528951916117cd8361269e565b82526020820152845260005b60078110611b05575051975192519051928751906117f860e0836126d6565b600099610544835b6106248210611af55750509061181892918533613ad1565b85885260086020528688208289526020528688209081541580611ae9575b156119a657602080828160039451805187550151600186015501518051600285015501519101555b848752600860205285872090875260205261191385872091600e600584015461188e61188986612814565b6140ae565b90895190602082019283528a8201528981526118ab6060826126d6565b519020936118f88a600160068401978c8954938151946118ca8661269e565b85526020850192848452815260048701602052209251835551151591019060ff801983541691151516179055565b84548951936119068561269e565b8452602084015201613599565b61191d8154613602565b905583519161192c82846126d6565b81368437855b6007811061197b5750507f1fe42c57a12ee7d4848276c111f82c24fe213a94a603b21da88785cd882c9ccf9061197560018060a01b0360095416955180946125b7565b3392a480f35b806019018060191161077d579061199460019284612ab1565b5161199f8287612aa0565b5201611932565b73__$3599097dbd61087c0ceb2349e224575c52$__90886119dd818351815180938192637bb10bcb60e01b8352896004840161353f565b0381875af4908115611adf578c91611a9b575b5092602084611a2895518755015160018601556020600286019301519082518080968194637bb10bcb60e01b8352876004840161353f565b03915af4918215611a91578a92611a4f575b5081602091600393519055015191015561185e565b9150883d8a11611a8a575b611a6481846126d6565b8201908983830312611a8657611a7e6020926003946134e0565b925090611a3a565b8a80fd5b503d611a5a565b89513d8c823e3d90fd5b9190503d8b11611ad8575b611ab081836126d6565b8101928a82850312611ad4576020611acc611a28958d946134e0565b9194506119f0565b8b80fd5b503d611aa6565b82513d8e823e3d90fd5b50600182015415611836565b8135815260209182019101611800565b806010019081601011611b3157611b1e60019289612ab1565b51611b2a828651612aa0565b52016117d9565b634e487b7160e01b600052601160045260246000fd5b611b60915060203d60201161089f5761089181836126d6565b85611684565b84513d6000823e3d90fd5b829350602080916001939451815201930191018492611661565b611ba4915060203d60201161089f5761089181836126d6565b8761158e565b86513d6000823e3d90fd5b611bce915060203d60201161089f5761089181836126d6565b8761154f565b50600b54600114156114f5565b81358152602091820191016114cf565b602090611bfe368561277d565b8152019101908690611485565b3461020457600036600319011261020457600c546040516001600160a01b039091168152602090f35b346102045761042036600319011261020457611c4e61258b565b61040036602319011261020457611c636133a0565b600a54151580612217575b611c7790612a05565b600954611c8e906001600160a01b03161515612a51565b60ff600354166108fc57600c54604051630b1fba9160e11b81526001600160a01b03838116600483018190529260209183916024918391165afa9081156108a6576000916121f8575b50156108cc5760405191611ced610300846126d6565b82366104241161020457610124905b61042482106121e8575050825146036121d757604051611d3591611d1f8261269e565b60408501518252606085015160208301526133b4565b611d5c604051611d448161269e565b6101e08401518152610200840151602082015261343d565b60208201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110156121c65780600052601360205260ff6040600020541661086657600d54604080516302680e2d60e51b8152916001600160a01b031690602460048401378160646000604483015b600282106121ac5750505061040481602093604060e460c48401376103006101246101048401375afa9081156108a65760009161218d575b50156108665760808301519060a084015160405192611e228461269e565b8352602083015260c08401519160e085015160405193611e418561269e565b8452602084015260405190611e558261269e565b81526020810192835260e09260405191611e6f85846126d6565b8436843760005b60078110612162575085600052600860205260406000206000805260205260406000209182541580612156575b156120265760209081600393518051865501516001850155518051600285015501519101555b836000526008602052604060002060008052602052611f7a604060002091600e6005840154611efa61188986612814565b906040519060208201928352604082015260408152611f1a6060826126d6565b51902093611f6b6006820195600187549160405192611f388461269e565b835260208301908282526000526004850160205260406000209251835551151591019060ff801983541691151516179055565b8454604051936119068561269e565b611f848154613602565b905560005260136020526040600020600160ff1982541617905560405192611fac82856126d6565b8136853760005b60078110611ffb5750507f0d78494055b7f1585d1e50d778838efd294162edeaf41569996739183722254b9060018060a01b036009541693611ff860405180926125b7565ba3005b806011019081601111611b315761201460019284612a8f565b5161201f8288612aa0565b5201611fb3565b61205c604073__$3599097dbd61087c0ceb2349e224575c52$$3599097dbd61087c0ceb2349e224575c52$__5af49081156108a65761302493600092613199575b508733613ad1565b60405163313ce56760e01b815290602082600481845afa9182156108a6576130a69260ff9160009161316a575b507f000000000000000000000000000000000000000000000000000000000000000060ff1691168582821115613138575061309261309d9261309792612b1a565b6140a0565b856134a3565b905b3390613a72565b6040519060e06130b681846126d6565b36833760005b6007811061310d5750506009546040516001600160a01b039091169333937fae09dce9b789cf9600e6765940d134d8247429396faf72db0f7b33ed5ca8294c9383926131089284613ab2565b0390a3565b806009019081600911611b315761312660019284612e34565b516131318286612aa0565b52016130bc565b9291808210613149575b505061309f565b61316292935061315c9161309291612b1a565b856134b6565b903880613142565b61318c915060203d602011613192575b61318481836126d6565b810190613465565b38613051565b503d61317a565b6131bc91925060803d6080116131c3575b6131b481836126d6565b810190613508565b903861301c565b503d6131aa565b638698bf3760e01b60005260046000fd5b60809061321994929360608701519383880151604051956131fb8761269e565b8652602086015260a088015160c089015160405191612f8e8361269e565b038173__$3599097dbd61087c0ceb2349e224575c52$__5af49081156108a65761324d93600092613346575b508633613ad1565b3360005260156020526040600020613266838254612b1a565b9055816000811561333d575b600080809381933390f1156108a6576040519060e061329181846126d6565b36833760005b600781106133125750507fae09dce9b789cf9600e6765940d134d8247429396faf72db0f7b33ed5ca8294c906040518381528460208201527f02a25615d4309b997a752e7e0e81a331709124ed95ead4d561a1cd277785b54160403392a260018060a01b036009541693613108604051928392339684613ab2565b806009019081600911611b315761332b60019284612e34565b516133368286612aa0565b5201613297565b506108fc613272565b61336091925060803d6080116131c3576131b481836126d6565b9038613245565b613380915060203d60201161089f5761089181836126d6565b38612f0d565b829350602080916001939451815201930191018492612eea565b6000546001600160a01b0316330361126057565b600c5460408051628918ff60e51b81526001600160a01b0393841660048201529392909184916024918391165afa9182156108a65760009261341c575b50815181511491821592613408575b505061086657565b602091925081015191015114153880613400565b61343691925060403d6040116124245761241681836126d6565b90386133f1565b600a5481511490811591613453575b5061086657565b90506020600b5491015114153861344c565b90816020910312610204575160ff811681036102045790565b9060ff8091169116039060ff8211611b3157565b60ff16604d8111611b3157600a0a90565b81810292918115918404141715611b3157565b81156134c0570490565b634e487b7160e01b600052601260045260246000fd5b81156134c0570690565b9190826040910312610204576040516134f88161269e565b6020808294805184520151910152565b90608082820312610204576135379060408051936135258561269e565b61352f83826134e0565b8552016134e0565b602082015290565b90929160206060916001608085019680548652015482850152805160408501520151910152565b80548210156127e05760005260206000209060031b0190600090565b81811061358d575050565b60008155600101613582565b8054600160401b811015610850576135b691600182018155613566565b9190916135ec57805160005b600781106135d857505060206007910151910155565b6001906020835193019281860155016135c2565b634e487b7160e01b600052600060045260246000fd5b6000198114611b315760010190565b60405163313ce56760e01b81529094936001600160a01b03909316929190602081600481875afa9081156108a657600091613a53575b507f00000000000000000000000000000000000000000000000000000000000000009060008360ff80851690841681811115613a1757505050506136916136a6926136969261347e565b613492565b6136a081846134b6565b926134d6565b925b80600052600460205260406000205415613996575b600052600460205260406000205494811561398f57600c5460408051628918ff60e51b81526001600160a01b038481166004830181905291959391929186916024918391165afa9182156108a65761377c9460009361396b575b5060809073__$3599097dbd61087c0ceb2349e224575c52$__9360208151910151604051916137458361269e565b825260208201908152604051630203469d60e11b815291516004830152516024820152604481019190915294859081906064820190565b0381855af49081156108a657889460009261394a575b5060005260086020526040600020846000526020526040600020918254158061393e575b1561380d57506129659460208083816137fc95518051885501516001870155015180516002860155015160038401555b600e60068401938454604051936119068561269e565b6138068154613602565b9055613ff0565b935061383060408251815180938192637bb10bcb60e01b8352876004840161353f565b0381885af49081156108a6576000916138f9575b5061387e94602082604093518655015160018501556020600285019301519082518080988194637bb10bcb60e01b8352876004840161353f565b03915af49081156108a65788946000926138ae575b5081519055602001516003820155612965936137fc906137e6565b9150935060403d6040116138f2575b6138c781836126d6565b81019460408287031261020457602089956138e8612965986137fc956134e0565b9350919650613893565b503d6138bd565b905060403d604011613937575b61391081836126d6565b81019460408287031261020457602061392e61387e976040946134e0565b92505094613844565b503d613906565b506001830154156137b6565b61396491925060803d6080116131c3576131b481836126d6565b9038613792565b60809193506139889060403d6040116124245761241681836126d6565b9290613717565b5050509190565b6002548160005260046020528060406000205560005260056020526040600020816001600160601b0360a01b825416179055600654600160401b811015610850578060016139e792016006556127c5565b81546001600160a01b0360039290921b91821b19169083901b179055600254613a0f90613602565b6002556136bd565b9794919593929710613a2c575b5050506136a8565b613a4292939650613a489450906136919161347e565b906134a3565b600092388080613a24565b613a6c915060203d6020116131925761318481836126d6565b38613647565b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044808301939093529181526128a391613aad6064836126d6565b613f95565b6040906128a393959492956101208201968252602082015201906125b7565b9091613adf909493946140ae565b60018060a01b038216908160005260086020526040600020846000526020526005604060002001546040519060208201928352604082015260408152613b266060826126d6565b51902060008281526008602090815260408083208784528252808320938352600490930190522060018101549054919060ff16156108665780600052600860205260406000208460005260205260406000209573__$3599097dbd61087c0ceb2349e224575c52$__90613bb0604082518151809381926327d3c56d60e11b83528d6004840161353f565b0381865af49081156108a657600091613d84575b50613bfe92602082604093518c55015160018b0155602060028b0193015190825180809681946327d3c56d60e11b8352876004840161353f565b03915af49081156108a657600091613d47575b6020925081519055015160038701556000526008602052604060002083600052602052604060002090600e82018054805b613c8357505050906005613c5c9392016138068154613602565b60005b60078110613c6c57505050565b600190602083519301926007828601015501613c5f565b6000198101818111611b3157836007613c9c8386613566565b5001541115613cb7575b508015611b31576000190180613c42565b82546000198101908111611b31576106db613cd29185613566565b9190916135ec57808203613d2d575b505081548015613d175760001901613cf98184613566565b6135ec5780613d0e6007600093018092613582565b55825538613ca6565b634e487b7160e01b600052603160045260246000fd5b600781613d3b8293856140f3565b01549101553880613ce1565b905060403d604011613d7d575b613d5e81846126d6565b82019160408184031261020457602092613d77916134e0565b90613c11565b503d613d54565b905060403d604011613dc2575b613d9b81836126d6565b810192604082850312610204576020613db9613bfe956040946134e0565b92505092613bc4565b503d613d91565b90929160008052600460205260406000205415613f0d575b600080805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec5494907f000000000000000000000000000000000000000000000000000000000000000060ff1690826012831015613ed157505060120360ff8111611b3157613696613e5791613492565b925b811561398f57600c5460408051628918ff60e51b81526001600160a01b038481166004830181905291959391929186916024918391165afa9182156108a65761377c9460009361396b575060809073__$3599097dbd61087c0ceb2349e224575c52$__9360208151910151604051916137458361269e565b9290949180601210613ee5575b5050613e59565b9194509150601119019060ff8211611b3157613a42613f0392613492565b6000923880613ede565b6002547f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec819055600090815260056020526040902080546001600160a01b0319169055600654600160401b81101561085057806001613f6f92016006556127c5565b81549060018060a01b039060031b1b19169055613f8d600254613602565b600255613de1565b906000602091828151910182855af1156108a6576000513d613fe757506001600160a01b0381163b155b613fc65750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415613fbf565b60018060a01b031660005260086020526040600020906000526020526040600020614092600582015461402561188984612814565b9060405190602082019283526040820152604081526140456060826126d6565b51902091600160068201936004855493604051946140628661269e565b855260208501928484526000520160205260406000209251835551151591019060ff801983541691151516179055565b61409c8154613602565b9055565b604d8111611b3157600a0a90565b805190602080835193015191015160208151910151906040519260208401948552604084015260608301526080820152608081526140ed60a0826126d6565b51902090565b9080821461412757908154906000915b600783106141115750505050565b6001809194019283549481840155019192614103565b505056fea2646970667358221220f45d1e6fbf554577004437a867ce2449d7c86a76bc2d7937ed9b1ff70f13834564736f6c634300081b0033";

type UniversalEncryptedERCConstructorParams =
  | [
      linkLibraryAddresses: UniversalEncryptedERCLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniversalEncryptedERCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class UniversalEncryptedERC__factory extends ContractFactory {
  constructor(...args: UniversalEncryptedERCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        UniversalEncryptedERC__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: UniversalEncryptedERCLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3599097dbd61087c0ceb2349e224575c52\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/BabyJubJub.sol:BabyJubJub"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    params: CreateEncryptedERCParamsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(params, overrides || {});
  }
  override deploy(
    params: CreateEncryptedERCParamsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(params, overrides || {}) as Promise<
      UniversalEncryptedERC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UniversalEncryptedERC__factory {
    return super.connect(runner) as UniversalEncryptedERC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniversalEncryptedERCInterface {
    return new Interface(_abi) as UniversalEncryptedERCInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniversalEncryptedERC {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UniversalEncryptedERC;
  }
}

export interface UniversalEncryptedERCLibraryAddresses {
  ["contracts/libraries/BabyJubJub.sol:BabyJubJub"]: string;
}
