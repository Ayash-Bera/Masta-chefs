/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenTracker,
  TokenTrackerInterface,
} from "../../../contracts/core/TokenTracker";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "isConverter_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "blacklistedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "isBlacklisted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isConverter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "blacklisted",
        type: "bool",
      },
    ],
    name: "setTokenBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803460d457601f61064a38819003918201601f19168301916001600160401b0383118484101760d95780849260209460405283398101031260d4575180151580910360d457331560be57600180546001600160a01b03199081169091556000805433928116831782556040519392916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600160025560ff80196003541691161760035561055a90816100f08239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80631ff0769a146104a45780634f64b2be146104495780635c8b5f441461040a57806361832767146103e7578063715018a61461038257806375794a3c1461036457806379ba5097146102db5780638da5cb5b146102b2578063aa6ca808146101bb578063e30c397814610192578063e5df8b841461015e578063f2fde38b146100ea5763fc97a303146100ab57600080fd5b346100e55760203660031901126100e5576001600160a01b036100cc6104fa565b1660005260046020526020604060002054604051908152f35b600080fd5b346100e55760203660031901126100e5576101036104fa565b61010b610510565b60018060a01b0316806bffffffffffffffffffffffff60a01b600154161760015560018060a01b03600054167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700600080a3005b346100e55760203660031901126100e5576004356000526005602052602060018060a01b0360406000205416604051908152f35b346100e55760003660031901126100e5576001546040516001600160a01b039091168152602090f35b346100e55760003660031901126100e5576040518060206006549182815201809160066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9060005b81811061029357505050829003601f01601f191682019167ffffffffffffffff83118184101761027d57908291826040526020830190602084525180915260408301919060005b81811061025b575050500390f35b82516001600160a01b031684528594506020938401939092019160010161024d565b634e487b7160e01b600052604160045260246000fd5b82546001600160a01b0316845260209093019260019283019201610206565b346100e55760003660031901126100e5576000546040516001600160a01b039091168152602090f35b346100e55760003660031901126100e557600154336001600160a01b039091160361034f57600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b63118cdaa760e01b6000523360045260246000fd5b346100e55760003660031901126100e5576020600254604051908152f35b346100e55760003660031901126100e55761039b610510565b600180546001600160a01b0319908116909155600080549182168155906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100e55760003660031901126100e557602060ff600354166040519015158152f35b346100e55760203660031901126100e5576001600160a01b0361042b6104fa565b166000526007602052602060ff604060002054166040519015158152f35b346100e55760203660031901126100e5576004356006548110156100e55760066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01546040516001600160a01b039091168152602090f35b346100e55760403660031901126100e5576104bd6104fa565b602435908115158092036100e5576104d3610510565b60018060a01b0316600052600760205260406000209060ff80198354169116179055600080f35b600435906001600160a01b03821682036100e557565b6000546001600160a01b0316330361034f5756fea2646970667358221220ce4c904dabb2a0dd91d47a4ae0988ca0dc11bc0eaefc4e9d87de50500f7187b264736f6c634300081b0033";

type TokenTrackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenTrackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenTracker__factory extends ContractFactory {
  constructor(...args: TokenTrackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    isConverter_: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(isConverter_, overrides || {});
  }
  override deploy(
    isConverter_: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(isConverter_, overrides || {}) as Promise<
      TokenTracker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenTracker__factory {
    return super.connect(runner) as TokenTracker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenTrackerInterface {
    return new Interface(_abi) as TokenTrackerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenTracker {
    return new Contract(address, _abi, runner) as unknown as TokenTracker;
  }
}
