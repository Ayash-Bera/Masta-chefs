/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EncryptedERC,
  EncryptedERCInterface,
  CreateEncryptedERCParamsStruct,
} from "../../../contracts/core/EncryptedERC";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registrar",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isConverter",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "mintVerifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "withdrawVerifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "transferVerifier",
            type: "address",
          },
          {
            internalType: "address",
            name: "burnVerifier",
            type: "address",
          },
        ],
        internalType: "struct CreateEncryptedERCParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidChainId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNullifier",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenBlacklisted",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownToken",
    type: "error",
  },
  {
    inputs: [],
    name: "UserNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAuditor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAuditor",
        type: "address",
      },
    ],
    name: "AuditorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dust",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "PrivateBurn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "PrivateMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "PrivateTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[7]",
        name: "auditorPCT",
        type: "uint256[7]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "auditorAddress",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintNullifier",
        type: "uint256",
      },
    ],
    name: "alreadyMinted",
    outputs: [
      {
        internalType: "bool",
        name: "isUsed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auditor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auditorPublicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[7]",
            name: "pct",
            type: "uint256[7]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct AmountPCT[]",
        name: "amountPCTs",
        type: "tuple[]",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOfStandalone",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[7]",
            name: "pct",
            type: "uint256[7]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct AmountPCT[]",
        name: "amountPCTs",
        type: "tuple[]",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balances",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "blacklistedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "isBlacklisted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnVerifier",
    outputs: [
      {
        internalType: "contract IBurnVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256[7]",
        name: "amountPCT",
        type: "uint256[7]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getBalanceFromTokenAddress",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "eGCT",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256[7]",
            name: "pct",
            type: "uint256[7]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct AmountPCT[]",
        name: "amountPCTs",
        type: "tuple[]",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
      {
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isAuditorKeySet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isConverter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintVerifier",
    outputs: [
      {
        internalType: "contract IMintVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[19]",
            name: "publicSignals",
            type: "uint256[19]",
          },
        ],
        internalType: "struct BurnProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
    ],
    name: "privateBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[24]",
            name: "publicSignals",
            type: "uint256[24]",
          },
        ],
        internalType: "struct MintProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "privateMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registrar",
    outputs: [
      {
        internalType: "contract IRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "setAuditorPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "blacklisted",
        type: "bool",
      },
    ],
    name: "setTokenBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[32]",
            name: "publicSignals",
            type: "uint256[32]",
          },
        ],
        internalType: "struct TransferProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferVerifier",
    outputs: [
      {
        internalType: "contract ITransferVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct ProofPoints",
            name: "proofPoints",
            type: "tuple",
          },
          {
            internalType: "uint256[16]",
            name: "publicSignals",
            type: "uint256[16]",
          },
        ],
        internalType: "struct WithdrawProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256[7]",
        name: "balancePCT",
        type: "uint256[7]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawVerifier",
    outputs: [
      {
        internalType: "contract IWithdrawVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052346105dd576141dc80380380610019816105e2565b9283398101906020818303126105dd578051906001600160401b0382116105dd5701610120818303126105dd576040519161012083016001600160401b038111848210176104775760405261006d82610607565b8352602082015180151581036105dd576020840190815260408301516001600160401b0381116105dd57826100a391850161061b565b60408501908152606084015190926001600160401b0382116105dd576100ca91850161061b565b936060810194855260808401519360ff851685036105dd57608082019485526100f560a08201610607565b60a0830190815261010860c08301610607565b9060c0840191825261013061010061012260e08601610607565b9460e0870195865201610607565b9361010081019485528551151533156105c757600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600160025560ff80196003541691161760035560018060a01b0319600954166009556040516040810181811060018060401b038211176104775760405260008082526020909101819052600a819055600b5580516001600160a01b03161580156105b5575b80156105a3575b8015610591575b801561057f575b61056e5751600c80546001600160a01b03199081166001600160a01b03938416179091559151600d805484169183169190911790559151600e805483169184169190911790559151600f80548416918316919091179055915160108054909216921691909117905551156102a7575b60ff825116608052604051613b5590816106878239608051818181610fe30152818161186a015261322a0152f35b5180519092906001600160401b03811161047757601154600181811c91168015610564575b602082101461045757601f81116104ff575b506020601f8211600114610498578192939460009261048d575b50508160011b916000199060031b1c1916176011555b51805191906001600160401b03831161047757601254600181811c9116801561046d575b602082101461045757601f81116103f2575b50602090601f84116001146103875760ff93916000918361037c575b50508160011b916000199060031b1c1916176012555b38610279565b015190503880610360565b90601f198416916012600052816000209260005b8181106103da575091600193918660ff9794106103c1575b505050811b01601255610376565b015160001960f88460031b161c191690553880806103b3565b9293602060018192878601518155019501930161039b565b60126000527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444601f850160051c8101916020861061044d575b601f0160051c01905b8181106104415750610344565b60008155600101610434565b909150819061042b565b634e487b7160e01b600052602260045260246000fd5b90607f1690610332565b634e487b7160e01b600052604160045260246000fd5b0151905038806102f8565b601f198216906011600052806000209160005b8181106104e7575095836001959697106104ce575b505050811b0160115561030e565b015160001960f88460031b161c191690553880806104c0565b9192602060018192868b0151815501940192016104ab565b60116000527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68601f830160051c8101916020841061055a575b601f0160051c01905b81811061054e57506102de565b60008155600101610541565b9091508190610538565b90607f16906102cc565b63d92e233d60e01b60005260046000fd5b5084516001600160a01b03161561020a565b5083516001600160a01b031615610203565b5082516001600160a01b0316156101fc565b5081516001600160a01b0316156101f5565b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761047757604052565b51906001600160a01b03821682036105dd57565b81601f820112156105dd578051906001600160401b0382116104775761064a601f8301601f19166020016105e2565b92828452602083830101116105dd5760005b82811061067157505060206000918301015290565b8060208092840101518282870101520161065c56fe608080604052600436101561001357600080fd5b60003560e01c908162b0938d146129ca57508062fdd58e146129a2578063034a1c181461296c57806306fdde03146128ad57806313a4f0db1461274e57806314dda7fd146126de5780631ff0769a14612685578063204ac7cc146120955780632b20e3971461206c5780632d9476101461188e578063313ce567146118505780633ec045a6146118275780634f64b2be146117e55780635c8b5f44146117a65780636183276714611783578063715018a61461171e57806375794a3c1461170057806379ba50971461167757806382f09ea2146113ec578063864eb164146113c35780638da5cb5b1461139a5780638daed5281461137157806391584d491461134c57806395d89b4114611245578063a5566e2514610c8e578063a865d5b214610b6b578063aa6ca80814610a9f578063b7365f1f14610a6e578063c3a716eb14610a45578063cbf1304d146109ba578063e30c397814610991578063e5df8b841461095d578063f2fde38b146108ee578063f4b2be44146101dd5763fc97a3031461019e57600080fd5b346101d85760203660031901126101d8576001600160a01b036101bf6129ee565b1660005260046020526020604060002054604051908152f35b600080fd5b346101d857366003190161044081126101d857610360136101d85736610444116101d857600a541515806108e1575b61021590612e68565b60095461022c906001600160a01b03161515612eb4565b60ff600354166108d057600c54604051630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa90811561087a576000916108b1575b50156108a05761029b60405161028681612b01565b61010435815261012435602082015233612f9e565b6102be6040516102aa81612b01565b610244358152610264356020820152613027565b601054604080516379f9173960e11b8152916001600160a01b03169060048084013781604460008183015b600282106108865750505061036481602093604060c480840137610260610104808401375afa90811561087a5760009161084b575b501561083a5760405161033081612b01565b61014435815261016435602082015260405161034b81612b01565b6101843581526101a43560208201526040519161036783612b01565b8252602082015260405161037a81612b01565b6101c43581526101e43560208201526040519061039682612b01565b610204358252610224356020830152604051906103b282612b01565b815260208101918252604051906103ca60e083612b39565b600093610364835b61044482106108145750506103e690613aa2565b3385526008602052604085208580526020526005604086200154604051906020820192835260408201526040815261041f606082612b39565b519020903385526008602052604085208580526020526004604086200182865260205260ff6001604087200154169133865260086020526040862086805260205260046040872001908652602052604085205491156108055733855260086020526040852085805260205260408520936104c5604073__$3599097dbd61087c0ceb2349e224575c52$__93518151809381926327d3c56d60e11b83528a6004840161311f565b0381865af49081156107fa5787916107b1575b508051865560200151600186015551604080516327d3c56d60e11b81529260028701928491908290819061051090876004840161311f565b03915af49081156107a6578691610765575b6020925081519055015160038401553384526008602052604084208480526020526040842090600e82018054805b61064c5750505060050161056481546131e2565b905561057083336139e4565b825b60078110610635578360405161058960e082612b39565b60e0368237815b600781106105db575060018060a01b0360095416906105b26040518092612a1a565b7f047fabd75c92ead101dbbb10dd37a09c205f633da9db8ce7078c2f33e84710e560e03392a380f35b80600c0180600c1161062157601381101561060d579060019160051b61010401356106068285612f03565b5201610590565b634e487b7160e01b84526032600452602484fd5b634e487b7160e01b84526011600452602484fd5b600190602083519301926007828601015501610572565b6000198101818111610751578360076106658386613146565b5001541115610694575b508015610680576000190180610550565b634e487b7160e01b87526011600452602487fd5b8254600019810190811161073d576106af6106b79185613146565b509184613146565b9190916106fb57808203610723575b50508154801561070f57600019016106de8184613146565b6106fb57806106f260078b93018092613162565b5582558761066f565b634e487b7160e01b89526004899052602489fd5b634e487b7160e01b88526031600452602488fd5b600781610731829385613ae7565b015491015587806106c6565b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b88526011600452602488fd5b905060403d60401161079f575b61077c8184612b39565b82019160408184031261079b57602092610795916130c0565b90610522565b8680fd5b503d610772565b6040513d88823e3d90fd5b905060403d6040116107f3575b6107c88183612b39565b8101926040828503126107ef5760206107e6610510956040946130c0565b925050926104d8565b8780fd5b503d6107be565b6040513d89823e3d90fd5b6309bde33960e01b8552600485fd5b81358152602091820191016103d2565b634e487b7160e01b600052604160045260246000fd5b6309bde33960e01b60005260046000fd5b61086d915060203d602011610873575b6108658183612b39565b810190612e01565b8161031e565b503d61085b565b6040513d6000823e3d90fd5b8293506040818160019495819437019301910184926102e9565b632163950f60e01b60005260046000fd5b6108ca915060203d602011610873576108658183612b39565b81610271565b631cc6a69960e11b60005260046000fd5b50600b546001141561020c565b346101d85760203660031901126101d8576109076129ee565b61090f612f8a565b60018060a01b0316806001600160601b0360a01b600154161760015560018060a01b03600054167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700600080a3005b346101d85760203660031901126101d8576004356000526005602052602060018060a01b0360406000205416604051908152f35b346101d85760003660031901126101d8576001546040516001600160a01b039091168152602090f35b346101d85760403660031901126101d8576001600160a01b036109db6129ee565b166000526008602052604060002060243560005260205260c06040600020610a0281612c77565b906006600582015491015490610a396040518094602080606092818151805187520151828601520151805160408501520151910152565b608083015260a0820152f35b346101d85760003660031901126101d8576010546040516001600160a01b039091168152602090f35b346101d85760203660031901126101d8576004356000526013602052602060ff604060002054166040519015158152f35b346101d85760003660031901126101d8576040518060206006549283815201809260066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9060005b818110610b4c5750505081610b00910382612b39565b6040519182916020830190602084525180915260408301919060005b818110610b2a575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610b1c565b82546001600160a01b0316845260209093019260019283019201610aea565b346101d85760203660031901126101d8576040610b866129ee565b610b8e612ca3565b5060e090818351610b9f8282612b39565b369037600091610bad612ca3565b508351610bba8282612b39565b3690376001600160a01b031681526008602090815282822082805290522060058101546006820154600e83019290610bf182612c77565b9184549067ffffffffffffffff82116108245760405191610c1860208260051b0184612b39565b80835260208301966000526020600020966000905b828210610c595750505090610c486007610c55949301612ce7565b9060405195869586612a42565b0390f35b60086020600192604051610c6c81612b01565b610c758d612ce7565b815260078d015483820152815201990191019097610c2d565b346101d8576104003660031901126101d857600435366023190161030081126101d85761010060405191610cc183612b01565b126101d85760405190610cd382612b1d565b610cde366024612be0565b825236608312156101d8576040918251610cf88482612b39565b803660e4116101d857846064915b60e4831061122b575050506020820152610d213660e4612be0565b8382015281523661014312156101d857815191610d4061020084612b39565b8236610324116101d857610124905b610324821061121b575050602082019283523661034312156101d857610d7736610324612ba4565b91600a5415158061120e575b610d8c90612e68565b600954610da3906001600160a01b03161515612eb4565b60ff60035416156108d057600c548251630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa90811561115e576000916111ef575b50156108a05792805192835194610e81845191610e0483612b01565b602087019485518452610e21878901948551602082015233612f9e565b610e468751610e2f81612b01565b60e08a015181526101008a01516020820152613027565b60018060a01b03600e54169151610e95815192610e8b8a60208501519401519151938b5197889663c82febf560e01b88526004880190612f25565b6044860190612f4d565b60c4840190612f25565b600061010483015b601082106111d557505050610304816020935afa90811561119a576000916111b6575b501561083a5760008781526005602052849020546001600160a01b03169283156111a557608087610f7d93606089015193838a0151895195610f0187612b01565b8652602086015260a08a015160c08b01518a5191610f1e83612b01565b82526020820152895195610f3187612b01565b86526020860152519051885191610f4783612b01565b8252602082019081528851630203469d60e11b815291516004830152516024820152604481019190915292839081906064820190565b038173__$3599097dbd61087c0ceb2349e224575c52$__5af491821561119a5790610fb4939291600092611169575b508833613691565b815163313ce56760e01b8152602081600481855afa90811561115e57611035929160ff9160009161112f575b507f000000000000000000000000000000000000000000000000000000000000000060ff16911686828211156110fd575061102161102c9261102692612f7d565b613a94565b8661308d565b905b3390613651565b80519160e06110448185612b39565b36843760005b600781106110a0575050906110779160018060a01b03600954169481519485526020850152830190612a1a565b7fae09dce9b789cf9600e6765940d134d8247429396faf72db0f7b33ed5ca8294c6101203392a3005b80600901806009116110e757600060108210156110d357509060019160051b8301516110cc8287612f03565b520161104a565b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b600052601160045260246000fd5b929180821061110e575b505061102e565b6111279293506111219161102191612f7d565b866130a0565b908780611107565b611151915060203d602011611157575b6111498183612b39565b81019061304f565b88610fe0565b503d61113f565b83513d6000823e3d90fd5b61118c91925060803d608011611193575b6111848183612b39565b8101906130e8565b9089610fac565b503d61117a565b85513d6000823e3d90fd5b638698bf3760e01b60005260046000fd5b6111cf915060203d602011610873576108658183612b39565b88610ec0565b829350602080916001939451815201930191018492610e9d565b611208915060203d602011610873576108658183612b39565b86610de8565b50600b5460011415610d83565b8135815260209182019101610d4f565b6020906112383685612be0565b8152019101908590610d06565b346101d85760003660031901126101d85760006040519080601254908160011c91600181168015611342575b60208410811461132e5783865290811561130757506001146112aa575b610c558461129e81860382612b39565b60405191829182612b5b565b601281527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444939250905b8082106112ed5750909150810160200161129e8261128e565b9192600181602092548385880101520191019092916112d4565b60ff191660208087019190915292151560051b8501909201925061129e915083905061128e565b634e487b7160e01b83526022600452602483fd5b92607f1692611271565b346101d85760003660031901126101d8576040600a54600b5482519182526020820152f35b346101d85760003660031901126101d857600f546040516001600160a01b039091168152602090f35b346101d85760003660031901126101d8576000546040516001600160a01b039091168152602090f35b346101d85760003660031901126101d857600e546040516001600160a01b039091168152602090f35b346101d8576101203660031901126101d857600435611409612a04565b36606312156101d85761141d366044612ba4565b90600a5415158061166a575b61143290612e68565b600954611449906001600160a01b03161515612eb4565b60ff60035416156108d0576001600160a01b03811660008181526007602052604090205490929060ff1661165557600c54604051630b1fba9160e11b815233600482015290602090829060249082906001600160a01b03165afa90811561087a57600091611636575b50156108a0576040516370a0823160e01b8152306004820152602081602481875afa90811561087a57600091611604575b5061151e6040516323b872dd60e01b602082015233602482015230604482015286606482015260648152611518608482612b39565b85613989565b6040516370a0823160e01b815230600482015290602082602481885afa801561087a5786926000916115cb575b509061155691612f7d565b036115ba576115669184336131f1565b9181806115a8575b5050604051928352602083015260408201527f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e60603392a2005b6115b3913390613651565b838161156e565b6312171d8360e31b60005260046000fd5b919250506020813d6020116115fc575b816115e860209383612b39565b810103126101d8575185919061155661154b565b3d91506115db565b90506020813d60201161162e575b8161161f60209383612b39565b810103126101d85751856114e3565b3d9150611612565b61164f915060203d602011610873576108658183612b39565b856114b2565b826375519c5160e01b60005260045260246000fd5b50600b5460011415611429565b346101d85760003660031901126101d857600154336001600160a01b03909116036116eb57600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b63118cdaa760e01b6000523360045260246000fd5b346101d85760003660031901126101d8576020600254604051908152f35b346101d85760003660031901126101d857611737612f8a565b600180546001600160a01b0319908116909155600080549182168155906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101d85760003660031901126101d857602060ff600354166040519015158152f35b346101d85760203660031901126101d8576001600160a01b036117c76129ee565b166000526007602052602060ff604060002054166040519015158152f35b346101d85760203660031901126101d8576004356006548110156101d85761180e602091612c28565b905460405160039290921b1c6001600160a01b03168152f35b346101d85760003660031901126101d8576009546040516001600160a01b039091168152602090f35b346101d85760003660031901126101d857602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101d8576106203660031901126101d8576118a86129ee565b60243590366043190161050081126101d857610100604051916118ca83612b01565b126101d857604051916118dc83612b1d565b6118e7366044612be0565b83523660a312156101d85760409283516119018582612b39565b8036610104116101d857856084915b610104831061205257505050602082015261192d36610104612be0565b8482015282523661016312156101d857825161194b61040082612b39565b8036610544116101d857610144905b61054482106120425750506020830190815236610624116101d857600a54151580612035575b61198990612e68565b6009546119a0906001600160a01b03161515612eb4565b600c548451630b1fba9160e11b81523360048201526001600160a01b039091169390602081602481885afa90811561200b57600091612016575b50156108a0578451630b1fba9160e11b81526001600160a01b0384166004820181905294602090829060249082905afa90811561200b57600091611fec575b50156108a05781611a6f610e81935194611a4b8851611a3781612b01565b875181526020880151602082015233612f9e565b875190611a5782612b01565b61014087015182526101608701516020830152612f9e565b611a958651611a7d81612b01565b6102e086015181526103008601516020820152613027565b60018060a01b03600f54169151611ad0815192610e8b8960208501519401519151938a51978896630f3022c960e21b88526004880190612f25565b600061010483015b60208210611fd257505050610504816020935afa908115611fc757600091611fa8575b501561083a5782516080810181811067ffffffffffffffff821117610824578452611b24612ca3565b81526020810194611b33612ca3565b865284820190611b41612ca3565b82526060830160e0938751611b568682612b39565b853682378252878601516060870151895191611b7183612b01565b82526020820152608087015160a08801518a5191611b8e83612b01565b82526020820152895191611ba183612b01565b82526020820152815260c086015185870151895191611bbf83612b01565b825260208201526101008701516101208801518a5191611bde83612b01565b82526020820152895191611bf183612b01565b8252602082015289526101808601516101a0870151895191611c1283612b01565b825260208201526101c08701516101e08801518a5191611c3183612b01565b82526020820152895191611c4483612b01565b82526020820152845260005b60078110611f7c57505197519251905192875190611c6f60e083612b39565b600099610544835b6106248210611f6c57505090611c8f92918533613691565b85885260086020528688208289526020528688209081541580611f60575b15611e1d57602080828160039451805187550151600186015501518051600285015501519101555b8487526008602052858720908752602052611d8a85872091600e6005840154611d05611d0086612c77565b613aa2565b90895190602082019283528a820152898152611d22606082612b39565b51902093611d6f8a600160068401978c895493815194611d4186612b01565b85526020850192848452815260048701602052209251835551151591019060ff801983541691151516179055565b8454895193611d7d85612b01565b8452602084015201613179565b611d9481546131e2565b9055835191611da38284612b39565b81368437855b60078110611df25750507f1fe42c57a12ee7d4848276c111f82c24fe213a94a603b21da88785cd882c9ccf90611dec60018060a01b036009541695518094612a1a565b3392a480f35b80601901806019116107515790611e0b60019284612f14565b51611e168287612f03565b5201611da9565b73__$3599097dbd61087c0ceb2349e224575c52$__9088611e54818351815180938192637bb10bcb60e01b8352896004840161311f565b0381875af4908115611f56578c91611f12575b5092602084611e9f95518755015160018601556020600286019301519082518080968194637bb10bcb60e01b8352876004840161311f565b03915af4918215611f08578a92611ec6575b50816020916003935190550151910155611cd5565b9150883d8a11611f01575b611edb8184612b39565b8201908983830312611efd57611ef56020926003946130c0565b925090611eb1565b8a80fd5b503d611ed1565b89513d8c823e3d90fd5b9190503d8b11611f4f575b611f278183612b39565b8101928a82850312611f4b576020611f43611e9f958d946130c0565b919450611e67565b8b80fd5b503d611f1d565b82513d8e823e3d90fd5b50600182015415611cad565b8135815260209182019101611c77565b8060100190816010116110e757611f9560019289612f14565b51611fa1828651612f03565b5201611c50565b611fc1915060203d602011610873576108658183612b39565b85611afb565b84513d6000823e3d90fd5b829350602080916001939451815201930191018492611ad8565b612005915060203d602011610873576108658183612b39565b87611a19565b86513d6000823e3d90fd5b61202f915060203d602011610873576108658183612b39565b876119da565b50600b5460011415611980565b813581526020918201910161195a565b60209061205f3685612be0565b8152019101908690611910565b346101d85760003660031901126101d857600c546040516001600160a01b039091168152602090f35b346101d8576104203660031901126101d8576120af6129ee565b6104003660231901126101d8576120c4612f8a565b600a54151580612678575b6120d890612e68565b6009546120ef906001600160a01b03161515612eb4565b60ff600354166108d057600c54604051630b1fba9160e11b81526001600160a01b03838116600483018190529260209183916024918391165afa90811561087a57600091612659575b50156108a0576040519161214e61030084612b39565b8236610424116101d857610124905b610424821061264957505082514603612638576040516121969161218082612b01565b6040850151825260608501516020830152612f9e565b6121bd6040516121a581612b01565b6101e084015181526102008401516020820152613027565b60208201517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110156126275780600052601360205260ff6040600020541661083a57600d54604080516302680e2d60e51b8152916001600160a01b031690602460048401378160646000604483015b6002821061260d5750505061040481602093604060e460c48401376103006101246101048401375afa90811561087a576000916125ee575b501561083a5760808301519060a08401516040519261228384612b01565b8352602083015260c08401519160e0850151604051936122a285612b01565b84526020840152604051906122b682612b01565b81526020810192835260e092604051916122d08584612b39565b8436843760005b600781106125c35750856000526008602052604060002060008052602052604060002091825415806125b7575b156124875760209081600393518051865501516001850155518051600285015501519101555b8360005260086020526040600020600080526020526123db604060002091600e600584015461235b611d0086612c77565b90604051906020820192835260408201526040815261237b606082612b39565b519020936123cc600682019560018754916040519261239984612b01565b835260208301908282526000526004850160205260406000209251835551151591019060ff801983541691151516179055565b845460405193611d7d85612b01565b6123e581546131e2565b905560005260136020526040600020600160ff198254161790556040519261240d8285612b39565b8136853760005b6007811061245c5750507f0d78494055b7f1585d1e50d778838efd294162edeaf41569996739183722254b9060018060a01b0360095416936124596040518092612a1a565ba3005b8060110190816011116110e75761247560019284612ef2565b516124808288612f03565b5201612414565b6124bd604073__$3599097dbd61087c0ceb2349e224575c52$__9351815180938192637bb10bcb60e01b8352886004840161311f565b0381865af490811561087a57600091612572575b50805184556020015160018401555160408051637bb10bcb60e01b81529260028501928491908290819061250990876004840161311f565b03915af491821561087a57600092612531575b5081602091600393519055015191015561232a565b915060403d60401161256b575b6125488184612b39565b8201906040838303126101d8576125636020926003946130c0565b92509061251c565b503d61253e565b905060403d6040116125b0575b6125898183612b39565b8101926040828503126101d85760206125a7612509956040946130c0565b925050926124d1565b503d61257f565b50600183015415612304565b8060080190816008116110e7576125dc6001928a612ef2565b516125e78287612f03565b52016122d7565b612607915060203d602011610873576108658183612b39565b84612265565b82935060408181600194958194370193019101849261222d565b632ec8265960e11b60005260046000fd5b633d23e4d160e11b60005260046000fd5b813581526020918201910161215d565b612672915060203d602011610873576108658183612b39565b83612138565b50600b54600114156120cf565b346101d85760403660031901126101d85761269e6129ee565b60243580151581036101d8576126dc916126b6612f8a565b60018060a01b0316600052600760205260406000209060ff801983541691151516179055565b005b346101d85760403660031901126101d857610c5561273e6126fd6129ee565b612705612a04565b61270d612ca3565b5060e060405161271d8282612b39565b3690376001600160a01b031660009081526004602052604090205490612d1e565b9160409593955195869586612a42565b346101d85760203660031901126101d8576127676129ee565b61276f612f8a565b600c54604051630b1fba9160e11b81526001600160a01b03928316600482018190529290911690602081602481855afa90811561087a5760009161288e575b50156108a0576040602491815192838092628918ff60e51b82528660048301525afa90811561087a5760009161285f575b5060095490821561284e57826001600160601b0360a01b831617600955602081519101519081602060405161281381612b01565b8381520152600a55600b556001600160a01b03167fdbeeb2970745c839058876b084c0d772566ff6b5aaa47938c394cd171a38c24c600080a3005b63d92e233d60e01b60005260046000fd5b612881915060403d604011612887575b6128798183612b39565b810190612e19565b826127df565b503d61286f565b6128a7915060203d602011610873576108658183612b39565b836127ae565b346101d85760003660031901126101d85760006040519080601154908160011c91600181168015612962575b60208410811461132e57838652908115611307575060011461290557610c558461129e81860382612b39565b601181527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68939250905b8082106129485750909150810160200161129e8261128e565b91926001816020925483858801015201910190929161292f565b92607f16926128d9565b346101d85760003660031901126101d857600a54151580612995575b6020906040519015158152f35b50600b5460011415612988565b346101d85760403660031901126101d857610c5561273e6129c16129ee565b60243590612d1e565b346101d85760003660031901126101d857600d546001600160a01b03168152602090f35b600435906001600160a01b03821682036101d857565b602435906001600160a01b03821682036101d857565b906000905b60078210612a2c57505050565b6020806001928551815201930191019091612a1f565b929195949395612a75846101c0810193602080606092818151805187520151828601520151805160408501520151910152565b60808401526101c060a0840152815180915260206101e0840192019060005b818110612ab55750505090612ab16101a0929560c0830190612a1a565b0152565b9091928351805182906000915b60078310612aeb5750505061010060019260208093015160e08201520194019101919091612a94565b6020806001928451815201920192019190612ac2565b6040810190811067ffffffffffffffff82111761082457604052565b6060810190811067ffffffffffffffff82111761082457604052565b90601f8019910116810190811067ffffffffffffffff82111761082457604052565b91909160208152825180602083015260005b818110612b8e575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201612b6d565b919060405192612bb560e085612b39565b839060e081019283116101d857905b828210612bd057505050565b8135815260209182019101612bc4565b9080601f830112156101d857604080519290612bfc9084612b39565b8290604081019283116101d857905b828210612c185750505090565b8135815260209182019101612c0b565b600654811015612c4357600660005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90604051612c6681612b01565b602060018294805484520154910152565b90604051612c8481612b01565b6020612c9e60028395612c9681612c59565b855201612c59565b910152565b60405190612cb082612b01565b81604051612cbd81612b01565b60008152600060208201528152602060405191612cd983612b01565b600083526000828401520152565b60405191906000835b60078210612d0857505050612d0660e083612b39565b565b6001602081928554815201930191019091612cf0565b612d26612ca3565b5060e0604051612d368282612b39565b36903760018060a01b03166000526008602052604060002090600052602052604060002090600582015491600e810191600682015490612d7583612c77565b9493805467ffffffffffffffff81116108245760405191612d9c60208360051b0184612b39565b818352602083019060005260206000206000915b838310612dcc57505050506007612dc8919401612ce7565b9190565b60086020600192604051612ddf81612b01565b612de886612ce7565b8152600786015483820152815201920192019190612db0565b908160209103126101d8575180151581036101d85790565b906040828203126101d85780601f830112156101d8576040805192612e3e8285612b39565b839181019283116101d857905b828210612e585750505090565b8151815260209182019101612e4b565b15612e6f57565b60405162461bcd60e51b815260206004820152601a60248201527f41756469746f72207075626c6963206b6579206e6f74207365740000000000006044820152606490fd5b15612ebb57565b60405162461bcd60e51b815260206004820152600f60248201526e105d591a5d1bdc881b9bdd081cd95d608a1b6044820152606490fd5b906018811015612c435760051b0190565b906007811015612c435760051b0190565b906020811015612c435760051b0190565b906000905b60028210612f3757505050565b6020806001928551815201930191019091612f2a565b906000905b60028210612f5f57505050565b6020604082612f716001948751612f25565b01930191019091612f52565b919082039182116110e757565b6000546001600160a01b031633036116eb57565b600c5460408051628918ff60e51b81526001600160a01b0393841660048201529392909184916024918391165afa91821561087a57600092613006575b50815181511491821592612ff2575b505061083a57565b602091925081015191015114153880612fea565b61302091925060403d604011612887576128798183612b39565b9038612fdb565b600a548151149081159161303d575b5061083a57565b90506020600b54910151141538613036565b908160209103126101d8575160ff811681036101d85790565b9060ff8091169116039060ff82116110e757565b60ff16604d81116110e757600a0a90565b818102929181159184041417156110e757565b81156130aa570490565b634e487b7160e01b600052601260045260246000fd5b91908260409103126101d8576040516130d881612b01565b6020808294805184520151910152565b906080828203126101d85761311790604080519361310585612b01565b61310f83826130c0565b8552016130c0565b602082015290565b90929160206060916001608085019680548652015482850152805160408501520151910152565b8054821015612c435760005260206000209060031b0190600090565b81811061316d575050565b60008155600101613162565b8054600160401b8110156108245761319691600182018155613146565b9190916131cc57805160005b600781106131b857505060206007910151910155565b6001906020835193019281860155016131a2565b634e487b7160e01b600052600060045260246000fd5b60001981146110e75760010190565b60405163313ce56760e01b81529094936001600160a01b03909316929190602081600481875afa90811561087a57600091613632575b507f00000000000000000000000000000000000000000000000000000000000000009060008360ff808516908416818111156135f657505050506132739161326e91613068565b61307c565b61327d81836130a0565b9181156130aa5706925b80600052600460205260406000205415613575575b600052600460205260406000205494811561356e57600c5460408051628918ff60e51b81526001600160a01b038481166004830181905291959391929186916024918391165afa91821561087a5761335b9460009361354a575b5060809073__$3599097dbd61087c0ceb2349e224575c52$__93602081519101516040519161332483612b01565b825260208201908152604051630203469d60e11b815291516004830152516024820152604481019190915294859081906064820190565b0381855af490811561087a578894600092613529575b5060005260086020526040600020846000526020526040600020918254158061351d575b156133ec5750612dc89460208083816133db95518051885501516001870155015180516002860155015160038401555b600e6006840193845460405193611d7d85612b01565b6133e581546131e2565b90556139e4565b935061340f60408251815180938192637bb10bcb60e01b8352876004840161311f565b0381885af490811561087a576000916134d8575b5061345d94602082604093518655015160018501556020600285019301519082518080988194637bb10bcb60e01b8352876004840161311f565b03915af490811561087a57889460009261348d575b5081519055602001516003820155612dc8936133db906133c5565b9150935060403d6040116134d1575b6134a68183612b39565b8101946040828703126101d857602089956134c7612dc8986133db956130c0565b9350919650613472565b503d61349c565b905060403d604011613516575b6134ef8183612b39565b8101946040828703126101d857602061350d61345d976040946130c0565b92505094613423565b503d6134e5565b50600183015415613395565b61354391925060803d608011611193576111848183612b39565b9038613371565b60809193506135679060403d604011612887576128798183612b39565b92906132f6565b5050509190565b6002548160005260046020528060406000205560005260056020526040600020816001600160601b0360a01b825416179055600654600160401b811015610824578060016135c69201600655612c28565b81546001600160a01b0360039290921b91821b19169083901b1790556002546135ee906131e2565b60025561329c565b979491959392971061360b575b505050613287565b6136219293965061362794509061326e91613068565b9061308d565b600092388080613603565b61364b915060203d602011611157576111498183612b39565b38613227565b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152612d069161368c606483612b39565b613989565b909161369f90949394613aa2565b60018060a01b0382169081600052600860205260406000208460005260205260056040600020015460405190602082019283526040820152604081526136e6606082612b39565b51902060008281526008602090815260408083208784528252808320938352600490930190522060018101549054919060ff161561083a5780600052600860205260406000208460005260205260406000209573__$3599097dbd61087c0ceb2349e224575c52$__90613770604082518151809381926327d3c56d60e11b83528d6004840161311f565b0381865af490811561087a57600091613944575b506137be92602082604093518c55015160018b0155602060028b0193015190825180809681946327d3c56d60e11b8352876004840161311f565b03915af490811561087a57600091613907575b6020925081519055015160038701556000526008602052604060002083600052602052604060002090600e82018054805b6138435750505090600561381c9392016133e581546131e2565b60005b6007811061382c57505050565b60019060208351930192600782860101550161381f565b60001981018181116110e75783600761385c8386613146565b5001541115613877575b5080156110e7576000190180613802565b825460001981019081116110e7576106af6138929185613146565b9190916131cc578082036138ed575b5050815480156138d757600019016138b98184613146565b6131cc57806138ce6007600093018092613162565b55825538613866565b634e487b7160e01b600052603160045260246000fd5b6007816138fb829385613ae7565b015491015538806138a1565b905060403d60401161393d575b61391e8184612b39565b8201916040818403126101d857602092613937916130c0565b906137d1565b503d613914565b905060403d604011613982575b61395b8183612b39565b8101926040828503126101d85760206139796137be956040946130c0565b92505092613784565b503d613951565b906000602091828151910182855af11561087a576000513d6139db57506001600160a01b0381163b155b6139ba5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b600114156139b3565b60018060a01b031660005260086020526040600020906000526020526040600020613a866005820154613a19611d0084612c77565b906040519060208201928352604082015260408152613a39606082612b39565b5190209160016006820193600485549360405194613a5686612b01565b855260208501928484526000520160205260406000209251835551151591019060ff801983541691151516179055565b613a9081546131e2565b9055565b604d81116110e757600a0a90565b80519060208083519301519101516020815191015190604051926020840194855260408401526060830152608082015260808152613ae160a082612b39565b51902090565b90808214613b1b57908154906000915b60078310613b055750505050565b6001809194019283549481840155019192613af7565b505056fea2646970667358221220b6032783f92df41d5afe4fd4332d13a794a5dbf8e226f7fe44a4a7cd892f196864736f6c634300081b0033";

type EncryptedERCConstructorParams =
  | [linkLibraryAddresses: EncryptedERCLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EncryptedERCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class EncryptedERC__factory extends ContractFactory {
  constructor(...args: EncryptedERCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        EncryptedERC__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: EncryptedERCLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3599097dbd61087c0ceb2349e224575c52\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/BabyJubJub.sol:BabyJubJub"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    params: CreateEncryptedERCParamsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(params, overrides || {});
  }
  override deploy(
    params: CreateEncryptedERCParamsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(params, overrides || {}) as Promise<
      EncryptedERC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EncryptedERC__factory {
    return super.connect(runner) as EncryptedERC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EncryptedERCInterface {
    return new Interface(_abi) as EncryptedERCInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EncryptedERC {
    return new Contract(address, _abi, runner) as unknown as EncryptedERC;
  }
}

export interface EncryptedERCLibraryAddresses {
  ["contracts/libraries/BabyJubJub.sol:BabyJubJub"]: string;
}
