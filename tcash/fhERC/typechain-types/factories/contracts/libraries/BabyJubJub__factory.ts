/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BabyJubJub,
  BabyJubJubInterface,
} from "../../../contracts/libraries/BabyJubJub";

const _abi = [
  {
    inputs: [],
    name: "Q",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "_point1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "_point2",
        type: "tuple",
      },
    ],
    name: "_add",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "_point1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "_point2",
        type: "tuple",
      },
    ],
    name: "_sub",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "base8",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "_publicKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_msg",
        type: "uint256",
      },
    ],
    name: "elGamalEncryption",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "_publicKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_msg",
        type: "uint256",
      },
    ],
    name: "encrypt",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Point",
            name: "c2",
            type: "tuple",
          },
        ],
        internalType: "struct EGCT",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "_point",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_scalar",
        type: "uint256",
      },
    ],
    name: "scalarMultiply",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460195761065f908161001f823930815050f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806304068d3a1461008757806334603b1a146100825780634fa78ada1461007d5780637a634a72146100785780637bb10bcb14610073578063e493ef8c1461006e5763ef69ca3a1461006957600080fd5b610298565b610274565b61024b565b610235565b610190565b61016c565b60603660031901126100e9576100e56100b46100a236610124565b604435906100ae6102d1565b50610309565b6040519182918281518051825260209081015181830152918201518051604083015290910151606082015260800190565b0390f35b600080fd5b604051906040820182811067ffffffffffffffff82111761010e57604052565b634e487b7160e01b600052604160045260246000fd5b60409060031901126100e9576101386100ee565b9060043582526024356020830152565b60409060431901126100e95761015c6100ee565b9060443582526064356020830152565b60603660031901126100e9576100e56100b461018736610124565b60443590610309565b60803660031901126100e9576101a536610124565b6101ae36610148565b6101b66102bb565b506101bf6102bb565b50805160008051602061060a8339815191520360008051602061060a833981519152811161021f5760409260206102079301516101fa6100ee565b92835260208301526103ab565b61021d8251809260208091805184520151910152565bf35b634e487b7160e01b600052601160045260246000fd5b60003660031901126100e957604061020761034e565b60803660031901126100e957604061020761026536610124565b61026e36610148565b906103ab565b60003660031901126100e957602060405160008051602061060a8339815191528152f35b60603660031901126100e95760406102076102b236610124565b604435906104aa565b6102c36100ee565b906000825260006020830152565b6102d96100ee565b906102e26100ee565b600081526000602082015282526102f76100ee565b60008152600060208201526020830152565b9061033b906103166102d1565b5061026e61032261034e565b9161033561032f84610442565b95610442565b926104aa565b6103436100ee565b918252602082015290565b6103566102bb565b5061035f6100ee565b7f0bb77a6ad63e739b4eacb2e09d6277c12ab8d8010534e0b62893f3f6bb95705181527f25797203f7a0b24925572e1cd16bf9edfce0051fb9e133774b3c257a872d7d8b602082015290565b9060008051602061060a83398151915261042d6104288261041281956103cf6102bb565b5082808951835190099687928160208c0191818351818080602086019384519009809a09620292f8099e5190519009925190519009900896620292fc0990610568565b9361042082886001086105a2565b90099461052d565b6105a2565b906104366100ee565b93845209602082015290565b61044a6102bb565b50600180916104576100ee565b6000815260016020820152925b61046d57505090565b60018216610494575b610489906104826102bb565b50806103ab565b9060011c9081610464565b916104a283610489926103ab565b929050610476565b907f060c89ce5c263405370a08b6d0302b0bab3eedb83920ee0a677297dc392126f1906104d56102bb565b500680916104e16100ee565b6000815260016020820152925b6104f757505090565b60018216610517575b61050c906104826102bb565b9060011c90816104ee565b916105258361050c926103ab565b929050610500565b60008051602061060a8339815191520360008051602061060a833981519152811161021f5760008051602061060a8339815191529060010890565b9060008051602061060a8339815191520360008051602061060a833981519152811161021f5760008051602061060a833981519152910890565b60405190602082526020808301526020604083015260608201527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff608082015260008051602061060a83398151915260a082015260208160c08160055afa156100e957519056fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122097f3bcbc44bb33568bf37d879ef06ce0c33940a798642ccf725f88db92dddf3264736f6c634300081b0033";

type BabyJubJubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BabyJubJubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BabyJubJub__factory extends ContractFactory {
  constructor(...args: BabyJubJubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BabyJubJub & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BabyJubJub__factory {
    return super.connect(runner) as BabyJubJub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BabyJubJubInterface {
    return new Interface(_abi) as BabyJubJubInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BabyJubJub {
    return new Contract(address, _abi, runner) as unknown as BabyJubJub;
  }
}
