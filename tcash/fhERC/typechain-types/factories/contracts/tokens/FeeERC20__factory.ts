/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FeeERC20,
  FeeERC20Interface,
} from "../../../contracts/tokens/FeeERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "feePercentage_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeRecipient_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFeePercentage",
        type: "uint256",
      },
    ],
    name: "setFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFeeRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346103f357610e4580380380610019816103f8565b92833981019060a0818303126103f35780516001600160401b0381116103f3578261004591830161041d565b602082015190926001600160401b0382116103f35761006591830161041d565b9160408201519160ff831683036103f35760608101516080909101516001600160a01b03811692908390036103f3578051906001600160401b0382116102f05760035490600182811c921680156103e9575b60208310146102d05781601f849311610379575b50602090601f831160011461031157600092610306575b50508160011b916000199060031b1c1916176003555b83516001600160401b0381116102f057600454600181811c911680156102e6575b60208210146102d057601f811161026b575b50602094601f8211600114610204579481929394956000926101f9575b50508160011b916000199060031b1c1916176004555b33156101e35760055460405193336001600160a01b0383167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a81b03199091163360ff60a01b19161760a09190911b60ff60a01b1617600555600655600780546001600160a01b0319169190911790556109bc90816104898239f35b631e4fbdf760e01b600052600060045260246000fd5b015190503880610148565b601f198216956004600052806000209160005b8881106102535750836001959697981061023a575b505050811b0160045561015e565b015160001960f88460031b161c1916905538808061022c565b91926020600181928685015181550194019201610217565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106102c6575b601f0160051c01905b8181106102ba575061012b565b600081556001016102ad565b90915081906102a4565b634e487b7160e01b600052602260045260246000fd5b90607f1690610119565b634e487b7160e01b600052604160045260246000fd5b0151905038806100e2565b600360009081528281209350601f198516905b8181106103615750908460019594939210610348575b505050811b016003556100f8565b015160001960f88460031b161c1916905538808061033a565b92936020600181928786015181550195019301610324565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191602085106103df575b90601f859493920160051c01905b8181106103d057506100cb565b600081558493506001016103c3565b90915081906103b5565b91607f16916100b7565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176102f057604052565b81601f820112156103f3578051906001600160401b0382116102f05761044c601f8301601f19166020016103f8565b92828452602083830101116103f35760005b82811061047357505060206000918301015290565b8060208092840101518282870101520161045e56fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461076657508063095ea7b3146106e057806318160ddd146106c257806323b872dd146105d5578063313ce567146105b157806340c10f191461050557806346904840146104dc57806370a08231146104a2578063715018a6146104455780638da5cb5b1461041c57806395d89b41146102fb578063a001ecdd146102dd578063a9059cbb146102ac578063ae06c1b714610244578063dd62ed3e146101f3578063e74b981b146101695763f2fde38b146100da57600080fd5b34610164576020366003190112610164576100f3610882565b6100fb61095d565b6001600160a01b0316801561014e57600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b3461016457602036600319011261016457610182610882565b61018a61095d565b6001600160a01b031680156101b6576bffffffffffffffffffffffff60a01b6007541617600755600080f35b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908199959481c9958da5c1a595b9d605a1b6044820152606490fd5b346101645760403660031901126101645761020c610882565b610214610898565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b346101645760203660031901126101645760043561026061095d565b612710811161026e57600655005b60405162461bcd60e51b81526020600482015260166024820152754665652063616e6e6f7420657863656564203130302560501b6044820152606490fd5b34610164576040366003190112610164576102d26102c8610882565b60243590336108ae565b602060405160018152f35b34610164576000366003190112610164576020600654604051908152f35b346101645760003660031901126101645760405160006004548060011c90600181168015610412575b6020831081146103fe578285529081156103e2575060011461038b575b50819003601f01601f191681019067ffffffffffffffff8211818310176103755761037182918260405282610839565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106103cc57506020915082010182610341565b60018160209254838588010152019101906103b7565b90506020925060ff191682840152151560051b82010182610341565b634e487b7160e01b84526022600452602484fd5b91607f1691610324565b34610164576000366003190112610164576005546040516001600160a01b039091168152602090f35b346101645760003660031901126101645761045e61095d565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610164576020366003190112610164576001600160a01b036104c3610882565b1660005260006020526020604060002054604051908152f35b34610164576000366003190112610164576007546040516001600160a01b039091168152602090f35b346101645760403660031901126101645761051e610882565b602435906001600160a01b0316801561059b5760025491808301809311610585576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b3461016457600036600319011261016457602060ff60055460a01c16604051908152f35b34610164576060366003190112610164576105ee610882565b6105f6610898565b6001600160a01b0382166000818152600160209081526040808320338452909152902054909260443592916000198110610636575b506102d293506108ae565b8381106106a557841561068f573315610679576102d2946000526001602052604060002060018060a01b033316600052602052836040600020910390558461062b565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b34610164576000366003190112610164576020600254604051908152f35b34610164576040366003190112610164576106f9610882565b60243590331561068f576001600160a01b031690811561067957336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101645760003660031901126101645760006003548060011c9060018116801561082f575b6020831081146103fe578285529081156103e257506001146107d85750819003601f01601f191681019067ffffffffffffffff8211818310176103755761037182918260405282610839565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b82821061081957506020915082010182610341565b6001816020925483858801015201910190610804565b91607f169161078c565b91909160208152825180602083015260005b81811061086c575060409293506000838284010152601f8019910116010190565b806020809287010151604082860101520161084b565b600435906001600160a01b038216820361016457565b602435906001600160a01b038216820361016457565b6001600160a01b0316908115610947576001600160a01b031691821561059b57600082815280602052604081205482811061092d5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b6005546001600160a01b0316330361097157565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212200202eae53334edf44a05bcdd35b9266717fcc28716a95651d0d8ba264e339ce864736f6c634300081b0033";

type FeeERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeERC20__factory extends ContractFactory {
  constructor(...args: FeeERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    feePercentage_: BigNumberish,
    feeRecipient_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      decimals_,
      feePercentage_,
      feeRecipient_,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    feePercentage_: BigNumberish,
    feeRecipient_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      decimals_,
      feePercentage_,
      feeRecipient_,
      overrides || {}
    ) as Promise<
      FeeERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeERC20__factory {
    return super.connect(runner) as FeeERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeERC20Interface {
    return new Interface(_abi) as FeeERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): FeeERC20 {
    return new Contract(address, _abi, runner) as unknown as FeeERC20;
  }
}
